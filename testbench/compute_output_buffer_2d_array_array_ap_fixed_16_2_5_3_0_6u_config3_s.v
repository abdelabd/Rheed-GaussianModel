// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module compute_output_buffer_2d_array_array_ap_fixed_16_2_5_3_0_6u_config3_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        res_stream_V_data_0_V_din,
        res_stream_V_data_0_V_full_n,
        res_stream_V_data_0_V_write,
        res_stream_V_data_1_V_din,
        res_stream_V_data_1_V_full_n,
        res_stream_V_data_1_V_write,
        res_stream_V_data_2_V_din,
        res_stream_V_data_2_V_full_n,
        res_stream_V_data_2_V_write,
        res_stream_V_data_3_V_din,
        res_stream_V_data_3_V_full_n,
        res_stream_V_data_3_V_write,
        res_stream_V_data_4_V_din,
        res_stream_V_data_4_V_full_n,
        res_stream_V_data_4_V_write,
        res_stream_V_data_5_V_din,
        res_stream_V_data_5_V_full_n,
        res_stream_V_data_5_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read;
output  [15:0] res_stream_V_data_0_V_din;
input   res_stream_V_data_0_V_full_n;
output   res_stream_V_data_0_V_write;
output  [15:0] res_stream_V_data_1_V_din;
input   res_stream_V_data_1_V_full_n;
output   res_stream_V_data_1_V_write;
output  [15:0] res_stream_V_data_2_V_din;
input   res_stream_V_data_2_V_full_n;
output   res_stream_V_data_2_V_write;
output  [15:0] res_stream_V_data_3_V_din;
input   res_stream_V_data_3_V_full_n;
output   res_stream_V_data_3_V_write;
output  [15:0] res_stream_V_data_4_V_din;
input   res_stream_V_data_4_V_full_n;
output   res_stream_V_data_4_V_write;
output  [15:0] res_stream_V_data_5_V_din;
input   res_stream_V_data_5_V_full_n;
output   res_stream_V_data_5_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_stream_V_data_0_V_write;
reg res_stream_V_data_1_V_write;
reg res_stream_V_data_2_V_write;
reg res_stream_V_data_3_V_write;
reg res_stream_V_data_4_V_write;
reg res_stream_V_data_5_V_write;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] kernel_data_V_1223;
reg   [15:0] kernel_data_V_2;
reg   [15:0] kernel_data_V_3;
reg   [15:0] kernel_data_V_4;
reg   [15:0] kernel_data_V_6;
reg   [15:0] kernel_data_V_7;
reg   [15:0] kernel_data_V_8;
reg   [15:0] kernel_data_V_9;
reg   [15:0] kernel_data_V_11;
reg   [15:0] kernel_data_V_12;
reg   [15:0] kernel_data_V_13;
reg   [15:0] kernel_data_V_14;
reg   [15:0] kernel_data_V_16;
reg   [15:0] kernel_data_V_17;
reg   [15:0] kernel_data_V_18;
reg   [15:0] kernel_data_V_19;
reg   [15:0] kernel_data_V_21;
reg   [15:0] kernel_data_V_22;
reg   [15:0] kernel_data_V_23;
reg   [15:0] kernel_data_V_24;
reg   [15:0] kernel_data_V_0;
reg   [15:0] kernel_data_V_5;
reg   [15:0] kernel_data_V_10;
reg   [15:0] kernel_data_V_15;
reg   [15:0] kernel_data_V_20;
reg   [31:0] sX_1;
reg   [31:0] sY_1;
reg   [31:0] pY_1;
reg   [31:0] pX_1;
reg    res_stream_V_data_0_V_blk_n;
wire    ap_CS_fsm_state3;
reg   [0:0] and_ln289_2_reg_883;
reg    res_stream_V_data_1_V_blk_n;
reg    res_stream_V_data_2_V_blk_n;
reg    res_stream_V_data_3_V_blk_n;
reg    res_stream_V_data_4_V_blk_n;
reg    res_stream_V_data_5_V_blk_n;
reg   [31:0] sX_1_load_reg_851;
wire   [0:0] icmp_ln289_fu_666_p2;
reg   [0:0] icmp_ln289_reg_856;
reg   [31:0] sY_1_load_reg_861;
wire   [0:0] icmp_ln289_1_fu_676_p2;
reg   [0:0] icmp_ln289_1_reg_866;
reg   [31:0] pY_1_load_reg_871;
reg   [31:0] pX_1_load_reg_877;
wire   [0:0] and_ln289_2_fu_734_p2;
reg   [15:0] tmp_data_0_V_reg_887;
wire    ap_CS_fsm_state2;
wire    grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_ready;
wire    grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_done;
reg   [15:0] tmp_data_1_V_reg_892;
reg   [15:0] tmp_data_2_V_reg_897;
reg   [15:0] tmp_data_3_V_reg_902;
reg   [15:0] tmp_data_4_V_reg_907;
reg   [15:0] tmp_data_5_V_reg_912;
wire    grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start;
wire    grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_idle;
wire   [15:0] grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_0;
wire   [15:0] grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_1;
wire   [15:0] grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_2;
wire   [15:0] grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_3;
wire   [15:0] grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_4;
wire   [15:0] grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_5;
reg    call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_start;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_done;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_idle;
wire    call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_ready;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_0;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_1;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_2;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_3;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_4;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_5;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_6;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_7;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_8;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_9;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_10;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_11;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_12;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_13;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_14;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_15;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_16;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_17;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_18;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_19;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_20;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_21;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_22;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_23;
wire   [15:0] call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_24;
wire   [31:0] select_ln323_fu_831_p3;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_215_p4;
wire    io_acc_block_signal_op104;
reg    ap_block_state3;
wire   [0:0] icmp_ln313_fu_764_p2;
wire   [0:0] icmp_ln317_fu_810_p2;
reg    grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start_reg;
wire   [31:0] select_ln328_fu_785_p3;
wire   [31:0] add_ln321_fu_815_p2;
wire   [31:0] add_ln326_fu_769_p2;
wire   [29:0] tmp_21_fu_686_p4;
wire   [29:0] tmp_22_fu_706_p4;
wire   [0:0] icmp_ln289_2_fu_696_p2;
wire   [0:0] icmp_ln289_3_fu_716_p2;
wire   [0:0] and_ln289_1_fu_728_p2;
wire   [0:0] and_ln289_fu_722_p2;
wire   [31:0] add_ln328_fu_780_p2;
wire   [31:0] add_ln323_fu_826_p2;
reg   [2:0] ap_NS_fsm;
reg    ap_condition_226;
reg    ap_condition_322;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 kernel_data_V_1223 = 16'd0;
#0 kernel_data_V_2 = 16'd0;
#0 kernel_data_V_3 = 16'd0;
#0 kernel_data_V_4 = 16'd0;
#0 kernel_data_V_6 = 16'd0;
#0 kernel_data_V_7 = 16'd0;
#0 kernel_data_V_8 = 16'd0;
#0 kernel_data_V_9 = 16'd0;
#0 kernel_data_V_11 = 16'd0;
#0 kernel_data_V_12 = 16'd0;
#0 kernel_data_V_13 = 16'd0;
#0 kernel_data_V_14 = 16'd0;
#0 kernel_data_V_16 = 16'd0;
#0 kernel_data_V_17 = 16'd0;
#0 kernel_data_V_18 = 16'd0;
#0 kernel_data_V_19 = 16'd0;
#0 kernel_data_V_21 = 16'd0;
#0 kernel_data_V_22 = 16'd0;
#0 kernel_data_V_23 = 16'd0;
#0 kernel_data_V_24 = 16'd0;
#0 kernel_data_V_0 = 16'd0;
#0 kernel_data_V_5 = 16'd0;
#0 kernel_data_V_10 = 16'd0;
#0 kernel_data_V_15 = 16'd0;
#0 kernel_data_V_20 = 16'd0;
#0 sX_1 = 32'd0;
#0 sY_1 = 32'd0;
#0 pY_1 = 32'd0;
#0 pX_1 = 32'd0;
#0 grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start_reg = 1'b0;
end

dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start),
    .ap_done(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_done),
    .ap_idle(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_idle),
    .ap_ready(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_ready),
    .kernel_data_V_0(kernel_data_V_0),
    .kernel_data_V_1223(kernel_data_V_1223),
    .kernel_data_V_2(kernel_data_V_2),
    .kernel_data_V_3(kernel_data_V_3),
    .kernel_data_V_4(kernel_data_V_4),
    .kernel_data_V_5(kernel_data_V_5),
    .kernel_data_V_6(kernel_data_V_6),
    .kernel_data_V_7(kernel_data_V_7),
    .kernel_data_V_8(kernel_data_V_8),
    .kernel_data_V_9(kernel_data_V_9),
    .kernel_data_V_10(kernel_data_V_10),
    .kernel_data_V_11(kernel_data_V_11),
    .kernel_data_V_12(kernel_data_V_12),
    .kernel_data_V_13(kernel_data_V_13),
    .kernel_data_V_14(kernel_data_V_14),
    .kernel_data_V_15(kernel_data_V_15),
    .kernel_data_V_16(kernel_data_V_16),
    .kernel_data_V_17(kernel_data_V_17),
    .kernel_data_V_18(kernel_data_V_18),
    .kernel_data_V_19(kernel_data_V_19),
    .kernel_data_V_20(kernel_data_V_20),
    .kernel_data_V_21(kernel_data_V_21),
    .kernel_data_V_22(kernel_data_V_22),
    .kernel_data_V_23(kernel_data_V_23),
    .kernel_data_V_24(kernel_data_V_24),
    .ap_return_0(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_0),
    .ap_return_1(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_1),
    .ap_return_2(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_2),
    .ap_return_3(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_3),
    .ap_return_4(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_4),
    .ap_return_5(grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_5)
);

shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_start),
    .ap_done(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_done),
    .ap_idle(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_idle),
    .ap_ready(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_ready),
    .kernel_window_24_V_write(p_read),
    .kernel_window_1_V_read(kernel_data_V_1223),
    .kernel_window_2_V_read(kernel_data_V_2),
    .kernel_window_3_V_read(kernel_data_V_3),
    .kernel_window_4_V_read(kernel_data_V_4),
    .kernel_window_6_V_read(kernel_data_V_6),
    .kernel_window_7_V_read(kernel_data_V_7),
    .kernel_window_8_V_read(kernel_data_V_8),
    .kernel_window_9_V_read(kernel_data_V_9),
    .kernel_window_11_V_read(kernel_data_V_11),
    .kernel_window_12_V_read(kernel_data_V_12),
    .kernel_window_13_V_read(kernel_data_V_13),
    .kernel_window_14_V_read(kernel_data_V_14),
    .kernel_window_16_V_read(kernel_data_V_16),
    .kernel_window_17_V_read(kernel_data_V_17),
    .kernel_window_18_V_read(kernel_data_V_18),
    .kernel_window_19_V_read(kernel_data_V_19),
    .kernel_window_21_V_read(kernel_data_V_21),
    .kernel_window_22_V_read(kernel_data_V_22),
    .kernel_window_23_V_read(kernel_data_V_23),
    .kernel_window_24_V_read(kernel_data_V_24),
    .ap_return_0(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_0),
    .ap_return_1(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_1),
    .ap_return_2(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_2),
    .ap_return_3(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_3),
    .ap_return_4(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_4),
    .ap_return_5(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_5),
    .ap_return_6(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_6),
    .ap_return_7(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_7),
    .ap_return_8(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_8),
    .ap_return_9(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_9),
    .ap_return_10(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_10),
    .ap_return_11(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_11),
    .ap_return_12(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_12),
    .ap_return_13(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_13),
    .ap_return_14(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_14),
    .ap_return_15(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_15),
    .ap_return_16(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_16),
    .ap_return_17(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_17),
    .ap_return_18(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_18),
    .ap_return_19(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_19),
    .ap_return_20(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_20),
    .ap_return_21(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_21),
    .ap_return_22(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_22),
    .ap_return_23(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_23),
    .ap_return_24(call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_24)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'd1 == and_ln289_2_fu_734_p2) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start_reg <= 1'b1;
        end else if ((grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_ready == 1'b1)) begin
            grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if ((icmp_ln313_fu_764_p2 == 1'd1)) begin
            pX_1 <= 32'd0;
        end else if ((icmp_ln313_fu_764_p2 == 1'd0)) begin
            pX_1 <= add_ln326_fu_769_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_322)) begin
        if ((icmp_ln317_fu_810_p2 == 1'd1)) begin
            pY_1 <= 32'd0;
        end else if ((icmp_ln317_fu_810_p2 == 1'd0)) begin
            pY_1 <= add_ln321_fu_815_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_226)) begin
        if ((icmp_ln313_fu_764_p2 == 1'd1)) begin
            sX_1 <= 32'd0;
        end else if ((icmp_ln313_fu_764_p2 == 1'd0)) begin
            sX_1 <= select_ln328_fu_785_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln289_2_reg_883 <= and_ln289_2_fu_734_p2;
        icmp_ln289_1_reg_866 <= icmp_ln289_1_fu_676_p2;
        icmp_ln289_reg_856 <= icmp_ln289_fu_666_p2;
        kernel_data_V_0 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_0;
        kernel_data_V_10 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_2;
        kernel_data_V_11 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_13;
        kernel_data_V_12 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_14;
        kernel_data_V_1223 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_5;
        kernel_data_V_13 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_15;
        kernel_data_V_14 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_16;
        kernel_data_V_15 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_3;
        kernel_data_V_16 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_17;
        kernel_data_V_17 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_18;
        kernel_data_V_18 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_19;
        kernel_data_V_19 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_20;
        kernel_data_V_2 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_6;
        kernel_data_V_20 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_4;
        kernel_data_V_21 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_21;
        kernel_data_V_22 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_22;
        kernel_data_V_23 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_23;
        kernel_data_V_24 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_24;
        kernel_data_V_3 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_7;
        kernel_data_V_4 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_8;
        kernel_data_V_5 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_1;
        kernel_data_V_6 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_9;
        kernel_data_V_7 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_10;
        kernel_data_V_8 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_11;
        kernel_data_V_9 <= call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_return_12;
        pX_1_load_reg_877 <= pX_1;
        pY_1_load_reg_871 <= pY_1;
        sX_1_load_reg_851 <= sX_1;
        sY_1_load_reg_861 <= sY_1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (icmp_ln313_fu_764_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        sY_1 <= ap_phi_mux_storemerge_phi_fu_215_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_done == 1'b1))) begin
        tmp_data_0_V_reg_887 <= grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_0;
        tmp_data_1_V_reg_892 <= grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_1;
        tmp_data_2_V_reg_897 <= grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_2;
        tmp_data_3_V_reg_902 <= grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_3;
        tmp_data_4_V_reg_907 <= grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_4;
        tmp_data_5_V_reg_912 <= grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_return_5;
    end
end

always @ (*) begin
    if (((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'b1 == ap_CS_fsm_state3)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln313_fu_764_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        if ((icmp_ln317_fu_810_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_215_p4 = 32'd0;
        end else if ((icmp_ln317_fu_810_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_215_p4 = select_ln323_fu_831_p3;
        end else begin
            ap_phi_mux_storemerge_phi_fu_215_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_215_p4 = 'bx;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_start = 1'b1;
    end else begin
        call_ret1_shift_line_buffer_array_ap_fixed_16_2_5_3_0_1u_config3_s_fu_278_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_0_V_blk_n = res_stream_V_data_0_V_full_n;
    end else begin
        res_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_0_V_write = 1'b1;
    end else begin
        res_stream_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_1_V_blk_n = res_stream_V_data_1_V_full_n;
    end else begin
        res_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_1_V_write = 1'b1;
    end else begin
        res_stream_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_2_V_blk_n = res_stream_V_data_2_V_full_n;
    end else begin
        res_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_2_V_write = 1'b1;
    end else begin
        res_stream_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_3_V_blk_n = res_stream_V_data_3_V_full_n;
    end else begin
        res_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_3_V_write = 1'b1;
    end else begin
        res_stream_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_4_V_blk_n = res_stream_V_data_4_V_full_n;
    end else begin
        res_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_4_V_write = 1'b1;
    end else begin
        res_stream_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_5_V_blk_n = res_stream_V_data_5_V_full_n;
    end else begin
        res_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'd1 == and_ln289_2_reg_883) & (1'b1 == ap_CS_fsm_state3))) begin
        res_stream_V_data_5_V_write = 1'b1;
    end else begin
        res_stream_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (1'd0 == and_ln289_2_fu_734_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((ap_start == 1'b1) & (1'd1 == and_ln289_2_fu_734_p2) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln321_fu_815_p2 = (pY_1_load_reg_871 + 32'd1);

assign add_ln323_fu_826_p2 = (sY_1_load_reg_861 + 32'd1);

assign add_ln326_fu_769_p2 = (pX_1_load_reg_877 + 32'd1);

assign add_ln328_fu_780_p2 = (sX_1_load_reg_851 + 32'd1);

assign and_ln289_1_fu_728_p2 = (icmp_ln289_3_fu_716_p2 & icmp_ln289_2_fu_696_p2);

assign and_ln289_2_fu_734_p2 = (and_ln289_fu_722_p2 & and_ln289_1_fu_728_p2);

assign and_ln289_fu_722_p2 = (icmp_ln289_fu_666_p2 & icmp_ln289_1_fu_676_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state3 = ((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0));
end

always @ (*) begin
    ap_condition_226 = (~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (1'b1 == ap_CS_fsm_state3));
end

always @ (*) begin
    ap_condition_322 = (~((1'd1 == and_ln289_2_reg_883) & (io_acc_block_signal_op104 == 1'b0)) & (icmp_ln313_fu_764_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3));
end

assign grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start = grp_dense_resource_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config3_mult_s_fu_222_ap_start_reg;

assign icmp_ln289_1_fu_676_p2 = ((sY_1 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln289_2_fu_696_p2 = (($signed(tmp_21_fu_686_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_3_fu_716_p2 = (($signed(tmp_22_fu_706_p4) > $signed(30'd0)) ? 1'b1 : 1'b0);

assign icmp_ln289_fu_666_p2 = ((sX_1 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln313_fu_764_p2 = ((pX_1_load_reg_877 == 32'd47) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_810_p2 = ((pY_1_load_reg_871 == 32'd47) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op104 = (res_stream_V_data_5_V_full_n & res_stream_V_data_4_V_full_n & res_stream_V_data_3_V_full_n & res_stream_V_data_2_V_full_n & res_stream_V_data_1_V_full_n & res_stream_V_data_0_V_full_n);

assign res_stream_V_data_0_V_din = tmp_data_0_V_reg_887;

assign res_stream_V_data_1_V_din = tmp_data_1_V_reg_892;

assign res_stream_V_data_2_V_din = tmp_data_2_V_reg_897;

assign res_stream_V_data_3_V_din = tmp_data_3_V_reg_902;

assign res_stream_V_data_4_V_din = tmp_data_4_V_reg_907;

assign res_stream_V_data_5_V_din = tmp_data_5_V_reg_912;

assign select_ln323_fu_831_p3 = ((icmp_ln289_1_reg_866[0:0] === 1'b1) ? 32'd4 : add_ln323_fu_826_p2);

assign select_ln328_fu_785_p3 = ((icmp_ln289_reg_856[0:0] === 1'b1) ? 32'd4 : add_ln328_fu_780_p2);

assign tmp_21_fu_686_p4 = {{pY_1[31:2]}};

assign tmp_22_fu_706_p4 = {{pX_1[31:2]}};

endmodule //compute_output_buffer_2d_array_array_ap_fixed_16_2_5_3_0_6u_config3_s
