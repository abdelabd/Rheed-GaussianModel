// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_array_ap_fixed_52u_array_ap_fixed_16_2_5_3_0_5u_config16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_stream_V_data_0_V_dout,
        data_stream_V_data_0_V_empty_n,
        data_stream_V_data_0_V_read,
        data_stream_V_data_1_V_dout,
        data_stream_V_data_1_V_empty_n,
        data_stream_V_data_1_V_read,
        data_stream_V_data_2_V_dout,
        data_stream_V_data_2_V_empty_n,
        data_stream_V_data_2_V_read,
        data_stream_V_data_3_V_dout,
        data_stream_V_data_3_V_empty_n,
        data_stream_V_data_3_V_read,
        data_stream_V_data_4_V_dout,
        data_stream_V_data_4_V_empty_n,
        data_stream_V_data_4_V_read,
        data_stream_V_data_5_V_dout,
        data_stream_V_data_5_V_empty_n,
        data_stream_V_data_5_V_read,
        data_stream_V_data_6_V_dout,
        data_stream_V_data_6_V_empty_n,
        data_stream_V_data_6_V_read,
        data_stream_V_data_7_V_dout,
        data_stream_V_data_7_V_empty_n,
        data_stream_V_data_7_V_read,
        data_stream_V_data_8_V_dout,
        data_stream_V_data_8_V_empty_n,
        data_stream_V_data_8_V_read,
        data_stream_V_data_9_V_dout,
        data_stream_V_data_9_V_empty_n,
        data_stream_V_data_9_V_read,
        data_stream_V_data_10_V_dout,
        data_stream_V_data_10_V_empty_n,
        data_stream_V_data_10_V_read,
        data_stream_V_data_11_V_dout,
        data_stream_V_data_11_V_empty_n,
        data_stream_V_data_11_V_read,
        data_stream_V_data_12_V_dout,
        data_stream_V_data_12_V_empty_n,
        data_stream_V_data_12_V_read,
        data_stream_V_data_13_V_dout,
        data_stream_V_data_13_V_empty_n,
        data_stream_V_data_13_V_read,
        data_stream_V_data_14_V_dout,
        data_stream_V_data_14_V_empty_n,
        data_stream_V_data_14_V_read,
        data_stream_V_data_15_V_dout,
        data_stream_V_data_15_V_empty_n,
        data_stream_V_data_15_V_read,
        data_stream_V_data_16_V_dout,
        data_stream_V_data_16_V_empty_n,
        data_stream_V_data_16_V_read,
        data_stream_V_data_17_V_dout,
        data_stream_V_data_17_V_empty_n,
        data_stream_V_data_17_V_read,
        data_stream_V_data_18_V_dout,
        data_stream_V_data_18_V_empty_n,
        data_stream_V_data_18_V_read,
        data_stream_V_data_19_V_dout,
        data_stream_V_data_19_V_empty_n,
        data_stream_V_data_19_V_read,
        data_stream_V_data_20_V_dout,
        data_stream_V_data_20_V_empty_n,
        data_stream_V_data_20_V_read,
        data_stream_V_data_21_V_dout,
        data_stream_V_data_21_V_empty_n,
        data_stream_V_data_21_V_read,
        data_stream_V_data_22_V_dout,
        data_stream_V_data_22_V_empty_n,
        data_stream_V_data_22_V_read,
        data_stream_V_data_23_V_dout,
        data_stream_V_data_23_V_empty_n,
        data_stream_V_data_23_V_read,
        data_stream_V_data_24_V_dout,
        data_stream_V_data_24_V_empty_n,
        data_stream_V_data_24_V_read,
        data_stream_V_data_25_V_dout,
        data_stream_V_data_25_V_empty_n,
        data_stream_V_data_25_V_read,
        data_stream_V_data_26_V_dout,
        data_stream_V_data_26_V_empty_n,
        data_stream_V_data_26_V_read,
        data_stream_V_data_27_V_dout,
        data_stream_V_data_27_V_empty_n,
        data_stream_V_data_27_V_read,
        data_stream_V_data_28_V_dout,
        data_stream_V_data_28_V_empty_n,
        data_stream_V_data_28_V_read,
        data_stream_V_data_29_V_dout,
        data_stream_V_data_29_V_empty_n,
        data_stream_V_data_29_V_read,
        data_stream_V_data_30_V_dout,
        data_stream_V_data_30_V_empty_n,
        data_stream_V_data_30_V_read,
        data_stream_V_data_31_V_dout,
        data_stream_V_data_31_V_empty_n,
        data_stream_V_data_31_V_read,
        data_stream_V_data_32_V_dout,
        data_stream_V_data_32_V_empty_n,
        data_stream_V_data_32_V_read,
        data_stream_V_data_33_V_dout,
        data_stream_V_data_33_V_empty_n,
        data_stream_V_data_33_V_read,
        data_stream_V_data_34_V_dout,
        data_stream_V_data_34_V_empty_n,
        data_stream_V_data_34_V_read,
        data_stream_V_data_35_V_dout,
        data_stream_V_data_35_V_empty_n,
        data_stream_V_data_35_V_read,
        data_stream_V_data_36_V_dout,
        data_stream_V_data_36_V_empty_n,
        data_stream_V_data_36_V_read,
        data_stream_V_data_37_V_dout,
        data_stream_V_data_37_V_empty_n,
        data_stream_V_data_37_V_read,
        data_stream_V_data_38_V_dout,
        data_stream_V_data_38_V_empty_n,
        data_stream_V_data_38_V_read,
        data_stream_V_data_39_V_dout,
        data_stream_V_data_39_V_empty_n,
        data_stream_V_data_39_V_read,
        data_stream_V_data_40_V_dout,
        data_stream_V_data_40_V_empty_n,
        data_stream_V_data_40_V_read,
        data_stream_V_data_41_V_dout,
        data_stream_V_data_41_V_empty_n,
        data_stream_V_data_41_V_read,
        data_stream_V_data_42_V_dout,
        data_stream_V_data_42_V_empty_n,
        data_stream_V_data_42_V_read,
        data_stream_V_data_43_V_dout,
        data_stream_V_data_43_V_empty_n,
        data_stream_V_data_43_V_read,
        data_stream_V_data_44_V_dout,
        data_stream_V_data_44_V_empty_n,
        data_stream_V_data_44_V_read,
        data_stream_V_data_45_V_dout,
        data_stream_V_data_45_V_empty_n,
        data_stream_V_data_45_V_read,
        data_stream_V_data_46_V_dout,
        data_stream_V_data_46_V_empty_n,
        data_stream_V_data_46_V_read,
        data_stream_V_data_47_V_dout,
        data_stream_V_data_47_V_empty_n,
        data_stream_V_data_47_V_read,
        data_stream_V_data_48_V_dout,
        data_stream_V_data_48_V_empty_n,
        data_stream_V_data_48_V_read,
        data_stream_V_data_49_V_dout,
        data_stream_V_data_49_V_empty_n,
        data_stream_V_data_49_V_read,
        data_stream_V_data_50_V_dout,
        data_stream_V_data_50_V_empty_n,
        data_stream_V_data_50_V_read,
        data_stream_V_data_51_V_dout,
        data_stream_V_data_51_V_empty_n,
        data_stream_V_data_51_V_read,
        res_stream_V_data_0_V_TDATA,
        res_stream_V_data_0_V_TVALID,
        res_stream_V_data_0_V_TREADY,
        res_stream_V_data_1_V_TDATA,
        res_stream_V_data_1_V_TVALID,
        res_stream_V_data_1_V_TREADY,
        res_stream_V_data_2_V_TDATA,
        res_stream_V_data_2_V_TVALID,
        res_stream_V_data_2_V_TREADY,
        res_stream_V_data_3_V_TDATA,
        res_stream_V_data_3_V_TVALID,
        res_stream_V_data_3_V_TREADY,
        res_stream_V_data_4_V_TDATA,
        res_stream_V_data_4_V_TVALID,
        res_stream_V_data_4_V_TREADY
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] data_stream_V_data_0_V_dout;
input   data_stream_V_data_0_V_empty_n;
output   data_stream_V_data_0_V_read;
input  [15:0] data_stream_V_data_1_V_dout;
input   data_stream_V_data_1_V_empty_n;
output   data_stream_V_data_1_V_read;
input  [15:0] data_stream_V_data_2_V_dout;
input   data_stream_V_data_2_V_empty_n;
output   data_stream_V_data_2_V_read;
input  [15:0] data_stream_V_data_3_V_dout;
input   data_stream_V_data_3_V_empty_n;
output   data_stream_V_data_3_V_read;
input  [15:0] data_stream_V_data_4_V_dout;
input   data_stream_V_data_4_V_empty_n;
output   data_stream_V_data_4_V_read;
input  [15:0] data_stream_V_data_5_V_dout;
input   data_stream_V_data_5_V_empty_n;
output   data_stream_V_data_5_V_read;
input  [15:0] data_stream_V_data_6_V_dout;
input   data_stream_V_data_6_V_empty_n;
output   data_stream_V_data_6_V_read;
input  [15:0] data_stream_V_data_7_V_dout;
input   data_stream_V_data_7_V_empty_n;
output   data_stream_V_data_7_V_read;
input  [15:0] data_stream_V_data_8_V_dout;
input   data_stream_V_data_8_V_empty_n;
output   data_stream_V_data_8_V_read;
input  [15:0] data_stream_V_data_9_V_dout;
input   data_stream_V_data_9_V_empty_n;
output   data_stream_V_data_9_V_read;
input  [15:0] data_stream_V_data_10_V_dout;
input   data_stream_V_data_10_V_empty_n;
output   data_stream_V_data_10_V_read;
input  [15:0] data_stream_V_data_11_V_dout;
input   data_stream_V_data_11_V_empty_n;
output   data_stream_V_data_11_V_read;
input  [15:0] data_stream_V_data_12_V_dout;
input   data_stream_V_data_12_V_empty_n;
output   data_stream_V_data_12_V_read;
input  [15:0] data_stream_V_data_13_V_dout;
input   data_stream_V_data_13_V_empty_n;
output   data_stream_V_data_13_V_read;
input  [15:0] data_stream_V_data_14_V_dout;
input   data_stream_V_data_14_V_empty_n;
output   data_stream_V_data_14_V_read;
input  [15:0] data_stream_V_data_15_V_dout;
input   data_stream_V_data_15_V_empty_n;
output   data_stream_V_data_15_V_read;
input  [15:0] data_stream_V_data_16_V_dout;
input   data_stream_V_data_16_V_empty_n;
output   data_stream_V_data_16_V_read;
input  [15:0] data_stream_V_data_17_V_dout;
input   data_stream_V_data_17_V_empty_n;
output   data_stream_V_data_17_V_read;
input  [15:0] data_stream_V_data_18_V_dout;
input   data_stream_V_data_18_V_empty_n;
output   data_stream_V_data_18_V_read;
input  [15:0] data_stream_V_data_19_V_dout;
input   data_stream_V_data_19_V_empty_n;
output   data_stream_V_data_19_V_read;
input  [15:0] data_stream_V_data_20_V_dout;
input   data_stream_V_data_20_V_empty_n;
output   data_stream_V_data_20_V_read;
input  [15:0] data_stream_V_data_21_V_dout;
input   data_stream_V_data_21_V_empty_n;
output   data_stream_V_data_21_V_read;
input  [15:0] data_stream_V_data_22_V_dout;
input   data_stream_V_data_22_V_empty_n;
output   data_stream_V_data_22_V_read;
input  [15:0] data_stream_V_data_23_V_dout;
input   data_stream_V_data_23_V_empty_n;
output   data_stream_V_data_23_V_read;
input  [15:0] data_stream_V_data_24_V_dout;
input   data_stream_V_data_24_V_empty_n;
output   data_stream_V_data_24_V_read;
input  [15:0] data_stream_V_data_25_V_dout;
input   data_stream_V_data_25_V_empty_n;
output   data_stream_V_data_25_V_read;
input  [15:0] data_stream_V_data_26_V_dout;
input   data_stream_V_data_26_V_empty_n;
output   data_stream_V_data_26_V_read;
input  [15:0] data_stream_V_data_27_V_dout;
input   data_stream_V_data_27_V_empty_n;
output   data_stream_V_data_27_V_read;
input  [15:0] data_stream_V_data_28_V_dout;
input   data_stream_V_data_28_V_empty_n;
output   data_stream_V_data_28_V_read;
input  [15:0] data_stream_V_data_29_V_dout;
input   data_stream_V_data_29_V_empty_n;
output   data_stream_V_data_29_V_read;
input  [15:0] data_stream_V_data_30_V_dout;
input   data_stream_V_data_30_V_empty_n;
output   data_stream_V_data_30_V_read;
input  [15:0] data_stream_V_data_31_V_dout;
input   data_stream_V_data_31_V_empty_n;
output   data_stream_V_data_31_V_read;
input  [15:0] data_stream_V_data_32_V_dout;
input   data_stream_V_data_32_V_empty_n;
output   data_stream_V_data_32_V_read;
input  [15:0] data_stream_V_data_33_V_dout;
input   data_stream_V_data_33_V_empty_n;
output   data_stream_V_data_33_V_read;
input  [15:0] data_stream_V_data_34_V_dout;
input   data_stream_V_data_34_V_empty_n;
output   data_stream_V_data_34_V_read;
input  [15:0] data_stream_V_data_35_V_dout;
input   data_stream_V_data_35_V_empty_n;
output   data_stream_V_data_35_V_read;
input  [15:0] data_stream_V_data_36_V_dout;
input   data_stream_V_data_36_V_empty_n;
output   data_stream_V_data_36_V_read;
input  [15:0] data_stream_V_data_37_V_dout;
input   data_stream_V_data_37_V_empty_n;
output   data_stream_V_data_37_V_read;
input  [15:0] data_stream_V_data_38_V_dout;
input   data_stream_V_data_38_V_empty_n;
output   data_stream_V_data_38_V_read;
input  [15:0] data_stream_V_data_39_V_dout;
input   data_stream_V_data_39_V_empty_n;
output   data_stream_V_data_39_V_read;
input  [15:0] data_stream_V_data_40_V_dout;
input   data_stream_V_data_40_V_empty_n;
output   data_stream_V_data_40_V_read;
input  [15:0] data_stream_V_data_41_V_dout;
input   data_stream_V_data_41_V_empty_n;
output   data_stream_V_data_41_V_read;
input  [15:0] data_stream_V_data_42_V_dout;
input   data_stream_V_data_42_V_empty_n;
output   data_stream_V_data_42_V_read;
input  [15:0] data_stream_V_data_43_V_dout;
input   data_stream_V_data_43_V_empty_n;
output   data_stream_V_data_43_V_read;
input  [15:0] data_stream_V_data_44_V_dout;
input   data_stream_V_data_44_V_empty_n;
output   data_stream_V_data_44_V_read;
input  [15:0] data_stream_V_data_45_V_dout;
input   data_stream_V_data_45_V_empty_n;
output   data_stream_V_data_45_V_read;
input  [15:0] data_stream_V_data_46_V_dout;
input   data_stream_V_data_46_V_empty_n;
output   data_stream_V_data_46_V_read;
input  [15:0] data_stream_V_data_47_V_dout;
input   data_stream_V_data_47_V_empty_n;
output   data_stream_V_data_47_V_read;
input  [15:0] data_stream_V_data_48_V_dout;
input   data_stream_V_data_48_V_empty_n;
output   data_stream_V_data_48_V_read;
input  [15:0] data_stream_V_data_49_V_dout;
input   data_stream_V_data_49_V_empty_n;
output   data_stream_V_data_49_V_read;
input  [15:0] data_stream_V_data_50_V_dout;
input   data_stream_V_data_50_V_empty_n;
output   data_stream_V_data_50_V_read;
input  [15:0] data_stream_V_data_51_V_dout;
input   data_stream_V_data_51_V_empty_n;
output   data_stream_V_data_51_V_read;
output  [15:0] res_stream_V_data_0_V_TDATA;
output   res_stream_V_data_0_V_TVALID;
input   res_stream_V_data_0_V_TREADY;
output  [15:0] res_stream_V_data_1_V_TDATA;
output   res_stream_V_data_1_V_TVALID;
input   res_stream_V_data_1_V_TREADY;
output  [15:0] res_stream_V_data_2_V_TDATA;
output   res_stream_V_data_2_V_TVALID;
input   res_stream_V_data_2_V_TREADY;
output  [15:0] res_stream_V_data_3_V_TDATA;
output   res_stream_V_data_3_V_TVALID;
input   res_stream_V_data_3_V_TREADY;
output  [15:0] res_stream_V_data_4_V_TDATA;
output   res_stream_V_data_4_V_TVALID;
input   res_stream_V_data_4_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_stream_V_data_0_V_read;
reg data_stream_V_data_1_V_read;
reg data_stream_V_data_2_V_read;
reg data_stream_V_data_3_V_read;
reg data_stream_V_data_4_V_read;
reg data_stream_V_data_5_V_read;
reg data_stream_V_data_6_V_read;
reg data_stream_V_data_7_V_read;
reg data_stream_V_data_8_V_read;
reg data_stream_V_data_9_V_read;
reg data_stream_V_data_10_V_read;
reg data_stream_V_data_11_V_read;
reg data_stream_V_data_12_V_read;
reg data_stream_V_data_13_V_read;
reg data_stream_V_data_14_V_read;
reg data_stream_V_data_15_V_read;
reg data_stream_V_data_16_V_read;
reg data_stream_V_data_17_V_read;
reg data_stream_V_data_18_V_read;
reg data_stream_V_data_19_V_read;
reg data_stream_V_data_20_V_read;
reg data_stream_V_data_21_V_read;
reg data_stream_V_data_22_V_read;
reg data_stream_V_data_23_V_read;
reg data_stream_V_data_24_V_read;
reg data_stream_V_data_25_V_read;
reg data_stream_V_data_26_V_read;
reg data_stream_V_data_27_V_read;
reg data_stream_V_data_28_V_read;
reg data_stream_V_data_29_V_read;
reg data_stream_V_data_30_V_read;
reg data_stream_V_data_31_V_read;
reg data_stream_V_data_32_V_read;
reg data_stream_V_data_33_V_read;
reg data_stream_V_data_34_V_read;
reg data_stream_V_data_35_V_read;
reg data_stream_V_data_36_V_read;
reg data_stream_V_data_37_V_read;
reg data_stream_V_data_38_V_read;
reg data_stream_V_data_39_V_read;
reg data_stream_V_data_40_V_read;
reg data_stream_V_data_41_V_read;
reg data_stream_V_data_42_V_read;
reg data_stream_V_data_43_V_read;
reg data_stream_V_data_44_V_read;
reg data_stream_V_data_45_V_read;
reg data_stream_V_data_46_V_read;
reg data_stream_V_data_47_V_read;
reg data_stream_V_data_48_V_read;
reg data_stream_V_data_49_V_read;
reg data_stream_V_data_50_V_read;
reg data_stream_V_data_51_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] res_stream_V_data_0_V_1_data_out;
reg    res_stream_V_data_0_V_1_vld_in;
wire    res_stream_V_data_0_V_1_vld_out;
wire    res_stream_V_data_0_V_1_ack_in;
wire    res_stream_V_data_0_V_1_ack_out;
reg   [15:0] res_stream_V_data_0_V_1_payload_A;
reg   [15:0] res_stream_V_data_0_V_1_payload_B;
reg    res_stream_V_data_0_V_1_sel_rd;
reg    res_stream_V_data_0_V_1_sel_wr;
wire    res_stream_V_data_0_V_1_sel;
wire    res_stream_V_data_0_V_1_load_A;
wire    res_stream_V_data_0_V_1_load_B;
reg   [1:0] res_stream_V_data_0_V_1_state;
wire    res_stream_V_data_0_V_1_state_cmp_full;
reg   [15:0] res_stream_V_data_1_V_1_data_out;
reg    res_stream_V_data_1_V_1_vld_in;
wire    res_stream_V_data_1_V_1_vld_out;
wire    res_stream_V_data_1_V_1_ack_in;
wire    res_stream_V_data_1_V_1_ack_out;
reg   [15:0] res_stream_V_data_1_V_1_payload_A;
reg   [15:0] res_stream_V_data_1_V_1_payload_B;
reg    res_stream_V_data_1_V_1_sel_rd;
reg    res_stream_V_data_1_V_1_sel_wr;
wire    res_stream_V_data_1_V_1_sel;
wire    res_stream_V_data_1_V_1_load_A;
wire    res_stream_V_data_1_V_1_load_B;
reg   [1:0] res_stream_V_data_1_V_1_state;
wire    res_stream_V_data_1_V_1_state_cmp_full;
reg   [15:0] res_stream_V_data_2_V_1_data_out;
reg    res_stream_V_data_2_V_1_vld_in;
wire    res_stream_V_data_2_V_1_vld_out;
wire    res_stream_V_data_2_V_1_ack_in;
wire    res_stream_V_data_2_V_1_ack_out;
reg   [15:0] res_stream_V_data_2_V_1_payload_A;
reg   [15:0] res_stream_V_data_2_V_1_payload_B;
reg    res_stream_V_data_2_V_1_sel_rd;
reg    res_stream_V_data_2_V_1_sel_wr;
wire    res_stream_V_data_2_V_1_sel;
wire    res_stream_V_data_2_V_1_load_A;
wire    res_stream_V_data_2_V_1_load_B;
reg   [1:0] res_stream_V_data_2_V_1_state;
wire    res_stream_V_data_2_V_1_state_cmp_full;
reg   [15:0] res_stream_V_data_3_V_1_data_out;
reg    res_stream_V_data_3_V_1_vld_in;
wire    res_stream_V_data_3_V_1_vld_out;
wire    res_stream_V_data_3_V_1_ack_in;
wire    res_stream_V_data_3_V_1_ack_out;
reg   [15:0] res_stream_V_data_3_V_1_payload_A;
reg   [15:0] res_stream_V_data_3_V_1_payload_B;
reg    res_stream_V_data_3_V_1_sel_rd;
reg    res_stream_V_data_3_V_1_sel_wr;
wire    res_stream_V_data_3_V_1_sel;
wire    res_stream_V_data_3_V_1_load_A;
wire    res_stream_V_data_3_V_1_load_B;
reg   [1:0] res_stream_V_data_3_V_1_state;
wire    res_stream_V_data_3_V_1_state_cmp_full;
reg   [15:0] res_stream_V_data_4_V_1_data_out;
reg    res_stream_V_data_4_V_1_vld_in;
wire    res_stream_V_data_4_V_1_vld_out;
wire    res_stream_V_data_4_V_1_ack_in;
wire    res_stream_V_data_4_V_1_ack_out;
reg   [15:0] res_stream_V_data_4_V_1_payload_A;
reg   [15:0] res_stream_V_data_4_V_1_payload_B;
reg    res_stream_V_data_4_V_1_sel_rd;
reg    res_stream_V_data_4_V_1_sel_wr;
wire    res_stream_V_data_4_V_1_sel;
wire    res_stream_V_data_4_V_1_load_A;
wire    res_stream_V_data_4_V_1_load_B;
reg   [1:0] res_stream_V_data_4_V_1_state;
wire    res_stream_V_data_4_V_1_state_cmp_full;
reg    data_stream_V_data_0_V_blk_n;
reg    data_stream_V_data_1_V_blk_n;
reg    data_stream_V_data_2_V_blk_n;
reg    data_stream_V_data_3_V_blk_n;
reg    data_stream_V_data_4_V_blk_n;
reg    data_stream_V_data_5_V_blk_n;
reg    data_stream_V_data_6_V_blk_n;
reg    data_stream_V_data_7_V_blk_n;
reg    data_stream_V_data_8_V_blk_n;
reg    data_stream_V_data_9_V_blk_n;
reg    data_stream_V_data_10_V_blk_n;
reg    data_stream_V_data_11_V_blk_n;
reg    data_stream_V_data_12_V_blk_n;
reg    data_stream_V_data_13_V_blk_n;
reg    data_stream_V_data_14_V_blk_n;
reg    data_stream_V_data_15_V_blk_n;
reg    data_stream_V_data_16_V_blk_n;
reg    data_stream_V_data_17_V_blk_n;
reg    data_stream_V_data_18_V_blk_n;
reg    data_stream_V_data_19_V_blk_n;
reg    data_stream_V_data_20_V_blk_n;
reg    data_stream_V_data_21_V_blk_n;
reg    data_stream_V_data_22_V_blk_n;
reg    data_stream_V_data_23_V_blk_n;
reg    data_stream_V_data_24_V_blk_n;
reg    data_stream_V_data_25_V_blk_n;
reg    data_stream_V_data_26_V_blk_n;
reg    data_stream_V_data_27_V_blk_n;
reg    data_stream_V_data_28_V_blk_n;
reg    data_stream_V_data_29_V_blk_n;
reg    data_stream_V_data_30_V_blk_n;
reg    data_stream_V_data_31_V_blk_n;
reg    data_stream_V_data_32_V_blk_n;
reg    data_stream_V_data_33_V_blk_n;
reg    data_stream_V_data_34_V_blk_n;
reg    data_stream_V_data_35_V_blk_n;
reg    data_stream_V_data_36_V_blk_n;
reg    data_stream_V_data_37_V_blk_n;
reg    data_stream_V_data_38_V_blk_n;
reg    data_stream_V_data_39_V_blk_n;
reg    data_stream_V_data_40_V_blk_n;
reg    data_stream_V_data_41_V_blk_n;
reg    data_stream_V_data_42_V_blk_n;
reg    data_stream_V_data_43_V_blk_n;
reg    data_stream_V_data_44_V_blk_n;
reg    data_stream_V_data_45_V_blk_n;
reg    data_stream_V_data_46_V_blk_n;
reg    data_stream_V_data_47_V_blk_n;
reg    data_stream_V_data_48_V_blk_n;
reg    data_stream_V_data_49_V_blk_n;
reg    data_stream_V_data_50_V_blk_n;
reg    data_stream_V_data_51_V_blk_n;
reg    res_stream_V_data_0_V_TDATA_blk_n;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    res_stream_V_data_1_V_TDATA_blk_n;
reg    res_stream_V_data_2_V_TDATA_blk_n;
reg    res_stream_V_data_3_V_TDATA_blk_n;
reg    res_stream_V_data_4_V_TDATA_blk_n;
reg   [15:0] data_0_V_reg_1240;
wire    io_acc_block_signal_op4;
reg    ap_block_state1;
reg   [15:0] data_1_V_reg_1245;
reg   [15:0] data_2_V_reg_1250;
reg   [15:0] data_3_V_reg_1255;
reg   [15:0] data_4_V_reg_1260;
reg   [15:0] data_5_V_reg_1265;
reg   [15:0] data_6_V_reg_1270;
reg   [15:0] data_7_V_reg_1275;
reg   [15:0] data_8_V_reg_1280;
reg   [15:0] data_9_V_reg_1285;
reg   [15:0] data_10_V_reg_1290;
reg   [15:0] data_11_V_reg_1295;
reg   [15:0] data_12_V_reg_1300;
reg   [15:0] data_13_V_reg_1305;
reg   [15:0] data_14_V_reg_1310;
reg   [15:0] data_15_V_reg_1315;
reg   [15:0] data_16_V_reg_1320;
reg   [15:0] data_17_V_reg_1325;
reg   [15:0] data_18_V_reg_1330;
reg   [15:0] data_19_V_reg_1335;
reg   [15:0] data_20_V_reg_1340;
reg   [15:0] data_21_V_reg_1345;
reg   [15:0] data_22_V_reg_1350;
reg   [15:0] data_23_V_reg_1355;
reg   [15:0] data_24_V_reg_1360;
reg   [15:0] data_25_V_reg_1365;
reg   [15:0] data_26_V_reg_1370;
reg   [15:0] data_27_V_reg_1375;
reg   [15:0] data_28_V_reg_1380;
reg   [15:0] data_29_V_reg_1385;
reg   [15:0] data_30_V_reg_1390;
reg   [15:0] data_31_V_reg_1395;
reg   [15:0] data_32_V_reg_1400;
reg   [15:0] data_33_V_reg_1405;
reg   [15:0] data_34_V_reg_1410;
reg   [15:0] data_35_V_reg_1415;
reg   [15:0] data_36_V_reg_1420;
reg   [15:0] data_37_V_reg_1425;
reg   [15:0] data_38_V_reg_1430;
reg   [15:0] data_39_V_reg_1435;
reg   [15:0] data_40_V_reg_1440;
reg   [15:0] data_41_V_reg_1445;
reg   [15:0] data_42_V_reg_1450;
reg   [15:0] data_43_V_reg_1455;
reg   [15:0] data_44_V_reg_1460;
reg   [15:0] data_45_V_reg_1465;
reg   [15:0] data_46_V_reg_1470;
reg   [15:0] data_47_V_reg_1475;
reg   [15:0] data_48_V_reg_1480;
reg   [15:0] data_49_V_reg_1485;
reg   [15:0] data_50_V_reg_1490;
reg   [15:0] data_51_V_reg_1495;
wire    grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_ready;
wire    grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done;
wire    grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start;
wire    grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_idle;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_0;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_1;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_2;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_3;
wire   [15:0] grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_4;
reg    grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start_reg;
reg    ap_block_state1_ignore_call111;
reg    ap_block_state3;
reg   [2:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 res_stream_V_data_0_V_1_sel_rd = 1'b0;
#0 res_stream_V_data_0_V_1_sel_wr = 1'b0;
#0 res_stream_V_data_0_V_1_state = 2'd0;
#0 res_stream_V_data_1_V_1_sel_rd = 1'b0;
#0 res_stream_V_data_1_V_1_sel_wr = 1'b0;
#0 res_stream_V_data_1_V_1_state = 2'd0;
#0 res_stream_V_data_2_V_1_sel_rd = 1'b0;
#0 res_stream_V_data_2_V_1_sel_wr = 1'b0;
#0 res_stream_V_data_2_V_1_state = 2'd0;
#0 res_stream_V_data_3_V_1_sel_rd = 1'b0;
#0 res_stream_V_data_3_V_1_sel_wr = 1'b0;
#0 res_stream_V_data_3_V_1_state = 2'd0;
#0 res_stream_V_data_4_V_1_sel_rd = 1'b0;
#0 res_stream_V_data_4_V_1_sel_wr = 1'b0;
#0 res_stream_V_data_4_V_1_state = 2'd0;
#0 grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start_reg = 1'b0;
end

dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start),
    .ap_done(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done),
    .ap_idle(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_idle),
    .ap_ready(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_ready),
    .data_0_V_read(data_0_V_reg_1240),
    .data_1_V_read(data_1_V_reg_1245),
    .data_2_V_read(data_2_V_reg_1250),
    .data_3_V_read(data_3_V_reg_1255),
    .data_4_V_read(data_4_V_reg_1260),
    .data_5_V_read(data_5_V_reg_1265),
    .data_6_V_read(data_6_V_reg_1270),
    .data_7_V_read(data_7_V_reg_1275),
    .data_8_V_read(data_8_V_reg_1280),
    .data_9_V_read(data_9_V_reg_1285),
    .data_10_V_read(data_10_V_reg_1290),
    .data_11_V_read(data_11_V_reg_1295),
    .data_12_V_read(data_12_V_reg_1300),
    .data_13_V_read(data_13_V_reg_1305),
    .data_14_V_read(data_14_V_reg_1310),
    .data_15_V_read(data_15_V_reg_1315),
    .data_16_V_read(data_16_V_reg_1320),
    .data_17_V_read(data_17_V_reg_1325),
    .data_18_V_read(data_18_V_reg_1330),
    .data_19_V_read(data_19_V_reg_1335),
    .data_20_V_read(data_20_V_reg_1340),
    .data_21_V_read(data_21_V_reg_1345),
    .data_22_V_read(data_22_V_reg_1350),
    .data_23_V_read(data_23_V_reg_1355),
    .data_24_V_read(data_24_V_reg_1360),
    .data_25_V_read(data_25_V_reg_1365),
    .data_26_V_read(data_26_V_reg_1370),
    .data_27_V_read(data_27_V_reg_1375),
    .data_28_V_read(data_28_V_reg_1380),
    .data_29_V_read(data_29_V_reg_1385),
    .data_30_V_read(data_30_V_reg_1390),
    .data_31_V_read(data_31_V_reg_1395),
    .data_32_V_read(data_32_V_reg_1400),
    .data_33_V_read(data_33_V_reg_1405),
    .data_34_V_read(data_34_V_reg_1410),
    .data_35_V_read(data_35_V_reg_1415),
    .data_36_V_read(data_36_V_reg_1420),
    .data_37_V_read(data_37_V_reg_1425),
    .data_38_V_read(data_38_V_reg_1430),
    .data_39_V_read(data_39_V_reg_1435),
    .data_40_V_read(data_40_V_reg_1440),
    .data_41_V_read(data_41_V_reg_1445),
    .data_42_V_read(data_42_V_reg_1450),
    .data_43_V_read(data_43_V_reg_1455),
    .data_44_V_read(data_44_V_reg_1460),
    .data_45_V_read(data_45_V_reg_1465),
    .data_46_V_read(data_46_V_reg_1470),
    .data_47_V_read(data_47_V_reg_1475),
    .data_48_V_read(data_48_V_reg_1480),
    .data_49_V_read(data_49_V_reg_1485),
    .data_50_V_read(data_50_V_reg_1490),
    .data_51_V_read(data_51_V_reg_1495),
    .ap_return_0(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_0),
    .ap_return_1(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_1),
    .ap_return_2(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_2),
    .ap_return_3(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_3),
    .ap_return_4(grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((res_stream_V_data_0_V_1_ack_in == 1'b0) | (res_stream_V_data_4_V_1_state == 2'd1) | (res_stream_V_data_3_V_1_state == 2'd1) | (res_stream_V_data_2_V_1_state == 2'd1) | (res_stream_V_data_1_V_1_state == 2'd1) | (res_stream_V_data_0_V_1_state == 2'd1) | ((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3)) | ((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3)) | ((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3)) | ((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3)) | ((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start_reg <= 1'b1;
        end else if ((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_ready == 1'b1)) begin
            grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_0_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_stream_V_data_0_V_1_ack_out == 1'b1) & (res_stream_V_data_0_V_1_vld_out == 1'b1))) begin
            res_stream_V_data_0_V_1_sel_rd <= ~res_stream_V_data_0_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_0_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_stream_V_data_0_V_1_ack_in == 1'b1) & (res_stream_V_data_0_V_1_vld_in == 1'b1))) begin
            res_stream_V_data_0_V_1_sel_wr <= ~res_stream_V_data_0_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_0_V_1_state <= 2'd0;
    end else begin
        if ((((res_stream_V_data_0_V_1_vld_in == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd2)) | ((res_stream_V_data_0_V_1_vld_in == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3) & (res_stream_V_data_0_V_1_ack_out == 1'b1)))) begin
            res_stream_V_data_0_V_1_state <= 2'd2;
        end else if ((((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd1)) | ((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3) & (res_stream_V_data_0_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_0_V_1_state <= 2'd1;
        end else if (((~((res_stream_V_data_0_V_1_vld_in == 1'b0) & (res_stream_V_data_0_V_1_ack_out == 1'b1)) & ~((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_vld_in == 1'b1)) & (res_stream_V_data_0_V_1_state == 2'd3)) | ((res_stream_V_data_0_V_1_state == 2'd1) & (res_stream_V_data_0_V_1_ack_out == 1'b1)) | ((res_stream_V_data_0_V_1_state == 2'd2) & (res_stream_V_data_0_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_0_V_1_state <= 2'd3;
        end else begin
            res_stream_V_data_0_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_1_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_stream_V_data_1_V_1_ack_out == 1'b1) & (res_stream_V_data_1_V_1_vld_out == 1'b1))) begin
            res_stream_V_data_1_V_1_sel_rd <= ~res_stream_V_data_1_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_1_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_stream_V_data_1_V_1_ack_in == 1'b1) & (res_stream_V_data_1_V_1_vld_in == 1'b1))) begin
            res_stream_V_data_1_V_1_sel_wr <= ~res_stream_V_data_1_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_1_V_1_state <= 2'd0;
    end else begin
        if ((((res_stream_V_data_1_V_1_vld_in == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd2)) | ((res_stream_V_data_1_V_1_vld_in == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3) & (res_stream_V_data_1_V_1_ack_out == 1'b1)))) begin
            res_stream_V_data_1_V_1_state <= 2'd2;
        end else if ((((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd1)) | ((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3) & (res_stream_V_data_1_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_1_V_1_state <= 2'd1;
        end else if (((~((res_stream_V_data_1_V_1_vld_in == 1'b0) & (res_stream_V_data_1_V_1_ack_out == 1'b1)) & ~((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_vld_in == 1'b1)) & (res_stream_V_data_1_V_1_state == 2'd3)) | ((res_stream_V_data_1_V_1_state == 2'd1) & (res_stream_V_data_1_V_1_ack_out == 1'b1)) | ((res_stream_V_data_1_V_1_state == 2'd2) & (res_stream_V_data_1_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_1_V_1_state <= 2'd3;
        end else begin
            res_stream_V_data_1_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_2_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_stream_V_data_2_V_1_ack_out == 1'b1) & (res_stream_V_data_2_V_1_vld_out == 1'b1))) begin
            res_stream_V_data_2_V_1_sel_rd <= ~res_stream_V_data_2_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_2_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_stream_V_data_2_V_1_ack_in == 1'b1) & (res_stream_V_data_2_V_1_vld_in == 1'b1))) begin
            res_stream_V_data_2_V_1_sel_wr <= ~res_stream_V_data_2_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_2_V_1_state <= 2'd0;
    end else begin
        if ((((res_stream_V_data_2_V_1_vld_in == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd2)) | ((res_stream_V_data_2_V_1_vld_in == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3) & (res_stream_V_data_2_V_1_ack_out == 1'b1)))) begin
            res_stream_V_data_2_V_1_state <= 2'd2;
        end else if ((((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd1)) | ((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3) & (res_stream_V_data_2_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_2_V_1_state <= 2'd1;
        end else if (((~((res_stream_V_data_2_V_1_vld_in == 1'b0) & (res_stream_V_data_2_V_1_ack_out == 1'b1)) & ~((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_vld_in == 1'b1)) & (res_stream_V_data_2_V_1_state == 2'd3)) | ((res_stream_V_data_2_V_1_state == 2'd1) & (res_stream_V_data_2_V_1_ack_out == 1'b1)) | ((res_stream_V_data_2_V_1_state == 2'd2) & (res_stream_V_data_2_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_2_V_1_state <= 2'd3;
        end else begin
            res_stream_V_data_2_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_3_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_stream_V_data_3_V_1_ack_out == 1'b1) & (res_stream_V_data_3_V_1_vld_out == 1'b1))) begin
            res_stream_V_data_3_V_1_sel_rd <= ~res_stream_V_data_3_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_3_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_stream_V_data_3_V_1_ack_in == 1'b1) & (res_stream_V_data_3_V_1_vld_in == 1'b1))) begin
            res_stream_V_data_3_V_1_sel_wr <= ~res_stream_V_data_3_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_3_V_1_state <= 2'd0;
    end else begin
        if ((((res_stream_V_data_3_V_1_vld_in == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd2)) | ((res_stream_V_data_3_V_1_vld_in == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3) & (res_stream_V_data_3_V_1_ack_out == 1'b1)))) begin
            res_stream_V_data_3_V_1_state <= 2'd2;
        end else if ((((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd1)) | ((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3) & (res_stream_V_data_3_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_3_V_1_state <= 2'd1;
        end else if (((~((res_stream_V_data_3_V_1_vld_in == 1'b0) & (res_stream_V_data_3_V_1_ack_out == 1'b1)) & ~((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_vld_in == 1'b1)) & (res_stream_V_data_3_V_1_state == 2'd3)) | ((res_stream_V_data_3_V_1_state == 2'd1) & (res_stream_V_data_3_V_1_ack_out == 1'b1)) | ((res_stream_V_data_3_V_1_state == 2'd2) & (res_stream_V_data_3_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_3_V_1_state <= 2'd3;
        end else begin
            res_stream_V_data_3_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_4_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_stream_V_data_4_V_1_ack_out == 1'b1) & (res_stream_V_data_4_V_1_vld_out == 1'b1))) begin
            res_stream_V_data_4_V_1_sel_rd <= ~res_stream_V_data_4_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_4_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_stream_V_data_4_V_1_ack_in == 1'b1) & (res_stream_V_data_4_V_1_vld_in == 1'b1))) begin
            res_stream_V_data_4_V_1_sel_wr <= ~res_stream_V_data_4_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_stream_V_data_4_V_1_state <= 2'd0;
    end else begin
        if ((((res_stream_V_data_4_V_1_vld_in == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd2)) | ((res_stream_V_data_4_V_1_vld_in == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3) & (res_stream_V_data_4_V_1_ack_out == 1'b1)))) begin
            res_stream_V_data_4_V_1_state <= 2'd2;
        end else if ((((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd1)) | ((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3) & (res_stream_V_data_4_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_4_V_1_state <= 2'd1;
        end else if (((~((res_stream_V_data_4_V_1_vld_in == 1'b0) & (res_stream_V_data_4_V_1_ack_out == 1'b1)) & ~((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_vld_in == 1'b1)) & (res_stream_V_data_4_V_1_state == 2'd3)) | ((res_stream_V_data_4_V_1_state == 2'd1) & (res_stream_V_data_4_V_1_ack_out == 1'b1)) | ((res_stream_V_data_4_V_1_state == 2'd2) & (res_stream_V_data_4_V_1_vld_in == 1'b1)))) begin
            res_stream_V_data_4_V_1_state <= 2'd3;
        end else begin
            res_stream_V_data_4_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_0_V_reg_1240 <= data_stream_V_data_0_V_dout;
        data_10_V_reg_1290 <= data_stream_V_data_10_V_dout;
        data_11_V_reg_1295 <= data_stream_V_data_11_V_dout;
        data_12_V_reg_1300 <= data_stream_V_data_12_V_dout;
        data_13_V_reg_1305 <= data_stream_V_data_13_V_dout;
        data_14_V_reg_1310 <= data_stream_V_data_14_V_dout;
        data_15_V_reg_1315 <= data_stream_V_data_15_V_dout;
        data_16_V_reg_1320 <= data_stream_V_data_16_V_dout;
        data_17_V_reg_1325 <= data_stream_V_data_17_V_dout;
        data_18_V_reg_1330 <= data_stream_V_data_18_V_dout;
        data_19_V_reg_1335 <= data_stream_V_data_19_V_dout;
        data_1_V_reg_1245 <= data_stream_V_data_1_V_dout;
        data_20_V_reg_1340 <= data_stream_V_data_20_V_dout;
        data_21_V_reg_1345 <= data_stream_V_data_21_V_dout;
        data_22_V_reg_1350 <= data_stream_V_data_22_V_dout;
        data_23_V_reg_1355 <= data_stream_V_data_23_V_dout;
        data_24_V_reg_1360 <= data_stream_V_data_24_V_dout;
        data_25_V_reg_1365 <= data_stream_V_data_25_V_dout;
        data_26_V_reg_1370 <= data_stream_V_data_26_V_dout;
        data_27_V_reg_1375 <= data_stream_V_data_27_V_dout;
        data_28_V_reg_1380 <= data_stream_V_data_28_V_dout;
        data_29_V_reg_1385 <= data_stream_V_data_29_V_dout;
        data_2_V_reg_1250 <= data_stream_V_data_2_V_dout;
        data_30_V_reg_1390 <= data_stream_V_data_30_V_dout;
        data_31_V_reg_1395 <= data_stream_V_data_31_V_dout;
        data_32_V_reg_1400 <= data_stream_V_data_32_V_dout;
        data_33_V_reg_1405 <= data_stream_V_data_33_V_dout;
        data_34_V_reg_1410 <= data_stream_V_data_34_V_dout;
        data_35_V_reg_1415 <= data_stream_V_data_35_V_dout;
        data_36_V_reg_1420 <= data_stream_V_data_36_V_dout;
        data_37_V_reg_1425 <= data_stream_V_data_37_V_dout;
        data_38_V_reg_1430 <= data_stream_V_data_38_V_dout;
        data_39_V_reg_1435 <= data_stream_V_data_39_V_dout;
        data_3_V_reg_1255 <= data_stream_V_data_3_V_dout;
        data_40_V_reg_1440 <= data_stream_V_data_40_V_dout;
        data_41_V_reg_1445 <= data_stream_V_data_41_V_dout;
        data_42_V_reg_1450 <= data_stream_V_data_42_V_dout;
        data_43_V_reg_1455 <= data_stream_V_data_43_V_dout;
        data_44_V_reg_1460 <= data_stream_V_data_44_V_dout;
        data_45_V_reg_1465 <= data_stream_V_data_45_V_dout;
        data_46_V_reg_1470 <= data_stream_V_data_46_V_dout;
        data_47_V_reg_1475 <= data_stream_V_data_47_V_dout;
        data_48_V_reg_1480 <= data_stream_V_data_48_V_dout;
        data_49_V_reg_1485 <= data_stream_V_data_49_V_dout;
        data_4_V_reg_1260 <= data_stream_V_data_4_V_dout;
        data_50_V_reg_1490 <= data_stream_V_data_50_V_dout;
        data_51_V_reg_1495 <= data_stream_V_data_51_V_dout;
        data_5_V_reg_1265 <= data_stream_V_data_5_V_dout;
        data_6_V_reg_1270 <= data_stream_V_data_6_V_dout;
        data_7_V_reg_1275 <= data_stream_V_data_7_V_dout;
        data_8_V_reg_1280 <= data_stream_V_data_8_V_dout;
        data_9_V_reg_1285 <= data_stream_V_data_9_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_0_V_1_load_A == 1'b1)) begin
        res_stream_V_data_0_V_1_payload_A <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_0_V_1_load_B == 1'b1)) begin
        res_stream_V_data_0_V_1_payload_B <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_1_V_1_load_A == 1'b1)) begin
        res_stream_V_data_1_V_1_payload_A <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_1_V_1_load_B == 1'b1)) begin
        res_stream_V_data_1_V_1_payload_B <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_2_V_1_load_A == 1'b1)) begin
        res_stream_V_data_2_V_1_payload_A <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_2_V_1_load_B == 1'b1)) begin
        res_stream_V_data_2_V_1_payload_B <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_3_V_1_load_A == 1'b1)) begin
        res_stream_V_data_3_V_1_payload_A <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_3_V_1_load_B == 1'b1)) begin
        res_stream_V_data_3_V_1_payload_B <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_3;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_4_V_1_load_A == 1'b1)) begin
        res_stream_V_data_4_V_1_payload_A <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_4;
    end
end

always @ (posedge ap_clk) begin
    if ((res_stream_V_data_4_V_1_load_B == 1'b1)) begin
        res_stream_V_data_4_V_1_payload_B <= grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_return_4;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_1_ack_in == 1'b0) | (res_stream_V_data_4_V_1_state == 2'd1) | (res_stream_V_data_3_V_1_state == 2'd1) | (res_stream_V_data_2_V_1_state == 2'd1) | (res_stream_V_data_1_V_1_state == 2'd1) | (res_stream_V_data_0_V_1_state == 2'd1) | ((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3)) | ((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3)) | ((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3)) | ((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3)) | ((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((res_stream_V_data_0_V_1_ack_in == 1'b0) | (res_stream_V_data_4_V_1_state == 2'd1) | (res_stream_V_data_3_V_1_state == 2'd1) | (res_stream_V_data_2_V_1_state == 2'd1) | (res_stream_V_data_1_V_1_state == 2'd1) | (res_stream_V_data_0_V_1_state == 2'd1) | ((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3)) | ((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3)) | ((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3)) | ((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3)) | ((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_0_V_blk_n = data_stream_V_data_0_V_empty_n;
    end else begin
        data_stream_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_0_V_read = 1'b1;
    end else begin
        data_stream_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_10_V_blk_n = data_stream_V_data_10_V_empty_n;
    end else begin
        data_stream_V_data_10_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_10_V_read = 1'b1;
    end else begin
        data_stream_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_11_V_blk_n = data_stream_V_data_11_V_empty_n;
    end else begin
        data_stream_V_data_11_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_11_V_read = 1'b1;
    end else begin
        data_stream_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_12_V_blk_n = data_stream_V_data_12_V_empty_n;
    end else begin
        data_stream_V_data_12_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_12_V_read = 1'b1;
    end else begin
        data_stream_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_13_V_blk_n = data_stream_V_data_13_V_empty_n;
    end else begin
        data_stream_V_data_13_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_13_V_read = 1'b1;
    end else begin
        data_stream_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_14_V_blk_n = data_stream_V_data_14_V_empty_n;
    end else begin
        data_stream_V_data_14_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_14_V_read = 1'b1;
    end else begin
        data_stream_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_15_V_blk_n = data_stream_V_data_15_V_empty_n;
    end else begin
        data_stream_V_data_15_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_15_V_read = 1'b1;
    end else begin
        data_stream_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_16_V_blk_n = data_stream_V_data_16_V_empty_n;
    end else begin
        data_stream_V_data_16_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_16_V_read = 1'b1;
    end else begin
        data_stream_V_data_16_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_17_V_blk_n = data_stream_V_data_17_V_empty_n;
    end else begin
        data_stream_V_data_17_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_17_V_read = 1'b1;
    end else begin
        data_stream_V_data_17_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_18_V_blk_n = data_stream_V_data_18_V_empty_n;
    end else begin
        data_stream_V_data_18_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_18_V_read = 1'b1;
    end else begin
        data_stream_V_data_18_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_19_V_blk_n = data_stream_V_data_19_V_empty_n;
    end else begin
        data_stream_V_data_19_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_19_V_read = 1'b1;
    end else begin
        data_stream_V_data_19_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_1_V_blk_n = data_stream_V_data_1_V_empty_n;
    end else begin
        data_stream_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_1_V_read = 1'b1;
    end else begin
        data_stream_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_20_V_blk_n = data_stream_V_data_20_V_empty_n;
    end else begin
        data_stream_V_data_20_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_20_V_read = 1'b1;
    end else begin
        data_stream_V_data_20_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_21_V_blk_n = data_stream_V_data_21_V_empty_n;
    end else begin
        data_stream_V_data_21_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_21_V_read = 1'b1;
    end else begin
        data_stream_V_data_21_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_22_V_blk_n = data_stream_V_data_22_V_empty_n;
    end else begin
        data_stream_V_data_22_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_22_V_read = 1'b1;
    end else begin
        data_stream_V_data_22_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_23_V_blk_n = data_stream_V_data_23_V_empty_n;
    end else begin
        data_stream_V_data_23_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_23_V_read = 1'b1;
    end else begin
        data_stream_V_data_23_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_24_V_blk_n = data_stream_V_data_24_V_empty_n;
    end else begin
        data_stream_V_data_24_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_24_V_read = 1'b1;
    end else begin
        data_stream_V_data_24_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_25_V_blk_n = data_stream_V_data_25_V_empty_n;
    end else begin
        data_stream_V_data_25_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_25_V_read = 1'b1;
    end else begin
        data_stream_V_data_25_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_26_V_blk_n = data_stream_V_data_26_V_empty_n;
    end else begin
        data_stream_V_data_26_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_26_V_read = 1'b1;
    end else begin
        data_stream_V_data_26_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_27_V_blk_n = data_stream_V_data_27_V_empty_n;
    end else begin
        data_stream_V_data_27_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_27_V_read = 1'b1;
    end else begin
        data_stream_V_data_27_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_28_V_blk_n = data_stream_V_data_28_V_empty_n;
    end else begin
        data_stream_V_data_28_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_28_V_read = 1'b1;
    end else begin
        data_stream_V_data_28_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_29_V_blk_n = data_stream_V_data_29_V_empty_n;
    end else begin
        data_stream_V_data_29_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_29_V_read = 1'b1;
    end else begin
        data_stream_V_data_29_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_2_V_blk_n = data_stream_V_data_2_V_empty_n;
    end else begin
        data_stream_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_2_V_read = 1'b1;
    end else begin
        data_stream_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_30_V_blk_n = data_stream_V_data_30_V_empty_n;
    end else begin
        data_stream_V_data_30_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_30_V_read = 1'b1;
    end else begin
        data_stream_V_data_30_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_31_V_blk_n = data_stream_V_data_31_V_empty_n;
    end else begin
        data_stream_V_data_31_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_31_V_read = 1'b1;
    end else begin
        data_stream_V_data_31_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_32_V_blk_n = data_stream_V_data_32_V_empty_n;
    end else begin
        data_stream_V_data_32_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_32_V_read = 1'b1;
    end else begin
        data_stream_V_data_32_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_33_V_blk_n = data_stream_V_data_33_V_empty_n;
    end else begin
        data_stream_V_data_33_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_33_V_read = 1'b1;
    end else begin
        data_stream_V_data_33_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_34_V_blk_n = data_stream_V_data_34_V_empty_n;
    end else begin
        data_stream_V_data_34_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_34_V_read = 1'b1;
    end else begin
        data_stream_V_data_34_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_35_V_blk_n = data_stream_V_data_35_V_empty_n;
    end else begin
        data_stream_V_data_35_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_35_V_read = 1'b1;
    end else begin
        data_stream_V_data_35_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_36_V_blk_n = data_stream_V_data_36_V_empty_n;
    end else begin
        data_stream_V_data_36_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_36_V_read = 1'b1;
    end else begin
        data_stream_V_data_36_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_37_V_blk_n = data_stream_V_data_37_V_empty_n;
    end else begin
        data_stream_V_data_37_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_37_V_read = 1'b1;
    end else begin
        data_stream_V_data_37_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_38_V_blk_n = data_stream_V_data_38_V_empty_n;
    end else begin
        data_stream_V_data_38_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_38_V_read = 1'b1;
    end else begin
        data_stream_V_data_38_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_39_V_blk_n = data_stream_V_data_39_V_empty_n;
    end else begin
        data_stream_V_data_39_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_39_V_read = 1'b1;
    end else begin
        data_stream_V_data_39_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_3_V_blk_n = data_stream_V_data_3_V_empty_n;
    end else begin
        data_stream_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_3_V_read = 1'b1;
    end else begin
        data_stream_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_40_V_blk_n = data_stream_V_data_40_V_empty_n;
    end else begin
        data_stream_V_data_40_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_40_V_read = 1'b1;
    end else begin
        data_stream_V_data_40_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_41_V_blk_n = data_stream_V_data_41_V_empty_n;
    end else begin
        data_stream_V_data_41_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_41_V_read = 1'b1;
    end else begin
        data_stream_V_data_41_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_42_V_blk_n = data_stream_V_data_42_V_empty_n;
    end else begin
        data_stream_V_data_42_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_42_V_read = 1'b1;
    end else begin
        data_stream_V_data_42_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_43_V_blk_n = data_stream_V_data_43_V_empty_n;
    end else begin
        data_stream_V_data_43_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_43_V_read = 1'b1;
    end else begin
        data_stream_V_data_43_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_44_V_blk_n = data_stream_V_data_44_V_empty_n;
    end else begin
        data_stream_V_data_44_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_44_V_read = 1'b1;
    end else begin
        data_stream_V_data_44_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_45_V_blk_n = data_stream_V_data_45_V_empty_n;
    end else begin
        data_stream_V_data_45_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_45_V_read = 1'b1;
    end else begin
        data_stream_V_data_45_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_46_V_blk_n = data_stream_V_data_46_V_empty_n;
    end else begin
        data_stream_V_data_46_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_46_V_read = 1'b1;
    end else begin
        data_stream_V_data_46_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_47_V_blk_n = data_stream_V_data_47_V_empty_n;
    end else begin
        data_stream_V_data_47_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_47_V_read = 1'b1;
    end else begin
        data_stream_V_data_47_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_48_V_blk_n = data_stream_V_data_48_V_empty_n;
    end else begin
        data_stream_V_data_48_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_48_V_read = 1'b1;
    end else begin
        data_stream_V_data_48_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_49_V_blk_n = data_stream_V_data_49_V_empty_n;
    end else begin
        data_stream_V_data_49_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_49_V_read = 1'b1;
    end else begin
        data_stream_V_data_49_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_4_V_blk_n = data_stream_V_data_4_V_empty_n;
    end else begin
        data_stream_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_4_V_read = 1'b1;
    end else begin
        data_stream_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_50_V_blk_n = data_stream_V_data_50_V_empty_n;
    end else begin
        data_stream_V_data_50_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_50_V_read = 1'b1;
    end else begin
        data_stream_V_data_50_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_51_V_blk_n = data_stream_V_data_51_V_empty_n;
    end else begin
        data_stream_V_data_51_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_51_V_read = 1'b1;
    end else begin
        data_stream_V_data_51_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_5_V_blk_n = data_stream_V_data_5_V_empty_n;
    end else begin
        data_stream_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_5_V_read = 1'b1;
    end else begin
        data_stream_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_6_V_blk_n = data_stream_V_data_6_V_empty_n;
    end else begin
        data_stream_V_data_6_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_6_V_read = 1'b1;
    end else begin
        data_stream_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_7_V_blk_n = data_stream_V_data_7_V_empty_n;
    end else begin
        data_stream_V_data_7_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_7_V_read = 1'b1;
    end else begin
        data_stream_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_8_V_blk_n = data_stream_V_data_8_V_empty_n;
    end else begin
        data_stream_V_data_8_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_8_V_read = 1'b1;
    end else begin
        data_stream_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_9_V_blk_n = data_stream_V_data_9_V_empty_n;
    end else begin
        data_stream_V_data_9_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_stream_V_data_9_V_read = 1'b1;
    end else begin
        data_stream_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((res_stream_V_data_0_V_1_sel == 1'b1)) begin
        res_stream_V_data_0_V_1_data_out = res_stream_V_data_0_V_1_payload_B;
    end else begin
        res_stream_V_data_0_V_1_data_out = res_stream_V_data_0_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done == 1'b0) | (res_stream_V_data_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_0_V_1_vld_in = 1'b1;
    end else begin
        res_stream_V_data_0_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_0_V_TDATA_blk_n = res_stream_V_data_0_V_1_state[1'd1];
    end else begin
        res_stream_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_stream_V_data_1_V_1_sel == 1'b1)) begin
        res_stream_V_data_1_V_1_data_out = res_stream_V_data_1_V_1_payload_B;
    end else begin
        res_stream_V_data_1_V_1_data_out = res_stream_V_data_1_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done == 1'b0) | (res_stream_V_data_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_1_V_1_vld_in = 1'b1;
    end else begin
        res_stream_V_data_1_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_1_V_TDATA_blk_n = res_stream_V_data_1_V_1_state[1'd1];
    end else begin
        res_stream_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_stream_V_data_2_V_1_sel == 1'b1)) begin
        res_stream_V_data_2_V_1_data_out = res_stream_V_data_2_V_1_payload_B;
    end else begin
        res_stream_V_data_2_V_1_data_out = res_stream_V_data_2_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done == 1'b0) | (res_stream_V_data_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_2_V_1_vld_in = 1'b1;
    end else begin
        res_stream_V_data_2_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_2_V_TDATA_blk_n = res_stream_V_data_2_V_1_state[1'd1];
    end else begin
        res_stream_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_stream_V_data_3_V_1_sel == 1'b1)) begin
        res_stream_V_data_3_V_1_data_out = res_stream_V_data_3_V_1_payload_B;
    end else begin
        res_stream_V_data_3_V_1_data_out = res_stream_V_data_3_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done == 1'b0) | (res_stream_V_data_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_3_V_1_vld_in = 1'b1;
    end else begin
        res_stream_V_data_3_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_3_V_TDATA_blk_n = res_stream_V_data_3_V_1_state[1'd1];
    end else begin
        res_stream_V_data_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_stream_V_data_4_V_1_sel == 1'b1)) begin
        res_stream_V_data_4_V_1_data_out = res_stream_V_data_4_V_1_payload_B;
    end else begin
        res_stream_V_data_4_V_1_data_out = res_stream_V_data_4_V_1_payload_A;
    end
end

always @ (*) begin
    if ((~((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done == 1'b0) | (res_stream_V_data_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_4_V_1_vld_in = 1'b1;
    end else begin
        res_stream_V_data_4_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        res_stream_V_data_4_V_TDATA_blk_n = res_stream_V_data_4_V_1_state[1'd1];
    end else begin
        res_stream_V_data_4_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if ((~((grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_done == 1'b0) | (res_stream_V_data_0_V_1_ack_in == 1'b0)) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((res_stream_V_data_0_V_1_ack_in == 1'b0) | (res_stream_V_data_4_V_1_state == 2'd1) | (res_stream_V_data_3_V_1_state == 2'd1) | (res_stream_V_data_2_V_1_state == 2'd1) | (res_stream_V_data_1_V_1_state == 2'd1) | (res_stream_V_data_0_V_1_state == 2'd1) | ((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3)) | ((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3)) | ((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3)) | ((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3)) | ((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3))) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state1_ignore_call111 = ((ap_start == 1'b0) | (io_acc_block_signal_op4 == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((res_stream_V_data_4_V_1_state == 2'd1) | (res_stream_V_data_3_V_1_state == 2'd1) | (res_stream_V_data_2_V_1_state == 2'd1) | (res_stream_V_data_1_V_1_state == 2'd1) | (res_stream_V_data_0_V_1_state == 2'd1) | ((res_stream_V_data_4_V_TREADY == 1'b0) & (res_stream_V_data_4_V_1_state == 2'd3)) | ((res_stream_V_data_3_V_TREADY == 1'b0) & (res_stream_V_data_3_V_1_state == 2'd3)) | ((res_stream_V_data_2_V_TREADY == 1'b0) & (res_stream_V_data_2_V_1_state == 2'd3)) | ((res_stream_V_data_1_V_TREADY == 1'b0) & (res_stream_V_data_1_V_1_state == 2'd3)) | ((res_stream_V_data_0_V_TREADY == 1'b0) & (res_stream_V_data_0_V_1_state == 2'd3)));
end

assign grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start = grp_dense_wrapper_ap_fixed_16_2_5_3_0_ap_fixed_16_2_5_3_0_config16_s_fu_897_ap_start_reg;

assign io_acc_block_signal_op4 = (data_stream_V_data_9_V_empty_n & data_stream_V_data_8_V_empty_n & data_stream_V_data_7_V_empty_n & data_stream_V_data_6_V_empty_n & data_stream_V_data_5_V_empty_n & data_stream_V_data_51_V_empty_n & data_stream_V_data_50_V_empty_n & data_stream_V_data_4_V_empty_n & data_stream_V_data_49_V_empty_n & data_stream_V_data_48_V_empty_n & data_stream_V_data_47_V_empty_n & data_stream_V_data_46_V_empty_n & data_stream_V_data_45_V_empty_n & data_stream_V_data_44_V_empty_n & data_stream_V_data_43_V_empty_n & data_stream_V_data_42_V_empty_n & data_stream_V_data_41_V_empty_n & data_stream_V_data_40_V_empty_n & data_stream_V_data_3_V_empty_n & data_stream_V_data_39_V_empty_n & data_stream_V_data_38_V_empty_n & data_stream_V_data_37_V_empty_n & data_stream_V_data_36_V_empty_n & data_stream_V_data_35_V_empty_n & data_stream_V_data_34_V_empty_n & data_stream_V_data_33_V_empty_n & data_stream_V_data_32_V_empty_n & data_stream_V_data_31_V_empty_n & data_stream_V_data_30_V_empty_n & data_stream_V_data_2_V_empty_n & data_stream_V_data_29_V_empty_n & data_stream_V_data_28_V_empty_n & data_stream_V_data_27_V_empty_n & data_stream_V_data_26_V_empty_n & data_stream_V_data_25_V_empty_n & data_stream_V_data_24_V_empty_n & data_stream_V_data_23_V_empty_n & data_stream_V_data_22_V_empty_n & data_stream_V_data_21_V_empty_n & data_stream_V_data_20_V_empty_n & data_stream_V_data_1_V_empty_n & data_stream_V_data_19_V_empty_n & data_stream_V_data_18_V_empty_n & data_stream_V_data_17_V_empty_n & data_stream_V_data_16_V_empty_n & data_stream_V_data_15_V_empty_n & data_stream_V_data_14_V_empty_n & data_stream_V_data_13_V_empty_n & data_stream_V_data_12_V_empty_n & data_stream_V_data_11_V_empty_n & data_stream_V_data_10_V_empty_n & data_stream_V_data_0_V_empty_n);

assign res_stream_V_data_0_V_1_ack_in = res_stream_V_data_0_V_1_state[1'd1];

assign res_stream_V_data_0_V_1_ack_out = res_stream_V_data_0_V_TREADY;

assign res_stream_V_data_0_V_1_load_A = (res_stream_V_data_0_V_1_state_cmp_full & ~res_stream_V_data_0_V_1_sel_wr);

assign res_stream_V_data_0_V_1_load_B = (res_stream_V_data_0_V_1_state_cmp_full & res_stream_V_data_0_V_1_sel_wr);

assign res_stream_V_data_0_V_1_sel = res_stream_V_data_0_V_1_sel_rd;

assign res_stream_V_data_0_V_1_state_cmp_full = ((res_stream_V_data_0_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_stream_V_data_0_V_1_vld_out = res_stream_V_data_0_V_1_state[1'd0];

assign res_stream_V_data_0_V_TDATA = res_stream_V_data_0_V_1_data_out;

assign res_stream_V_data_0_V_TVALID = res_stream_V_data_0_V_1_state[1'd0];

assign res_stream_V_data_1_V_1_ack_in = res_stream_V_data_1_V_1_state[1'd1];

assign res_stream_V_data_1_V_1_ack_out = res_stream_V_data_1_V_TREADY;

assign res_stream_V_data_1_V_1_load_A = (res_stream_V_data_1_V_1_state_cmp_full & ~res_stream_V_data_1_V_1_sel_wr);

assign res_stream_V_data_1_V_1_load_B = (res_stream_V_data_1_V_1_state_cmp_full & res_stream_V_data_1_V_1_sel_wr);

assign res_stream_V_data_1_V_1_sel = res_stream_V_data_1_V_1_sel_rd;

assign res_stream_V_data_1_V_1_state_cmp_full = ((res_stream_V_data_1_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_stream_V_data_1_V_1_vld_out = res_stream_V_data_1_V_1_state[1'd0];

assign res_stream_V_data_1_V_TDATA = res_stream_V_data_1_V_1_data_out;

assign res_stream_V_data_1_V_TVALID = res_stream_V_data_1_V_1_state[1'd0];

assign res_stream_V_data_2_V_1_ack_in = res_stream_V_data_2_V_1_state[1'd1];

assign res_stream_V_data_2_V_1_ack_out = res_stream_V_data_2_V_TREADY;

assign res_stream_V_data_2_V_1_load_A = (res_stream_V_data_2_V_1_state_cmp_full & ~res_stream_V_data_2_V_1_sel_wr);

assign res_stream_V_data_2_V_1_load_B = (res_stream_V_data_2_V_1_state_cmp_full & res_stream_V_data_2_V_1_sel_wr);

assign res_stream_V_data_2_V_1_sel = res_stream_V_data_2_V_1_sel_rd;

assign res_stream_V_data_2_V_1_state_cmp_full = ((res_stream_V_data_2_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_stream_V_data_2_V_1_vld_out = res_stream_V_data_2_V_1_state[1'd0];

assign res_stream_V_data_2_V_TDATA = res_stream_V_data_2_V_1_data_out;

assign res_stream_V_data_2_V_TVALID = res_stream_V_data_2_V_1_state[1'd0];

assign res_stream_V_data_3_V_1_ack_in = res_stream_V_data_3_V_1_state[1'd1];

assign res_stream_V_data_3_V_1_ack_out = res_stream_V_data_3_V_TREADY;

assign res_stream_V_data_3_V_1_load_A = (res_stream_V_data_3_V_1_state_cmp_full & ~res_stream_V_data_3_V_1_sel_wr);

assign res_stream_V_data_3_V_1_load_B = (res_stream_V_data_3_V_1_state_cmp_full & res_stream_V_data_3_V_1_sel_wr);

assign res_stream_V_data_3_V_1_sel = res_stream_V_data_3_V_1_sel_rd;

assign res_stream_V_data_3_V_1_state_cmp_full = ((res_stream_V_data_3_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_stream_V_data_3_V_1_vld_out = res_stream_V_data_3_V_1_state[1'd0];

assign res_stream_V_data_3_V_TDATA = res_stream_V_data_3_V_1_data_out;

assign res_stream_V_data_3_V_TVALID = res_stream_V_data_3_V_1_state[1'd0];

assign res_stream_V_data_4_V_1_ack_in = res_stream_V_data_4_V_1_state[1'd1];

assign res_stream_V_data_4_V_1_ack_out = res_stream_V_data_4_V_TREADY;

assign res_stream_V_data_4_V_1_load_A = (res_stream_V_data_4_V_1_state_cmp_full & ~res_stream_V_data_4_V_1_sel_wr);

assign res_stream_V_data_4_V_1_load_B = (res_stream_V_data_4_V_1_state_cmp_full & res_stream_V_data_4_V_1_sel_wr);

assign res_stream_V_data_4_V_1_sel = res_stream_V_data_4_V_1_sel_rd;

assign res_stream_V_data_4_V_1_state_cmp_full = ((res_stream_V_data_4_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_stream_V_data_4_V_1_vld_out = res_stream_V_data_4_V_1_state[1'd0];

assign res_stream_V_data_4_V_TDATA = res_stream_V_data_4_V_1_data_out;

assign res_stream_V_data_4_V_TVALID = res_stream_V_data_4_V_1_state[1'd0];

endmodule //dense_array_ap_fixed_52u_array_ap_fixed_16_2_5_3_0_5u_config16_s
