// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        data_V_data_5_V_dout,
        data_V_data_5_V_empty_n,
        data_V_data_5_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write,
        res_V_data_2_V_din,
        res_V_data_2_V_full_n,
        res_V_data_2_V_write,
        res_V_data_3_V_din,
        res_V_data_3_V_full_n,
        res_V_data_3_V_write,
        res_V_data_4_V_din,
        res_V_data_4_V_full_n,
        res_V_data_4_V_write,
        res_V_data_5_V_din,
        res_V_data_5_V_full_n,
        res_V_data_5_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state6 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
input  [15:0] data_V_data_5_V_dout;
input   data_V_data_5_V_empty_n;
output   data_V_data_5_V_read;
output  [15:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [15:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;
output  [15:0] res_V_data_2_V_din;
input   res_V_data_2_V_full_n;
output   res_V_data_2_V_write;
output  [15:0] res_V_data_3_V_din;
input   res_V_data_3_V_full_n;
output   res_V_data_3_V_write;
output  [15:0] res_V_data_4_V_din;
input   res_V_data_4_V_full_n;
output   res_V_data_4_V_write;
output  [15:0] res_V_data_5_V_din;
input   res_V_data_5_V_full_n;
output   res_V_data_5_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;
reg data_V_data_5_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;
reg res_V_data_2_V_write;
reg res_V_data_3_V_write;
reg res_V_data_4_V_write;
reg res_V_data_5_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [31:0] pX;
reg   [31:0] sX;
reg   [31:0] pY;
reg   [31:0] sY;
reg   [15:0] kernel_data_V_3_6;
reg   [15:0] kernel_data_V_3_7;
reg   [15:0] kernel_data_V_3_8;
reg   [15:0] kernel_data_V_3_9;
reg   [15:0] kernel_data_V_3_10;
reg   [15:0] kernel_data_V_3_11;
reg   [15:0] kernel_data_V_3_30;
reg   [15:0] kernel_data_V_3_31;
reg   [15:0] kernel_data_V_3_32;
reg   [15:0] kernel_data_V_3_33;
reg   [15:0] kernel_data_V_3_34;
reg   [15:0] kernel_data_V_3_35;
reg   [15:0] kernel_data_V_3_54;
reg   [15:0] kernel_data_V_3_55;
reg   [15:0] kernel_data_V_3_56;
reg   [15:0] kernel_data_V_3_57;
reg   [15:0] kernel_data_V_3_58;
reg   [15:0] kernel_data_V_3_59;
reg   [15:0] kernel_data_V_3_78;
reg   [15:0] kernel_data_V_3_79;
reg   [15:0] kernel_data_V_3_80;
reg   [15:0] kernel_data_V_3_81;
reg   [15:0] kernel_data_V_3_82;
reg   [15:0] kernel_data_V_3_83;
reg   [15:0] kernel_data_V_3_12;
reg   [15:0] kernel_data_V_3_13;
reg   [15:0] kernel_data_V_3_14;
reg   [15:0] kernel_data_V_3_15;
reg   [15:0] kernel_data_V_3_16;
reg   [15:0] kernel_data_V_3_17;
reg   [15:0] kernel_data_V_3_36;
reg   [15:0] kernel_data_V_3_37;
reg   [15:0] kernel_data_V_3_38;
reg   [15:0] kernel_data_V_3_39;
reg   [15:0] kernel_data_V_3_40;
reg   [15:0] kernel_data_V_3_41;
reg   [15:0] kernel_data_V_3_60;
reg   [15:0] kernel_data_V_3_61;
reg   [15:0] kernel_data_V_3_62;
reg   [15:0] kernel_data_V_3_63;
reg   [15:0] kernel_data_V_3_64;
reg   [15:0] kernel_data_V_3_65;
reg   [15:0] kernel_data_V_3_84;
reg   [15:0] kernel_data_V_3_85;
reg   [15:0] kernel_data_V_3_86;
reg   [15:0] kernel_data_V_3_87;
reg   [15:0] kernel_data_V_3_88;
reg   [15:0] kernel_data_V_3_89;
reg   [15:0] kernel_data_V_3_18;
reg   [15:0] kernel_data_V_3_19;
reg   [15:0] kernel_data_V_3_20;
reg   [15:0] kernel_data_V_3_21;
reg   [15:0] kernel_data_V_3_22;
reg   [15:0] kernel_data_V_3_23;
reg   [15:0] kernel_data_V_3_42;
reg   [15:0] kernel_data_V_3_43;
reg   [15:0] kernel_data_V_3_44;
reg   [15:0] kernel_data_V_3_45;
reg   [15:0] kernel_data_V_3_46;
reg   [15:0] kernel_data_V_3_47;
reg   [15:0] kernel_data_V_3_66;
reg   [15:0] kernel_data_V_3_67;
reg   [15:0] kernel_data_V_3_68;
reg   [15:0] kernel_data_V_3_69;
reg   [15:0] kernel_data_V_3_70;
reg   [15:0] kernel_data_V_3_71;
reg   [15:0] kernel_data_V_3_90;
reg   [15:0] kernel_data_V_3_91;
reg   [15:0] kernel_data_V_3_92;
reg   [15:0] kernel_data_V_3_93;
reg   [15:0] kernel_data_V_3_94;
reg   [15:0] kernel_data_V_3_95;
reg    line_buffer_Array_V_3_0_0_ce0;
reg    line_buffer_Array_V_3_0_0_we0;
wire   [15:0] line_buffer_Array_V_3_0_0_q0;
reg    line_buffer_Array_V_3_1_0_ce0;
reg    line_buffer_Array_V_3_1_0_we0;
wire   [15:0] line_buffer_Array_V_3_1_0_q0;
reg    line_buffer_Array_V_3_2_0_ce0;
reg    line_buffer_Array_V_3_2_0_we0;
wire   [15:0] line_buffer_Array_V_3_2_0_q0;
reg    line_buffer_Array_V_3_0_1_ce0;
reg    line_buffer_Array_V_3_0_1_we0;
wire   [15:0] line_buffer_Array_V_3_0_1_q0;
reg    line_buffer_Array_V_3_1_1_ce0;
reg    line_buffer_Array_V_3_1_1_we0;
wire   [15:0] line_buffer_Array_V_3_1_1_q0;
reg    line_buffer_Array_V_3_2_1_ce0;
reg    line_buffer_Array_V_3_2_1_we0;
wire   [15:0] line_buffer_Array_V_3_2_1_q0;
reg    line_buffer_Array_V_3_0_2_ce0;
reg    line_buffer_Array_V_3_0_2_we0;
wire   [15:0] line_buffer_Array_V_3_0_2_q0;
reg    line_buffer_Array_V_3_1_2_ce0;
reg    line_buffer_Array_V_3_1_2_we0;
wire   [15:0] line_buffer_Array_V_3_1_2_q0;
reg    line_buffer_Array_V_3_2_2_ce0;
reg    line_buffer_Array_V_3_2_2_we0;
wire   [15:0] line_buffer_Array_V_3_2_2_q0;
reg    line_buffer_Array_V_3_0_3_ce0;
reg    line_buffer_Array_V_3_0_3_we0;
wire   [15:0] line_buffer_Array_V_3_0_3_q0;
reg    line_buffer_Array_V_3_1_3_ce0;
reg    line_buffer_Array_V_3_1_3_we0;
wire   [15:0] line_buffer_Array_V_3_1_3_q0;
reg    line_buffer_Array_V_3_2_3_ce0;
reg    line_buffer_Array_V_3_2_3_we0;
wire   [15:0] line_buffer_Array_V_3_2_3_q0;
reg    line_buffer_Array_V_3_0_4_ce0;
reg    line_buffer_Array_V_3_0_4_we0;
wire   [15:0] line_buffer_Array_V_3_0_4_q0;
reg    line_buffer_Array_V_3_1_4_ce0;
reg    line_buffer_Array_V_3_1_4_we0;
wire   [15:0] line_buffer_Array_V_3_1_4_q0;
reg    line_buffer_Array_V_3_2_4_ce0;
reg    line_buffer_Array_V_3_2_4_we0;
wire   [15:0] line_buffer_Array_V_3_2_4_q0;
reg    line_buffer_Array_V_3_0_5_ce0;
reg    line_buffer_Array_V_3_0_5_we0;
wire   [15:0] line_buffer_Array_V_3_0_5_q0;
reg    line_buffer_Array_V_3_1_5_ce0;
reg    line_buffer_Array_V_3_1_5_we0;
wire   [15:0] line_buffer_Array_V_3_1_5_q0;
reg    line_buffer_Array_V_3_2_5_ce0;
reg    line_buffer_Array_V_3_2_5_we0;
wire   [15:0] line_buffer_Array_V_3_2_5_q0;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln241_reg_4449;
reg    data_V_data_1_V_blk_n;
reg    data_V_data_2_V_blk_n;
reg    data_V_data_3_V_blk_n;
reg    data_V_data_4_V_blk_n;
reg    data_V_data_5_V_blk_n;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] and_ln191_2_reg_4794;
reg   [0:0] and_ln191_2_reg_4794_pp0_iter2_reg;
reg    res_V_data_1_V_blk_n;
reg    res_V_data_2_V_blk_n;
reg    res_V_data_3_V_blk_n;
reg    res_V_data_4_V_blk_n;
reg    res_V_data_5_V_blk_n;
reg   [10:0] indvar_flatten_reg_502;
wire   [0:0] icmp_ln241_fu_524_p2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op42;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    io_acc_block_signal_op534;
reg    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln241_reg_4449_pp0_iter1_reg;
wire   [10:0] add_ln241_fu_530_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln191_2_fu_540_p2;
reg   [0:0] icmp_ln191_2_reg_4458;
wire   [0:0] icmp_ln191_3_fu_550_p2;
reg   [0:0] icmp_ln191_3_reg_4463;
wire   [0:0] icmp_ln212_fu_556_p2;
reg   [0:0] icmp_ln212_reg_4468;
wire   [0:0] icmp_ln216_fu_580_p2;
reg   [0:0] icmp_ln216_reg_4472;
reg   [15:0] pool_window_15_V_reg_4476;
reg   [15:0] pool_window_15_V_reg_4476_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_1_reg_4506;
reg   [15:0] pool_window_15_V_1_reg_4506_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_2_reg_4536;
reg   [15:0] pool_window_15_V_2_reg_4536_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_3_reg_4566;
reg   [15:0] pool_window_15_V_3_reg_4566_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_4_reg_4596;
reg   [15:0] pool_window_15_V_4_reg_4596_pp0_iter2_reg;
reg   [15:0] pool_window_15_V_5_reg_4626;
reg   [15:0] pool_window_15_V_5_reg_4626_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_reg_4656;
reg   [15:0] pool_window_11_V_reg_4656_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_1_reg_4679;
reg   [15:0] pool_window_11_V_1_reg_4679_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_2_reg_4702;
reg   [15:0] pool_window_11_V_2_reg_4702_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_3_reg_4725;
reg   [15:0] pool_window_11_V_3_reg_4725_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_4_reg_4748;
reg   [15:0] pool_window_11_V_4_reg_4748_pp0_iter2_reg;
reg   [15:0] pool_window_11_V_5_reg_4771;
reg   [15:0] pool_window_11_V_5_reg_4771_pp0_iter2_reg;
wire   [0:0] and_ln191_2_fu_718_p2;
reg   [15:0] pool_window_7_V_reg_4798;
reg   [15:0] pool_window_3_V_reg_4812;
reg   [15:0] pool_window_7_V_1_reg_4818;
reg   [15:0] pool_window_3_V_1_reg_4832;
reg   [15:0] pool_window_7_V_2_reg_4838;
reg   [15:0] pool_window_3_V_2_reg_4852;
reg   [15:0] pool_window_7_V_3_reg_4858;
reg   [15:0] pool_window_3_V_3_reg_4872;
reg   [15:0] pool_window_7_V_4_reg_4878;
reg   [15:0] pool_window_3_V_4_reg_4892;
reg   [15:0] pool_window_7_V_5_reg_4898;
reg   [15:0] pool_window_3_V_5_reg_4912;
reg   [15:0] pool_window_0_V_reg_4918;
reg   [15:0] pool_window_0_V_1_reg_4924;
reg   [15:0] pool_window_0_V_2_reg_4930;
reg   [15:0] pool_window_0_V_3_reg_4936;
reg   [15:0] pool_window_0_V_4_reg_4942;
reg   [15:0] pool_window_0_V_5_reg_4948;
reg   [15:0] pool_window_4_V_reg_4954;
reg   [15:0] pool_window_4_V_1_reg_4960;
reg   [15:0] pool_window_4_V_2_reg_4966;
reg   [15:0] pool_window_4_V_3_reg_4972;
reg   [15:0] pool_window_4_V_4_reg_4978;
reg   [15:0] pool_window_4_V_5_reg_4984;
reg   [15:0] pool_window_8_V_reg_4990;
reg   [15:0] pool_window_8_V_1_reg_4996;
reg   [15:0] pool_window_8_V_2_reg_5002;
reg   [15:0] pool_window_8_V_3_reg_5008;
reg   [15:0] pool_window_8_V_4_reg_5014;
reg   [15:0] pool_window_8_V_5_reg_5020;
reg   [15:0] pool_window_12_V_reg_5026;
reg   [15:0] pool_window_12_V_1_reg_5032;
reg   [15:0] pool_window_12_V_2_reg_5038;
reg   [15:0] pool_window_12_V_3_reg_5044;
reg   [15:0] pool_window_12_V_4_reg_5050;
reg   [15:0] pool_window_12_V_5_reg_5056;
reg   [15:0] pool_window_1_V_reg_5062;
reg   [15:0] pool_window_1_V_1_reg_5068;
reg   [15:0] pool_window_1_V_2_reg_5074;
reg   [15:0] pool_window_1_V_3_reg_5080;
reg   [15:0] pool_window_1_V_4_reg_5086;
reg   [15:0] pool_window_1_V_5_reg_5092;
reg   [15:0] pool_window_5_V_reg_5098;
reg   [15:0] pool_window_5_V_1_reg_5104;
reg   [15:0] pool_window_5_V_2_reg_5110;
reg   [15:0] pool_window_5_V_3_reg_5116;
reg   [15:0] pool_window_5_V_4_reg_5122;
reg   [15:0] pool_window_5_V_5_reg_5128;
reg   [15:0] pool_window_9_V_reg_5134;
reg   [15:0] pool_window_9_V_1_reg_5140;
reg   [15:0] pool_window_9_V_2_reg_5146;
reg   [15:0] pool_window_9_V_3_reg_5152;
reg   [15:0] pool_window_9_V_4_reg_5158;
reg   [15:0] pool_window_9_V_5_reg_5164;
reg   [15:0] pool_window_13_V_reg_5170;
reg   [15:0] pool_window_13_V_1_reg_5176;
reg   [15:0] pool_window_13_V_2_reg_5182;
reg   [15:0] pool_window_13_V_3_reg_5188;
reg   [15:0] pool_window_13_V_4_reg_5194;
reg   [15:0] pool_window_13_V_5_reg_5200;
reg   [15:0] pool_window_2_V_reg_5206;
reg   [15:0] pool_window_2_V_1_reg_5212;
reg   [15:0] pool_window_2_V_2_reg_5218;
reg   [15:0] pool_window_2_V_3_reg_5224;
reg   [15:0] pool_window_2_V_4_reg_5230;
reg   [15:0] pool_window_2_V_5_reg_5236;
reg   [15:0] pool_window_6_V_reg_5242;
reg   [15:0] pool_window_6_V_1_reg_5248;
reg   [15:0] pool_window_6_V_2_reg_5254;
reg   [15:0] pool_window_6_V_3_reg_5260;
reg   [15:0] pool_window_6_V_4_reg_5266;
reg   [15:0] pool_window_6_V_5_reg_5272;
reg   [15:0] pool_window_10_V_reg_5278;
reg   [15:0] pool_window_10_V_1_reg_5284;
reg   [15:0] pool_window_10_V_2_reg_5290;
reg   [15:0] pool_window_10_V_3_reg_5296;
reg   [15:0] pool_window_10_V_4_reg_5302;
reg   [15:0] pool_window_10_V_5_reg_5308;
reg   [15:0] pool_window_14_V_reg_5314;
reg   [15:0] pool_window_14_V_1_reg_5320;
reg   [15:0] pool_window_14_V_2_reg_5326;
reg   [15:0] pool_window_14_V_3_reg_5332;
reg   [15:0] pool_window_14_V_4_reg_5338;
reg   [15:0] pool_window_14_V_5_reg_5344;
wire   [2:0] select_ln65_9_fu_1799_p3;
reg   [2:0] select_ln65_9_reg_5350;
wire   [3:0] select_ln65_20_fu_1979_p3;
reg   [3:0] select_ln65_20_reg_5355;
wire   [2:0] select_ln65_31_fu_2193_p3;
reg   [2:0] select_ln65_31_reg_5361;
wire   [3:0] select_ln65_42_fu_2373_p3;
reg   [3:0] select_ln65_42_reg_5366;
wire   [2:0] select_ln65_53_fu_2587_p3;
reg   [2:0] select_ln65_53_reg_5372;
wire   [3:0] select_ln65_64_fu_2767_p3;
reg   [3:0] select_ln65_64_reg_5377;
wire   [2:0] select_ln65_75_fu_2981_p3;
reg   [2:0] select_ln65_75_reg_5383;
wire   [3:0] select_ln65_86_fu_3161_p3;
reg   [3:0] select_ln65_86_reg_5388;
wire   [2:0] select_ln65_97_fu_3375_p3;
reg   [2:0] select_ln65_97_reg_5394;
wire   [3:0] select_ln65_108_fu_3555_p3;
reg   [3:0] select_ln65_108_reg_5399;
wire   [2:0] select_ln65_119_fu_3769_p3;
reg   [2:0] select_ln65_119_reg_5405;
wire   [3:0] select_ln65_130_fu_3949_p3;
reg   [3:0] select_ln65_130_reg_5410;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg   [31:0] ap_phi_mux_storemerge_i_i_phi_fu_517_p4;
wire   [31:0] select_ln222_fu_756_p3;
reg   [31:0] ap_phi_reg_pp0_iter1_storemerge_i_i_reg_513;
wire   [31:0] ap_phi_reg_pp0_iter0_storemerge_i_i_reg_513;
wire   [31:0] add_ln225_fu_562_p2;
wire   [31:0] select_ln227_fu_730_p3;
wire   [31:0] add_ln220_fu_586_p2;
wire   [15:0] tmp_data_0_V_fu_4016_p18;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_data_1_V_fu_4098_p18;
wire   [15:0] tmp_data_2_V_fu_4180_p18;
wire   [15:0] tmp_data_3_V_fu_4262_p18;
wire   [15:0] tmp_data_4_V_fu_4344_p18;
wire   [15:0] tmp_data_5_V_fu_4426_p18;
wire   [0:0] icmp_ln191_fu_692_p2;
wire   [0:0] icmp_ln191_1_fu_702_p2;
wire   [0:0] and_ln191_1_fu_714_p2;
wire   [0:0] and_ln191_fu_708_p2;
wire   [31:0] add_ln227_fu_724_p2;
wire   [31:0] add_ln222_fu_750_p2;
wire   [0:0] icmp_ln1496_fu_1593_p2;
wire   [0:0] icmp_ln1496_1_fu_1611_p2;
wire   [15:0] select_ln65_fu_1603_p3;
wire   [15:0] select_ln65_2_fu_1625_p3;
wire   [0:0] icmp_ln1496_2_fu_1633_p2;
wire   [1:0] select_ln65_1_fu_1617_p3;
wire   [1:0] zext_ln65_fu_1599_p1;
wire   [1:0] select_ln65_3_fu_1639_p3;
wire   [3:0] phi_ln_fu_1655_p17;
wire   [0:0] icmp_ln1496_3_fu_1693_p2;
wire   [0:0] icmp_ln1496_4_fu_1715_p2;
wire   [15:0] select_ln65_5_fu_1707_p3;
wire   [15:0] select_ln65_7_fu_1729_p3;
wire   [0:0] icmp_ln1496_5_fu_1737_p2;
wire   [2:0] select_ln65_6_fu_1721_p3;
wire   [2:0] select_ln65_4_fu_1699_p3;
wire   [2:0] select_ln65_8_fu_1743_p3;
wire   [3:0] phi_ln65_1_fu_1755_p17;
wire   [15:0] phi_ln_fu_1655_p18;
wire   [15:0] phi_ln65_1_fu_1755_p18;
wire   [0:0] icmp_ln1496_6_fu_1793_p2;
wire   [2:0] zext_ln65_1_fu_1647_p1;
wire   [0:0] icmp_ln1496_7_fu_1807_p2;
wire   [0:0] icmp_ln1496_8_fu_1829_p2;
wire   [15:0] select_ln65_11_fu_1821_p3;
wire   [15:0] select_ln65_13_fu_1842_p3;
wire   [0:0] icmp_ln1496_9_fu_1849_p2;
wire   [3:0] select_ln65_12_fu_1834_p3;
wire   [3:0] select_ln65_10_fu_1813_p3;
wire   [3:0] select_ln65_14_fu_1855_p3;
wire   [0:0] icmp_ln1496_10_fu_1888_p2;
wire   [0:0] icmp_ln1496_11_fu_1910_p2;
wire   [15:0] select_ln65_16_fu_1902_p3;
wire   [15:0] select_ln65_18_fu_1923_p3;
wire   [0:0] icmp_ln1496_12_fu_1930_p2;
wire   [2:0] select_ln65_17_fu_1915_p3;
wire   [2:0] select_ln65_15_fu_1894_p3;
wire   [2:0] select_ln65_19_fu_1936_p3;
wire  signed [3:0] sext_ln65_fu_1944_p1;
wire   [15:0] phi_ln65_3_fu_1863_p18;
wire   [15:0] phi_ln65_4_fu_1948_p18;
wire   [0:0] icmp_ln1496_13_fu_1973_p2;
wire   [0:0] icmp_ln1496_15_fu_1987_p2;
wire   [0:0] icmp_ln1496_16_fu_2005_p2;
wire   [15:0] select_ln65_22_fu_1997_p3;
wire   [15:0] select_ln65_24_fu_2019_p3;
wire   [0:0] icmp_ln1496_17_fu_2027_p2;
wire   [1:0] select_ln65_23_fu_2011_p3;
wire   [1:0] zext_ln65_3_fu_1993_p1;
wire   [1:0] select_ln65_25_fu_2033_p3;
wire   [3:0] phi_ln65_6_fu_2049_p17;
wire   [0:0] icmp_ln1496_18_fu_2087_p2;
wire   [0:0] icmp_ln1496_19_fu_2109_p2;
wire   [15:0] select_ln65_27_fu_2101_p3;
wire   [15:0] select_ln65_29_fu_2123_p3;
wire   [0:0] icmp_ln1496_20_fu_2131_p2;
wire   [2:0] select_ln65_28_fu_2115_p3;
wire   [2:0] select_ln65_26_fu_2093_p3;
wire   [2:0] select_ln65_30_fu_2137_p3;
wire   [3:0] phi_ln65_7_fu_2149_p17;
wire   [15:0] phi_ln65_6_fu_2049_p18;
wire   [15:0] phi_ln65_7_fu_2149_p18;
wire   [0:0] icmp_ln1496_21_fu_2187_p2;
wire   [2:0] zext_ln65_4_fu_2041_p1;
wire   [0:0] icmp_ln1496_22_fu_2201_p2;
wire   [0:0] icmp_ln1496_23_fu_2223_p2;
wire   [15:0] select_ln65_33_fu_2215_p3;
wire   [15:0] select_ln65_35_fu_2236_p3;
wire   [0:0] icmp_ln1496_24_fu_2243_p2;
wire   [3:0] select_ln65_34_fu_2228_p3;
wire   [3:0] select_ln65_32_fu_2207_p3;
wire   [3:0] select_ln65_36_fu_2249_p3;
wire   [0:0] icmp_ln1496_25_fu_2282_p2;
wire   [0:0] icmp_ln1496_26_fu_2304_p2;
wire   [15:0] select_ln65_38_fu_2296_p3;
wire   [15:0] select_ln65_40_fu_2317_p3;
wire   [0:0] icmp_ln1496_27_fu_2324_p2;
wire   [2:0] select_ln65_39_fu_2309_p3;
wire   [2:0] select_ln65_37_fu_2288_p3;
wire   [2:0] select_ln65_41_fu_2330_p3;
wire  signed [3:0] sext_ln65_1_fu_2338_p1;
wire   [15:0] phi_ln65_9_fu_2257_p18;
wire   [15:0] phi_ln65_s_fu_2342_p18;
wire   [0:0] icmp_ln1496_28_fu_2367_p2;
wire   [0:0] icmp_ln1496_30_fu_2381_p2;
wire   [0:0] icmp_ln1496_31_fu_2399_p2;
wire   [15:0] select_ln65_44_fu_2391_p3;
wire   [15:0] select_ln65_46_fu_2413_p3;
wire   [0:0] icmp_ln1496_32_fu_2421_p2;
wire   [1:0] select_ln65_45_fu_2405_p3;
wire   [1:0] zext_ln65_6_fu_2387_p1;
wire   [1:0] select_ln65_47_fu_2427_p3;
wire   [3:0] phi_ln65_11_fu_2443_p17;
wire   [0:0] icmp_ln1496_33_fu_2481_p2;
wire   [0:0] icmp_ln1496_34_fu_2503_p2;
wire   [15:0] select_ln65_49_fu_2495_p3;
wire   [15:0] select_ln65_51_fu_2517_p3;
wire   [0:0] icmp_ln1496_35_fu_2525_p2;
wire   [2:0] select_ln65_50_fu_2509_p3;
wire   [2:0] select_ln65_48_fu_2487_p3;
wire   [2:0] select_ln65_52_fu_2531_p3;
wire   [3:0] phi_ln65_12_fu_2543_p17;
wire   [15:0] phi_ln65_11_fu_2443_p18;
wire   [15:0] phi_ln65_12_fu_2543_p18;
wire   [0:0] icmp_ln1496_36_fu_2581_p2;
wire   [2:0] zext_ln65_7_fu_2435_p1;
wire   [0:0] icmp_ln1496_37_fu_2595_p2;
wire   [0:0] icmp_ln1496_38_fu_2617_p2;
wire   [15:0] select_ln65_55_fu_2609_p3;
wire   [15:0] select_ln65_57_fu_2630_p3;
wire   [0:0] icmp_ln1496_39_fu_2637_p2;
wire   [3:0] select_ln65_56_fu_2622_p3;
wire   [3:0] select_ln65_54_fu_2601_p3;
wire   [3:0] select_ln65_58_fu_2643_p3;
wire   [0:0] icmp_ln1496_40_fu_2676_p2;
wire   [0:0] icmp_ln1496_41_fu_2698_p2;
wire   [15:0] select_ln65_60_fu_2690_p3;
wire   [15:0] select_ln65_62_fu_2711_p3;
wire   [0:0] icmp_ln1496_42_fu_2718_p2;
wire   [2:0] select_ln65_61_fu_2703_p3;
wire   [2:0] select_ln65_59_fu_2682_p3;
wire   [2:0] select_ln65_63_fu_2724_p3;
wire  signed [3:0] sext_ln65_2_fu_2732_p1;
wire   [15:0] phi_ln65_14_fu_2651_p18;
wire   [15:0] phi_ln65_15_fu_2736_p18;
wire   [0:0] icmp_ln1496_43_fu_2761_p2;
wire   [0:0] icmp_ln1496_45_fu_2775_p2;
wire   [0:0] icmp_ln1496_46_fu_2793_p2;
wire   [15:0] select_ln65_66_fu_2785_p3;
wire   [15:0] select_ln65_68_fu_2807_p3;
wire   [0:0] icmp_ln1496_47_fu_2815_p2;
wire   [1:0] select_ln65_67_fu_2799_p3;
wire   [1:0] zext_ln65_9_fu_2781_p1;
wire   [1:0] select_ln65_69_fu_2821_p3;
wire   [3:0] phi_ln65_17_fu_2837_p17;
wire   [0:0] icmp_ln1496_48_fu_2875_p2;
wire   [0:0] icmp_ln1496_49_fu_2897_p2;
wire   [15:0] select_ln65_71_fu_2889_p3;
wire   [15:0] select_ln65_73_fu_2911_p3;
wire   [0:0] icmp_ln1496_50_fu_2919_p2;
wire   [2:0] select_ln65_72_fu_2903_p3;
wire   [2:0] select_ln65_70_fu_2881_p3;
wire   [2:0] select_ln65_74_fu_2925_p3;
wire   [3:0] phi_ln65_18_fu_2937_p17;
wire   [15:0] phi_ln65_17_fu_2837_p18;
wire   [15:0] phi_ln65_18_fu_2937_p18;
wire   [0:0] icmp_ln1496_51_fu_2975_p2;
wire   [2:0] zext_ln65_10_fu_2829_p1;
wire   [0:0] icmp_ln1496_52_fu_2989_p2;
wire   [0:0] icmp_ln1496_53_fu_3011_p2;
wire   [15:0] select_ln65_77_fu_3003_p3;
wire   [15:0] select_ln65_79_fu_3024_p3;
wire   [0:0] icmp_ln1496_54_fu_3031_p2;
wire   [3:0] select_ln65_78_fu_3016_p3;
wire   [3:0] select_ln65_76_fu_2995_p3;
wire   [3:0] select_ln65_80_fu_3037_p3;
wire   [0:0] icmp_ln1496_55_fu_3070_p2;
wire   [0:0] icmp_ln1496_56_fu_3092_p2;
wire   [15:0] select_ln65_82_fu_3084_p3;
wire   [15:0] select_ln65_84_fu_3105_p3;
wire   [0:0] icmp_ln1496_57_fu_3112_p2;
wire   [2:0] select_ln65_83_fu_3097_p3;
wire   [2:0] select_ln65_81_fu_3076_p3;
wire   [2:0] select_ln65_85_fu_3118_p3;
wire  signed [3:0] sext_ln65_3_fu_3126_p1;
wire   [15:0] phi_ln65_20_fu_3045_p18;
wire   [15:0] phi_ln65_21_fu_3130_p18;
wire   [0:0] icmp_ln1496_58_fu_3155_p2;
wire   [0:0] icmp_ln1496_60_fu_3169_p2;
wire   [0:0] icmp_ln1496_61_fu_3187_p2;
wire   [15:0] select_ln65_88_fu_3179_p3;
wire   [15:0] select_ln65_90_fu_3201_p3;
wire   [0:0] icmp_ln1496_62_fu_3209_p2;
wire   [1:0] select_ln65_89_fu_3193_p3;
wire   [1:0] zext_ln65_12_fu_3175_p1;
wire   [1:0] select_ln65_91_fu_3215_p3;
wire   [3:0] phi_ln65_23_fu_3231_p17;
wire   [0:0] icmp_ln1496_63_fu_3269_p2;
wire   [0:0] icmp_ln1496_64_fu_3291_p2;
wire   [15:0] select_ln65_93_fu_3283_p3;
wire   [15:0] select_ln65_95_fu_3305_p3;
wire   [0:0] icmp_ln1496_65_fu_3313_p2;
wire   [2:0] select_ln65_94_fu_3297_p3;
wire   [2:0] select_ln65_92_fu_3275_p3;
wire   [2:0] select_ln65_96_fu_3319_p3;
wire   [3:0] phi_ln65_24_fu_3331_p17;
wire   [15:0] phi_ln65_23_fu_3231_p18;
wire   [15:0] phi_ln65_24_fu_3331_p18;
wire   [0:0] icmp_ln1496_66_fu_3369_p2;
wire   [2:0] zext_ln65_13_fu_3223_p1;
wire   [0:0] icmp_ln1496_67_fu_3383_p2;
wire   [0:0] icmp_ln1496_68_fu_3405_p2;
wire   [15:0] select_ln65_99_fu_3397_p3;
wire   [15:0] select_ln65_101_fu_3418_p3;
wire   [0:0] icmp_ln1496_69_fu_3425_p2;
wire   [3:0] select_ln65_100_fu_3410_p3;
wire   [3:0] select_ln65_98_fu_3389_p3;
wire   [3:0] select_ln65_102_fu_3431_p3;
wire   [0:0] icmp_ln1496_70_fu_3464_p2;
wire   [0:0] icmp_ln1496_71_fu_3486_p2;
wire   [15:0] select_ln65_104_fu_3478_p3;
wire   [15:0] select_ln65_106_fu_3499_p3;
wire   [0:0] icmp_ln1496_72_fu_3506_p2;
wire   [2:0] select_ln65_105_fu_3491_p3;
wire   [2:0] select_ln65_103_fu_3470_p3;
wire   [2:0] select_ln65_107_fu_3512_p3;
wire  signed [3:0] sext_ln65_4_fu_3520_p1;
wire   [15:0] phi_ln65_26_fu_3439_p18;
wire   [15:0] phi_ln65_27_fu_3524_p18;
wire   [0:0] icmp_ln1496_73_fu_3549_p2;
wire   [0:0] icmp_ln1496_75_fu_3563_p2;
wire   [0:0] icmp_ln1496_76_fu_3581_p2;
wire   [15:0] select_ln65_110_fu_3573_p3;
wire   [15:0] select_ln65_112_fu_3595_p3;
wire   [0:0] icmp_ln1496_77_fu_3603_p2;
wire   [1:0] select_ln65_111_fu_3587_p3;
wire   [1:0] zext_ln65_15_fu_3569_p1;
wire   [1:0] select_ln65_113_fu_3609_p3;
wire   [3:0] phi_ln65_29_fu_3625_p17;
wire   [0:0] icmp_ln1496_78_fu_3663_p2;
wire   [0:0] icmp_ln1496_79_fu_3685_p2;
wire   [15:0] select_ln65_115_fu_3677_p3;
wire   [15:0] select_ln65_117_fu_3699_p3;
wire   [0:0] icmp_ln1496_80_fu_3707_p2;
wire   [2:0] select_ln65_116_fu_3691_p3;
wire   [2:0] select_ln65_114_fu_3669_p3;
wire   [2:0] select_ln65_118_fu_3713_p3;
wire   [3:0] phi_ln65_30_fu_3725_p17;
wire   [15:0] phi_ln65_29_fu_3625_p18;
wire   [15:0] phi_ln65_30_fu_3725_p18;
wire   [0:0] icmp_ln1496_81_fu_3763_p2;
wire   [2:0] zext_ln65_16_fu_3617_p1;
wire   [0:0] icmp_ln1496_82_fu_3777_p2;
wire   [0:0] icmp_ln1496_83_fu_3799_p2;
wire   [15:0] select_ln65_121_fu_3791_p3;
wire   [15:0] select_ln65_123_fu_3812_p3;
wire   [0:0] icmp_ln1496_84_fu_3819_p2;
wire   [3:0] select_ln65_122_fu_3804_p3;
wire   [3:0] select_ln65_120_fu_3783_p3;
wire   [3:0] select_ln65_124_fu_3825_p3;
wire   [0:0] icmp_ln1496_85_fu_3858_p2;
wire   [0:0] icmp_ln1496_86_fu_3880_p2;
wire   [15:0] select_ln65_126_fu_3872_p3;
wire   [15:0] select_ln65_128_fu_3893_p3;
wire   [0:0] icmp_ln1496_87_fu_3900_p2;
wire   [2:0] select_ln65_127_fu_3885_p3;
wire   [2:0] select_ln65_125_fu_3864_p3;
wire   [2:0] select_ln65_129_fu_3906_p3;
wire  signed [3:0] sext_ln65_5_fu_3914_p1;
wire   [15:0] phi_ln65_32_fu_3833_p18;
wire   [15:0] phi_ln65_33_fu_3918_p18;
wire   [0:0] icmp_ln1496_88_fu_3943_p2;
wire   [3:0] zext_ln65_2_fu_3957_p1;
wire   [15:0] phi_ln65_2_fu_3960_p18;
wire   [15:0] phi_ln65_5_fu_3982_p18;
wire   [0:0] icmp_ln1496_14_fu_4003_p2;
wire   [3:0] tmp_data_0_V_fu_4016_p17;
wire   [3:0] zext_ln65_5_fu_4039_p1;
wire   [15:0] phi_ln65_8_fu_4042_p18;
wire   [15:0] phi_ln65_10_fu_4064_p18;
wire   [0:0] icmp_ln1496_29_fu_4085_p2;
wire   [3:0] tmp_data_1_V_fu_4098_p17;
wire   [3:0] zext_ln65_8_fu_4121_p1;
wire   [15:0] phi_ln65_13_fu_4124_p18;
wire   [15:0] phi_ln65_16_fu_4146_p18;
wire   [0:0] icmp_ln1496_44_fu_4167_p2;
wire   [3:0] tmp_data_2_V_fu_4180_p17;
wire   [3:0] zext_ln65_11_fu_4203_p1;
wire   [15:0] phi_ln65_19_fu_4206_p18;
wire   [15:0] phi_ln65_22_fu_4228_p18;
wire   [0:0] icmp_ln1496_59_fu_4249_p2;
wire   [3:0] tmp_data_3_V_fu_4262_p17;
wire   [3:0] zext_ln65_14_fu_4285_p1;
wire   [15:0] phi_ln65_25_fu_4288_p18;
wire   [15:0] phi_ln65_28_fu_4310_p18;
wire   [0:0] icmp_ln1496_74_fu_4331_p2;
wire   [3:0] tmp_data_4_V_fu_4344_p17;
wire   [3:0] zext_ln65_17_fu_4367_p1;
wire   [15:0] phi_ln65_31_fu_4370_p18;
wire   [15:0] phi_ln65_34_fu_4392_p18;
wire   [0:0] icmp_ln1496_89_fu_4413_p2;
wire   [3:0] tmp_data_5_V_fu_4426_p17;
wire    ap_CS_fsm_state6;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_676;
reg    ap_condition_378;
reg    ap_condition_663;
reg    ap_condition_682;
reg    ap_condition_667;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 pX = 32'd0;
#0 sX = 32'd0;
#0 pY = 32'd0;
#0 sY = 32'd0;
#0 kernel_data_V_3_6 = 16'd0;
#0 kernel_data_V_3_7 = 16'd0;
#0 kernel_data_V_3_8 = 16'd0;
#0 kernel_data_V_3_9 = 16'd0;
#0 kernel_data_V_3_10 = 16'd0;
#0 kernel_data_V_3_11 = 16'd0;
#0 kernel_data_V_3_30 = 16'd0;
#0 kernel_data_V_3_31 = 16'd0;
#0 kernel_data_V_3_32 = 16'd0;
#0 kernel_data_V_3_33 = 16'd0;
#0 kernel_data_V_3_34 = 16'd0;
#0 kernel_data_V_3_35 = 16'd0;
#0 kernel_data_V_3_54 = 16'd0;
#0 kernel_data_V_3_55 = 16'd0;
#0 kernel_data_V_3_56 = 16'd0;
#0 kernel_data_V_3_57 = 16'd0;
#0 kernel_data_V_3_58 = 16'd0;
#0 kernel_data_V_3_59 = 16'd0;
#0 kernel_data_V_3_78 = 16'd0;
#0 kernel_data_V_3_79 = 16'd0;
#0 kernel_data_V_3_80 = 16'd0;
#0 kernel_data_V_3_81 = 16'd0;
#0 kernel_data_V_3_82 = 16'd0;
#0 kernel_data_V_3_83 = 16'd0;
#0 kernel_data_V_3_12 = 16'd0;
#0 kernel_data_V_3_13 = 16'd0;
#0 kernel_data_V_3_14 = 16'd0;
#0 kernel_data_V_3_15 = 16'd0;
#0 kernel_data_V_3_16 = 16'd0;
#0 kernel_data_V_3_17 = 16'd0;
#0 kernel_data_V_3_36 = 16'd0;
#0 kernel_data_V_3_37 = 16'd0;
#0 kernel_data_V_3_38 = 16'd0;
#0 kernel_data_V_3_39 = 16'd0;
#0 kernel_data_V_3_40 = 16'd0;
#0 kernel_data_V_3_41 = 16'd0;
#0 kernel_data_V_3_60 = 16'd0;
#0 kernel_data_V_3_61 = 16'd0;
#0 kernel_data_V_3_62 = 16'd0;
#0 kernel_data_V_3_63 = 16'd0;
#0 kernel_data_V_3_64 = 16'd0;
#0 kernel_data_V_3_65 = 16'd0;
#0 kernel_data_V_3_84 = 16'd0;
#0 kernel_data_V_3_85 = 16'd0;
#0 kernel_data_V_3_86 = 16'd0;
#0 kernel_data_V_3_87 = 16'd0;
#0 kernel_data_V_3_88 = 16'd0;
#0 kernel_data_V_3_89 = 16'd0;
#0 kernel_data_V_3_18 = 16'd0;
#0 kernel_data_V_3_19 = 16'd0;
#0 kernel_data_V_3_20 = 16'd0;
#0 kernel_data_V_3_21 = 16'd0;
#0 kernel_data_V_3_22 = 16'd0;
#0 kernel_data_V_3_23 = 16'd0;
#0 kernel_data_V_3_42 = 16'd0;
#0 kernel_data_V_3_43 = 16'd0;
#0 kernel_data_V_3_44 = 16'd0;
#0 kernel_data_V_3_45 = 16'd0;
#0 kernel_data_V_3_46 = 16'd0;
#0 kernel_data_V_3_47 = 16'd0;
#0 kernel_data_V_3_66 = 16'd0;
#0 kernel_data_V_3_67 = 16'd0;
#0 kernel_data_V_3_68 = 16'd0;
#0 kernel_data_V_3_69 = 16'd0;
#0 kernel_data_V_3_70 = 16'd0;
#0 kernel_data_V_3_71 = 16'd0;
#0 kernel_data_V_3_90 = 16'd0;
#0 kernel_data_V_3_91 = 16'd0;
#0 kernel_data_V_3_92 = 16'd0;
#0 kernel_data_V_3_93 = 16'd0;
#0 kernel_data_V_3_94 = 16'd0;
#0 kernel_data_V_3_95 = 16'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_0_0_ce0),
    .we0(line_buffer_Array_V_3_0_0_we0),
    .d0(data_V_data_0_V_dout),
    .q0(line_buffer_Array_V_3_0_0_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_1_0_ce0),
    .we0(line_buffer_Array_V_3_1_0_we0),
    .d0(pool_window_11_V_reg_4656),
    .q0(line_buffer_Array_V_3_1_0_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_2_0_ce0),
    .we0(line_buffer_Array_V_3_2_0_we0),
    .d0(line_buffer_Array_V_3_1_0_q0),
    .q0(line_buffer_Array_V_3_2_0_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_0_1_ce0),
    .we0(line_buffer_Array_V_3_0_1_we0),
    .d0(data_V_data_1_V_dout),
    .q0(line_buffer_Array_V_3_0_1_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_1_1_ce0),
    .we0(line_buffer_Array_V_3_1_1_we0),
    .d0(pool_window_11_V_1_reg_4679),
    .q0(line_buffer_Array_V_3_1_1_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_2_1_ce0),
    .we0(line_buffer_Array_V_3_2_1_we0),
    .d0(line_buffer_Array_V_3_1_1_q0),
    .q0(line_buffer_Array_V_3_2_1_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_0_2_ce0),
    .we0(line_buffer_Array_V_3_0_2_we0),
    .d0(data_V_data_2_V_dout),
    .q0(line_buffer_Array_V_3_0_2_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_1_2_ce0),
    .we0(line_buffer_Array_V_3_1_2_we0),
    .d0(pool_window_11_V_2_reg_4702),
    .q0(line_buffer_Array_V_3_1_2_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_2_2_ce0),
    .we0(line_buffer_Array_V_3_2_2_we0),
    .d0(line_buffer_Array_V_3_1_2_q0),
    .q0(line_buffer_Array_V_3_2_2_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_0_3_ce0),
    .we0(line_buffer_Array_V_3_0_3_we0),
    .d0(data_V_data_3_V_dout),
    .q0(line_buffer_Array_V_3_0_3_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_1_3_ce0),
    .we0(line_buffer_Array_V_3_1_3_we0),
    .d0(pool_window_11_V_3_reg_4725),
    .q0(line_buffer_Array_V_3_1_3_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_2_3_ce0),
    .we0(line_buffer_Array_V_3_2_3_we0),
    .d0(line_buffer_Array_V_3_1_3_q0),
    .q0(line_buffer_Array_V_3_2_3_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_0_4_ce0),
    .we0(line_buffer_Array_V_3_0_4_we0),
    .d0(data_V_data_4_V_dout),
    .q0(line_buffer_Array_V_3_0_4_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_1_4_ce0),
    .we0(line_buffer_Array_V_3_1_4_we0),
    .d0(pool_window_11_V_4_reg_4748),
    .q0(line_buffer_Array_V_3_1_4_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_2_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_2_4_ce0),
    .we0(line_buffer_Array_V_3_2_4_we0),
    .d0(line_buffer_Array_V_3_1_4_q0),
    .q0(line_buffer_Array_V_3_2_4_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_0_5_ce0),
    .we0(line_buffer_Array_V_3_0_5_we0),
    .d0(data_V_data_5_V_dout),
    .q0(line_buffer_Array_V_3_0_5_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_1_5_ce0),
    .we0(line_buffer_Array_V_3_1_5_we0),
    .d0(pool_window_11_V_5_reg_4771),
    .q0(line_buffer_Array_V_3_1_5_q0)
);

pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s_line_bufYi #(
    .DataWidth( 16 ),
    .AddressRange( 44 ),
    .AddressWidth( 6 ))
line_buffer_Array_V_3_2_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(6'd43),
    .ce0(line_buffer_Array_V_3_2_5_ce0),
    .we0(line_buffer_Array_V_3_2_5_we0),
    .d0(line_buffer_Array_V_3_1_5_q0),
    .q0(line_buffer_Array_V_3_2_5_q0)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U86(
    .din0(kernel_data_V_3_6),
    .din1(kernel_data_V_3_12),
    .din2(kernel_data_V_3_18),
    .din3(line_buffer_Array_V_3_2_0_q0),
    .din4(line_buffer_Array_V_3_2_0_q0),
    .din5(line_buffer_Array_V_3_2_0_q0),
    .din6(line_buffer_Array_V_3_2_0_q0),
    .din7(line_buffer_Array_V_3_2_0_q0),
    .din8(line_buffer_Array_V_3_2_0_q0),
    .din9(line_buffer_Array_V_3_2_0_q0),
    .din10(line_buffer_Array_V_3_2_0_q0),
    .din11(line_buffer_Array_V_3_2_0_q0),
    .din12(line_buffer_Array_V_3_2_0_q0),
    .din13(line_buffer_Array_V_3_2_0_q0),
    .din14(line_buffer_Array_V_3_2_0_q0),
    .din15(line_buffer_Array_V_3_2_0_q0),
    .din16(phi_ln_fu_1655_p17),
    .dout(phi_ln_fu_1655_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U87(
    .din0(line_buffer_Array_V_3_1_0_q0),
    .din1(line_buffer_Array_V_3_1_0_q0),
    .din2(line_buffer_Array_V_3_1_0_q0),
    .din3(line_buffer_Array_V_3_1_0_q0),
    .din4(kernel_data_V_3_30),
    .din5(kernel_data_V_3_36),
    .din6(kernel_data_V_3_42),
    .din7(line_buffer_Array_V_3_1_0_q0),
    .din8(line_buffer_Array_V_3_1_0_q0),
    .din9(line_buffer_Array_V_3_1_0_q0),
    .din10(line_buffer_Array_V_3_1_0_q0),
    .din11(line_buffer_Array_V_3_1_0_q0),
    .din12(line_buffer_Array_V_3_1_0_q0),
    .din13(line_buffer_Array_V_3_1_0_q0),
    .din14(line_buffer_Array_V_3_1_0_q0),
    .din15(line_buffer_Array_V_3_1_0_q0),
    .din16(phi_ln65_1_fu_1755_p17),
    .dout(phi_ln65_1_fu_1755_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U88(
    .din0(pool_window_11_V_reg_4656),
    .din1(pool_window_11_V_reg_4656),
    .din2(pool_window_11_V_reg_4656),
    .din3(pool_window_11_V_reg_4656),
    .din4(pool_window_11_V_reg_4656),
    .din5(pool_window_11_V_reg_4656),
    .din6(pool_window_11_V_reg_4656),
    .din7(pool_window_11_V_reg_4656),
    .din8(kernel_data_V_3_54),
    .din9(kernel_data_V_3_60),
    .din10(kernel_data_V_3_66),
    .din11(pool_window_11_V_reg_4656),
    .din12(pool_window_11_V_reg_4656),
    .din13(pool_window_11_V_reg_4656),
    .din14(pool_window_11_V_reg_4656),
    .din15(pool_window_11_V_reg_4656),
    .din16(select_ln65_14_fu_1855_p3),
    .dout(phi_ln65_3_fu_1863_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U89(
    .din0(pool_window_15_V_reg_4476),
    .din1(pool_window_15_V_reg_4476),
    .din2(pool_window_15_V_reg_4476),
    .din3(pool_window_15_V_reg_4476),
    .din4(pool_window_15_V_reg_4476),
    .din5(pool_window_15_V_reg_4476),
    .din6(pool_window_15_V_reg_4476),
    .din7(pool_window_15_V_reg_4476),
    .din8(pool_window_15_V_reg_4476),
    .din9(pool_window_15_V_reg_4476),
    .din10(pool_window_15_V_reg_4476),
    .din11(pool_window_15_V_reg_4476),
    .din12(kernel_data_V_3_78),
    .din13(kernel_data_V_3_84),
    .din14(kernel_data_V_3_90),
    .din15(pool_window_15_V_reg_4476),
    .din16(sext_ln65_fu_1944_p1),
    .dout(phi_ln65_4_fu_1948_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U90(
    .din0(kernel_data_V_3_7),
    .din1(kernel_data_V_3_13),
    .din2(kernel_data_V_3_19),
    .din3(line_buffer_Array_V_3_2_1_q0),
    .din4(line_buffer_Array_V_3_2_1_q0),
    .din5(line_buffer_Array_V_3_2_1_q0),
    .din6(line_buffer_Array_V_3_2_1_q0),
    .din7(line_buffer_Array_V_3_2_1_q0),
    .din8(line_buffer_Array_V_3_2_1_q0),
    .din9(line_buffer_Array_V_3_2_1_q0),
    .din10(line_buffer_Array_V_3_2_1_q0),
    .din11(line_buffer_Array_V_3_2_1_q0),
    .din12(line_buffer_Array_V_3_2_1_q0),
    .din13(line_buffer_Array_V_3_2_1_q0),
    .din14(line_buffer_Array_V_3_2_1_q0),
    .din15(line_buffer_Array_V_3_2_1_q0),
    .din16(phi_ln65_6_fu_2049_p17),
    .dout(phi_ln65_6_fu_2049_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U91(
    .din0(line_buffer_Array_V_3_1_1_q0),
    .din1(line_buffer_Array_V_3_1_1_q0),
    .din2(line_buffer_Array_V_3_1_1_q0),
    .din3(line_buffer_Array_V_3_1_1_q0),
    .din4(kernel_data_V_3_31),
    .din5(kernel_data_V_3_37),
    .din6(kernel_data_V_3_43),
    .din7(line_buffer_Array_V_3_1_1_q0),
    .din8(line_buffer_Array_V_3_1_1_q0),
    .din9(line_buffer_Array_V_3_1_1_q0),
    .din10(line_buffer_Array_V_3_1_1_q0),
    .din11(line_buffer_Array_V_3_1_1_q0),
    .din12(line_buffer_Array_V_3_1_1_q0),
    .din13(line_buffer_Array_V_3_1_1_q0),
    .din14(line_buffer_Array_V_3_1_1_q0),
    .din15(line_buffer_Array_V_3_1_1_q0),
    .din16(phi_ln65_7_fu_2149_p17),
    .dout(phi_ln65_7_fu_2149_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U92(
    .din0(pool_window_11_V_1_reg_4679),
    .din1(pool_window_11_V_1_reg_4679),
    .din2(pool_window_11_V_1_reg_4679),
    .din3(pool_window_11_V_1_reg_4679),
    .din4(pool_window_11_V_1_reg_4679),
    .din5(pool_window_11_V_1_reg_4679),
    .din6(pool_window_11_V_1_reg_4679),
    .din7(pool_window_11_V_1_reg_4679),
    .din8(kernel_data_V_3_55),
    .din9(kernel_data_V_3_61),
    .din10(kernel_data_V_3_67),
    .din11(pool_window_11_V_1_reg_4679),
    .din12(pool_window_11_V_1_reg_4679),
    .din13(pool_window_11_V_1_reg_4679),
    .din14(pool_window_11_V_1_reg_4679),
    .din15(pool_window_11_V_1_reg_4679),
    .din16(select_ln65_36_fu_2249_p3),
    .dout(phi_ln65_9_fu_2257_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U93(
    .din0(pool_window_15_V_1_reg_4506),
    .din1(pool_window_15_V_1_reg_4506),
    .din2(pool_window_15_V_1_reg_4506),
    .din3(pool_window_15_V_1_reg_4506),
    .din4(pool_window_15_V_1_reg_4506),
    .din5(pool_window_15_V_1_reg_4506),
    .din6(pool_window_15_V_1_reg_4506),
    .din7(pool_window_15_V_1_reg_4506),
    .din8(pool_window_15_V_1_reg_4506),
    .din9(pool_window_15_V_1_reg_4506),
    .din10(pool_window_15_V_1_reg_4506),
    .din11(pool_window_15_V_1_reg_4506),
    .din12(kernel_data_V_3_79),
    .din13(kernel_data_V_3_85),
    .din14(kernel_data_V_3_91),
    .din15(pool_window_15_V_1_reg_4506),
    .din16(sext_ln65_1_fu_2338_p1),
    .dout(phi_ln65_s_fu_2342_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U94(
    .din0(kernel_data_V_3_8),
    .din1(kernel_data_V_3_14),
    .din2(kernel_data_V_3_20),
    .din3(line_buffer_Array_V_3_2_2_q0),
    .din4(line_buffer_Array_V_3_2_2_q0),
    .din5(line_buffer_Array_V_3_2_2_q0),
    .din6(line_buffer_Array_V_3_2_2_q0),
    .din7(line_buffer_Array_V_3_2_2_q0),
    .din8(line_buffer_Array_V_3_2_2_q0),
    .din9(line_buffer_Array_V_3_2_2_q0),
    .din10(line_buffer_Array_V_3_2_2_q0),
    .din11(line_buffer_Array_V_3_2_2_q0),
    .din12(line_buffer_Array_V_3_2_2_q0),
    .din13(line_buffer_Array_V_3_2_2_q0),
    .din14(line_buffer_Array_V_3_2_2_q0),
    .din15(line_buffer_Array_V_3_2_2_q0),
    .din16(phi_ln65_11_fu_2443_p17),
    .dout(phi_ln65_11_fu_2443_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U95(
    .din0(line_buffer_Array_V_3_1_2_q0),
    .din1(line_buffer_Array_V_3_1_2_q0),
    .din2(line_buffer_Array_V_3_1_2_q0),
    .din3(line_buffer_Array_V_3_1_2_q0),
    .din4(kernel_data_V_3_32),
    .din5(kernel_data_V_3_38),
    .din6(kernel_data_V_3_44),
    .din7(line_buffer_Array_V_3_1_2_q0),
    .din8(line_buffer_Array_V_3_1_2_q0),
    .din9(line_buffer_Array_V_3_1_2_q0),
    .din10(line_buffer_Array_V_3_1_2_q0),
    .din11(line_buffer_Array_V_3_1_2_q0),
    .din12(line_buffer_Array_V_3_1_2_q0),
    .din13(line_buffer_Array_V_3_1_2_q0),
    .din14(line_buffer_Array_V_3_1_2_q0),
    .din15(line_buffer_Array_V_3_1_2_q0),
    .din16(phi_ln65_12_fu_2543_p17),
    .dout(phi_ln65_12_fu_2543_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U96(
    .din0(pool_window_11_V_2_reg_4702),
    .din1(pool_window_11_V_2_reg_4702),
    .din2(pool_window_11_V_2_reg_4702),
    .din3(pool_window_11_V_2_reg_4702),
    .din4(pool_window_11_V_2_reg_4702),
    .din5(pool_window_11_V_2_reg_4702),
    .din6(pool_window_11_V_2_reg_4702),
    .din7(pool_window_11_V_2_reg_4702),
    .din8(kernel_data_V_3_56),
    .din9(kernel_data_V_3_62),
    .din10(kernel_data_V_3_68),
    .din11(pool_window_11_V_2_reg_4702),
    .din12(pool_window_11_V_2_reg_4702),
    .din13(pool_window_11_V_2_reg_4702),
    .din14(pool_window_11_V_2_reg_4702),
    .din15(pool_window_11_V_2_reg_4702),
    .din16(select_ln65_58_fu_2643_p3),
    .dout(phi_ln65_14_fu_2651_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U97(
    .din0(pool_window_15_V_2_reg_4536),
    .din1(pool_window_15_V_2_reg_4536),
    .din2(pool_window_15_V_2_reg_4536),
    .din3(pool_window_15_V_2_reg_4536),
    .din4(pool_window_15_V_2_reg_4536),
    .din5(pool_window_15_V_2_reg_4536),
    .din6(pool_window_15_V_2_reg_4536),
    .din7(pool_window_15_V_2_reg_4536),
    .din8(pool_window_15_V_2_reg_4536),
    .din9(pool_window_15_V_2_reg_4536),
    .din10(pool_window_15_V_2_reg_4536),
    .din11(pool_window_15_V_2_reg_4536),
    .din12(kernel_data_V_3_80),
    .din13(kernel_data_V_3_86),
    .din14(kernel_data_V_3_92),
    .din15(pool_window_15_V_2_reg_4536),
    .din16(sext_ln65_2_fu_2732_p1),
    .dout(phi_ln65_15_fu_2736_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U98(
    .din0(kernel_data_V_3_9),
    .din1(kernel_data_V_3_15),
    .din2(kernel_data_V_3_21),
    .din3(line_buffer_Array_V_3_2_3_q0),
    .din4(line_buffer_Array_V_3_2_3_q0),
    .din5(line_buffer_Array_V_3_2_3_q0),
    .din6(line_buffer_Array_V_3_2_3_q0),
    .din7(line_buffer_Array_V_3_2_3_q0),
    .din8(line_buffer_Array_V_3_2_3_q0),
    .din9(line_buffer_Array_V_3_2_3_q0),
    .din10(line_buffer_Array_V_3_2_3_q0),
    .din11(line_buffer_Array_V_3_2_3_q0),
    .din12(line_buffer_Array_V_3_2_3_q0),
    .din13(line_buffer_Array_V_3_2_3_q0),
    .din14(line_buffer_Array_V_3_2_3_q0),
    .din15(line_buffer_Array_V_3_2_3_q0),
    .din16(phi_ln65_17_fu_2837_p17),
    .dout(phi_ln65_17_fu_2837_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U99(
    .din0(line_buffer_Array_V_3_1_3_q0),
    .din1(line_buffer_Array_V_3_1_3_q0),
    .din2(line_buffer_Array_V_3_1_3_q0),
    .din3(line_buffer_Array_V_3_1_3_q0),
    .din4(kernel_data_V_3_33),
    .din5(kernel_data_V_3_39),
    .din6(kernel_data_V_3_45),
    .din7(line_buffer_Array_V_3_1_3_q0),
    .din8(line_buffer_Array_V_3_1_3_q0),
    .din9(line_buffer_Array_V_3_1_3_q0),
    .din10(line_buffer_Array_V_3_1_3_q0),
    .din11(line_buffer_Array_V_3_1_3_q0),
    .din12(line_buffer_Array_V_3_1_3_q0),
    .din13(line_buffer_Array_V_3_1_3_q0),
    .din14(line_buffer_Array_V_3_1_3_q0),
    .din15(line_buffer_Array_V_3_1_3_q0),
    .din16(phi_ln65_18_fu_2937_p17),
    .dout(phi_ln65_18_fu_2937_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U100(
    .din0(pool_window_11_V_3_reg_4725),
    .din1(pool_window_11_V_3_reg_4725),
    .din2(pool_window_11_V_3_reg_4725),
    .din3(pool_window_11_V_3_reg_4725),
    .din4(pool_window_11_V_3_reg_4725),
    .din5(pool_window_11_V_3_reg_4725),
    .din6(pool_window_11_V_3_reg_4725),
    .din7(pool_window_11_V_3_reg_4725),
    .din8(kernel_data_V_3_57),
    .din9(kernel_data_V_3_63),
    .din10(kernel_data_V_3_69),
    .din11(pool_window_11_V_3_reg_4725),
    .din12(pool_window_11_V_3_reg_4725),
    .din13(pool_window_11_V_3_reg_4725),
    .din14(pool_window_11_V_3_reg_4725),
    .din15(pool_window_11_V_3_reg_4725),
    .din16(select_ln65_80_fu_3037_p3),
    .dout(phi_ln65_20_fu_3045_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U101(
    .din0(pool_window_15_V_3_reg_4566),
    .din1(pool_window_15_V_3_reg_4566),
    .din2(pool_window_15_V_3_reg_4566),
    .din3(pool_window_15_V_3_reg_4566),
    .din4(pool_window_15_V_3_reg_4566),
    .din5(pool_window_15_V_3_reg_4566),
    .din6(pool_window_15_V_3_reg_4566),
    .din7(pool_window_15_V_3_reg_4566),
    .din8(pool_window_15_V_3_reg_4566),
    .din9(pool_window_15_V_3_reg_4566),
    .din10(pool_window_15_V_3_reg_4566),
    .din11(pool_window_15_V_3_reg_4566),
    .din12(kernel_data_V_3_81),
    .din13(kernel_data_V_3_87),
    .din14(kernel_data_V_3_93),
    .din15(pool_window_15_V_3_reg_4566),
    .din16(sext_ln65_3_fu_3126_p1),
    .dout(phi_ln65_21_fu_3130_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U102(
    .din0(kernel_data_V_3_10),
    .din1(kernel_data_V_3_16),
    .din2(kernel_data_V_3_22),
    .din3(line_buffer_Array_V_3_2_4_q0),
    .din4(line_buffer_Array_V_3_2_4_q0),
    .din5(line_buffer_Array_V_3_2_4_q0),
    .din6(line_buffer_Array_V_3_2_4_q0),
    .din7(line_buffer_Array_V_3_2_4_q0),
    .din8(line_buffer_Array_V_3_2_4_q0),
    .din9(line_buffer_Array_V_3_2_4_q0),
    .din10(line_buffer_Array_V_3_2_4_q0),
    .din11(line_buffer_Array_V_3_2_4_q0),
    .din12(line_buffer_Array_V_3_2_4_q0),
    .din13(line_buffer_Array_V_3_2_4_q0),
    .din14(line_buffer_Array_V_3_2_4_q0),
    .din15(line_buffer_Array_V_3_2_4_q0),
    .din16(phi_ln65_23_fu_3231_p17),
    .dout(phi_ln65_23_fu_3231_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U103(
    .din0(line_buffer_Array_V_3_1_4_q0),
    .din1(line_buffer_Array_V_3_1_4_q0),
    .din2(line_buffer_Array_V_3_1_4_q0),
    .din3(line_buffer_Array_V_3_1_4_q0),
    .din4(kernel_data_V_3_34),
    .din5(kernel_data_V_3_40),
    .din6(kernel_data_V_3_46),
    .din7(line_buffer_Array_V_3_1_4_q0),
    .din8(line_buffer_Array_V_3_1_4_q0),
    .din9(line_buffer_Array_V_3_1_4_q0),
    .din10(line_buffer_Array_V_3_1_4_q0),
    .din11(line_buffer_Array_V_3_1_4_q0),
    .din12(line_buffer_Array_V_3_1_4_q0),
    .din13(line_buffer_Array_V_3_1_4_q0),
    .din14(line_buffer_Array_V_3_1_4_q0),
    .din15(line_buffer_Array_V_3_1_4_q0),
    .din16(phi_ln65_24_fu_3331_p17),
    .dout(phi_ln65_24_fu_3331_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U104(
    .din0(pool_window_11_V_4_reg_4748),
    .din1(pool_window_11_V_4_reg_4748),
    .din2(pool_window_11_V_4_reg_4748),
    .din3(pool_window_11_V_4_reg_4748),
    .din4(pool_window_11_V_4_reg_4748),
    .din5(pool_window_11_V_4_reg_4748),
    .din6(pool_window_11_V_4_reg_4748),
    .din7(pool_window_11_V_4_reg_4748),
    .din8(kernel_data_V_3_58),
    .din9(kernel_data_V_3_64),
    .din10(kernel_data_V_3_70),
    .din11(pool_window_11_V_4_reg_4748),
    .din12(pool_window_11_V_4_reg_4748),
    .din13(pool_window_11_V_4_reg_4748),
    .din14(pool_window_11_V_4_reg_4748),
    .din15(pool_window_11_V_4_reg_4748),
    .din16(select_ln65_102_fu_3431_p3),
    .dout(phi_ln65_26_fu_3439_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U105(
    .din0(pool_window_15_V_4_reg_4596),
    .din1(pool_window_15_V_4_reg_4596),
    .din2(pool_window_15_V_4_reg_4596),
    .din3(pool_window_15_V_4_reg_4596),
    .din4(pool_window_15_V_4_reg_4596),
    .din5(pool_window_15_V_4_reg_4596),
    .din6(pool_window_15_V_4_reg_4596),
    .din7(pool_window_15_V_4_reg_4596),
    .din8(pool_window_15_V_4_reg_4596),
    .din9(pool_window_15_V_4_reg_4596),
    .din10(pool_window_15_V_4_reg_4596),
    .din11(pool_window_15_V_4_reg_4596),
    .din12(kernel_data_V_3_82),
    .din13(kernel_data_V_3_88),
    .din14(kernel_data_V_3_94),
    .din15(pool_window_15_V_4_reg_4596),
    .din16(sext_ln65_4_fu_3520_p1),
    .dout(phi_ln65_27_fu_3524_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U106(
    .din0(kernel_data_V_3_11),
    .din1(kernel_data_V_3_17),
    .din2(kernel_data_V_3_23),
    .din3(line_buffer_Array_V_3_2_5_q0),
    .din4(line_buffer_Array_V_3_2_5_q0),
    .din5(line_buffer_Array_V_3_2_5_q0),
    .din6(line_buffer_Array_V_3_2_5_q0),
    .din7(line_buffer_Array_V_3_2_5_q0),
    .din8(line_buffer_Array_V_3_2_5_q0),
    .din9(line_buffer_Array_V_3_2_5_q0),
    .din10(line_buffer_Array_V_3_2_5_q0),
    .din11(line_buffer_Array_V_3_2_5_q0),
    .din12(line_buffer_Array_V_3_2_5_q0),
    .din13(line_buffer_Array_V_3_2_5_q0),
    .din14(line_buffer_Array_V_3_2_5_q0),
    .din15(line_buffer_Array_V_3_2_5_q0),
    .din16(phi_ln65_29_fu_3625_p17),
    .dout(phi_ln65_29_fu_3625_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U107(
    .din0(line_buffer_Array_V_3_1_5_q0),
    .din1(line_buffer_Array_V_3_1_5_q0),
    .din2(line_buffer_Array_V_3_1_5_q0),
    .din3(line_buffer_Array_V_3_1_5_q0),
    .din4(kernel_data_V_3_35),
    .din5(kernel_data_V_3_41),
    .din6(kernel_data_V_3_47),
    .din7(line_buffer_Array_V_3_1_5_q0),
    .din8(line_buffer_Array_V_3_1_5_q0),
    .din9(line_buffer_Array_V_3_1_5_q0),
    .din10(line_buffer_Array_V_3_1_5_q0),
    .din11(line_buffer_Array_V_3_1_5_q0),
    .din12(line_buffer_Array_V_3_1_5_q0),
    .din13(line_buffer_Array_V_3_1_5_q0),
    .din14(line_buffer_Array_V_3_1_5_q0),
    .din15(line_buffer_Array_V_3_1_5_q0),
    .din16(phi_ln65_30_fu_3725_p17),
    .dout(phi_ln65_30_fu_3725_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U108(
    .din0(pool_window_11_V_5_reg_4771),
    .din1(pool_window_11_V_5_reg_4771),
    .din2(pool_window_11_V_5_reg_4771),
    .din3(pool_window_11_V_5_reg_4771),
    .din4(pool_window_11_V_5_reg_4771),
    .din5(pool_window_11_V_5_reg_4771),
    .din6(pool_window_11_V_5_reg_4771),
    .din7(pool_window_11_V_5_reg_4771),
    .din8(kernel_data_V_3_59),
    .din9(kernel_data_V_3_65),
    .din10(kernel_data_V_3_71),
    .din11(pool_window_11_V_5_reg_4771),
    .din12(pool_window_11_V_5_reg_4771),
    .din13(pool_window_11_V_5_reg_4771),
    .din14(pool_window_11_V_5_reg_4771),
    .din15(pool_window_11_V_5_reg_4771),
    .din16(select_ln65_124_fu_3825_p3),
    .dout(phi_ln65_32_fu_3833_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U109(
    .din0(pool_window_15_V_5_reg_4626),
    .din1(pool_window_15_V_5_reg_4626),
    .din2(pool_window_15_V_5_reg_4626),
    .din3(pool_window_15_V_5_reg_4626),
    .din4(pool_window_15_V_5_reg_4626),
    .din5(pool_window_15_V_5_reg_4626),
    .din6(pool_window_15_V_5_reg_4626),
    .din7(pool_window_15_V_5_reg_4626),
    .din8(pool_window_15_V_5_reg_4626),
    .din9(pool_window_15_V_5_reg_4626),
    .din10(pool_window_15_V_5_reg_4626),
    .din11(pool_window_15_V_5_reg_4626),
    .din12(kernel_data_V_3_83),
    .din13(kernel_data_V_3_89),
    .din14(kernel_data_V_3_95),
    .din15(pool_window_15_V_5_reg_4626),
    .din16(sext_ln65_5_fu_3914_p1),
    .dout(phi_ln65_33_fu_3918_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U110(
    .din0(pool_window_0_V_reg_4918),
    .din1(pool_window_1_V_reg_5062),
    .din2(pool_window_2_V_reg_5206),
    .din3(pool_window_3_V_reg_4812),
    .din4(pool_window_4_V_reg_4954),
    .din5(pool_window_5_V_reg_5098),
    .din6(pool_window_6_V_reg_5242),
    .din7(pool_window_7_V_reg_4798),
    .din8(pool_window_7_V_reg_4798),
    .din9(pool_window_7_V_reg_4798),
    .din10(pool_window_7_V_reg_4798),
    .din11(pool_window_7_V_reg_4798),
    .din12(pool_window_7_V_reg_4798),
    .din13(pool_window_7_V_reg_4798),
    .din14(pool_window_7_V_reg_4798),
    .din15(pool_window_7_V_reg_4798),
    .din16(zext_ln65_2_fu_3957_p1),
    .dout(phi_ln65_2_fu_3960_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U111(
    .din0(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din1(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din2(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din3(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din4(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din5(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din6(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din7(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din8(pool_window_8_V_reg_4990),
    .din9(pool_window_9_V_reg_5134),
    .din10(pool_window_10_V_reg_5278),
    .din11(pool_window_11_V_reg_4656_pp0_iter2_reg),
    .din12(pool_window_12_V_reg_5026),
    .din13(pool_window_13_V_reg_5170),
    .din14(pool_window_14_V_reg_5314),
    .din15(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din16(select_ln65_20_reg_5355),
    .dout(phi_ln65_5_fu_3982_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U112(
    .din0(pool_window_0_V_reg_4918),
    .din1(pool_window_1_V_reg_5062),
    .din2(pool_window_2_V_reg_5206),
    .din3(pool_window_3_V_reg_4812),
    .din4(pool_window_4_V_reg_4954),
    .din5(pool_window_5_V_reg_5098),
    .din6(pool_window_6_V_reg_5242),
    .din7(pool_window_7_V_reg_4798),
    .din8(pool_window_8_V_reg_4990),
    .din9(pool_window_9_V_reg_5134),
    .din10(pool_window_10_V_reg_5278),
    .din11(pool_window_11_V_reg_4656_pp0_iter2_reg),
    .din12(pool_window_12_V_reg_5026),
    .din13(pool_window_13_V_reg_5170),
    .din14(pool_window_14_V_reg_5314),
    .din15(pool_window_15_V_reg_4476_pp0_iter2_reg),
    .din16(tmp_data_0_V_fu_4016_p17),
    .dout(tmp_data_0_V_fu_4016_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U113(
    .din0(pool_window_0_V_1_reg_4924),
    .din1(pool_window_1_V_1_reg_5068),
    .din2(pool_window_2_V_1_reg_5212),
    .din3(pool_window_3_V_1_reg_4832),
    .din4(pool_window_4_V_1_reg_4960),
    .din5(pool_window_5_V_1_reg_5104),
    .din6(pool_window_6_V_1_reg_5248),
    .din7(pool_window_7_V_1_reg_4818),
    .din8(pool_window_7_V_1_reg_4818),
    .din9(pool_window_7_V_1_reg_4818),
    .din10(pool_window_7_V_1_reg_4818),
    .din11(pool_window_7_V_1_reg_4818),
    .din12(pool_window_7_V_1_reg_4818),
    .din13(pool_window_7_V_1_reg_4818),
    .din14(pool_window_7_V_1_reg_4818),
    .din15(pool_window_7_V_1_reg_4818),
    .din16(zext_ln65_5_fu_4039_p1),
    .dout(phi_ln65_8_fu_4042_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U114(
    .din0(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din1(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din2(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din3(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din4(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din5(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din6(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din7(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din8(pool_window_8_V_1_reg_4996),
    .din9(pool_window_9_V_1_reg_5140),
    .din10(pool_window_10_V_1_reg_5284),
    .din11(pool_window_11_V_1_reg_4679_pp0_iter2_reg),
    .din12(pool_window_12_V_1_reg_5032),
    .din13(pool_window_13_V_1_reg_5176),
    .din14(pool_window_14_V_1_reg_5320),
    .din15(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din16(select_ln65_42_reg_5366),
    .dout(phi_ln65_10_fu_4064_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U115(
    .din0(pool_window_0_V_1_reg_4924),
    .din1(pool_window_1_V_1_reg_5068),
    .din2(pool_window_2_V_1_reg_5212),
    .din3(pool_window_3_V_1_reg_4832),
    .din4(pool_window_4_V_1_reg_4960),
    .din5(pool_window_5_V_1_reg_5104),
    .din6(pool_window_6_V_1_reg_5248),
    .din7(pool_window_7_V_1_reg_4818),
    .din8(pool_window_8_V_1_reg_4996),
    .din9(pool_window_9_V_1_reg_5140),
    .din10(pool_window_10_V_1_reg_5284),
    .din11(pool_window_11_V_1_reg_4679_pp0_iter2_reg),
    .din12(pool_window_12_V_1_reg_5032),
    .din13(pool_window_13_V_1_reg_5176),
    .din14(pool_window_14_V_1_reg_5320),
    .din15(pool_window_15_V_1_reg_4506_pp0_iter2_reg),
    .din16(tmp_data_1_V_fu_4098_p17),
    .dout(tmp_data_1_V_fu_4098_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U116(
    .din0(pool_window_0_V_2_reg_4930),
    .din1(pool_window_1_V_2_reg_5074),
    .din2(pool_window_2_V_2_reg_5218),
    .din3(pool_window_3_V_2_reg_4852),
    .din4(pool_window_4_V_2_reg_4966),
    .din5(pool_window_5_V_2_reg_5110),
    .din6(pool_window_6_V_2_reg_5254),
    .din7(pool_window_7_V_2_reg_4838),
    .din8(pool_window_7_V_2_reg_4838),
    .din9(pool_window_7_V_2_reg_4838),
    .din10(pool_window_7_V_2_reg_4838),
    .din11(pool_window_7_V_2_reg_4838),
    .din12(pool_window_7_V_2_reg_4838),
    .din13(pool_window_7_V_2_reg_4838),
    .din14(pool_window_7_V_2_reg_4838),
    .din15(pool_window_7_V_2_reg_4838),
    .din16(zext_ln65_8_fu_4121_p1),
    .dout(phi_ln65_13_fu_4124_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U117(
    .din0(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din1(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din2(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din3(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din4(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din5(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din6(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din7(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din8(pool_window_8_V_2_reg_5002),
    .din9(pool_window_9_V_2_reg_5146),
    .din10(pool_window_10_V_2_reg_5290),
    .din11(pool_window_11_V_2_reg_4702_pp0_iter2_reg),
    .din12(pool_window_12_V_2_reg_5038),
    .din13(pool_window_13_V_2_reg_5182),
    .din14(pool_window_14_V_2_reg_5326),
    .din15(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din16(select_ln65_64_reg_5377),
    .dout(phi_ln65_16_fu_4146_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U118(
    .din0(pool_window_0_V_2_reg_4930),
    .din1(pool_window_1_V_2_reg_5074),
    .din2(pool_window_2_V_2_reg_5218),
    .din3(pool_window_3_V_2_reg_4852),
    .din4(pool_window_4_V_2_reg_4966),
    .din5(pool_window_5_V_2_reg_5110),
    .din6(pool_window_6_V_2_reg_5254),
    .din7(pool_window_7_V_2_reg_4838),
    .din8(pool_window_8_V_2_reg_5002),
    .din9(pool_window_9_V_2_reg_5146),
    .din10(pool_window_10_V_2_reg_5290),
    .din11(pool_window_11_V_2_reg_4702_pp0_iter2_reg),
    .din12(pool_window_12_V_2_reg_5038),
    .din13(pool_window_13_V_2_reg_5182),
    .din14(pool_window_14_V_2_reg_5326),
    .din15(pool_window_15_V_2_reg_4536_pp0_iter2_reg),
    .din16(tmp_data_2_V_fu_4180_p17),
    .dout(tmp_data_2_V_fu_4180_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U119(
    .din0(pool_window_0_V_3_reg_4936),
    .din1(pool_window_1_V_3_reg_5080),
    .din2(pool_window_2_V_3_reg_5224),
    .din3(pool_window_3_V_3_reg_4872),
    .din4(pool_window_4_V_3_reg_4972),
    .din5(pool_window_5_V_3_reg_5116),
    .din6(pool_window_6_V_3_reg_5260),
    .din7(pool_window_7_V_3_reg_4858),
    .din8(pool_window_7_V_3_reg_4858),
    .din9(pool_window_7_V_3_reg_4858),
    .din10(pool_window_7_V_3_reg_4858),
    .din11(pool_window_7_V_3_reg_4858),
    .din12(pool_window_7_V_3_reg_4858),
    .din13(pool_window_7_V_3_reg_4858),
    .din14(pool_window_7_V_3_reg_4858),
    .din15(pool_window_7_V_3_reg_4858),
    .din16(zext_ln65_11_fu_4203_p1),
    .dout(phi_ln65_19_fu_4206_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U120(
    .din0(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din1(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din2(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din3(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din4(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din5(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din6(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din7(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din8(pool_window_8_V_3_reg_5008),
    .din9(pool_window_9_V_3_reg_5152),
    .din10(pool_window_10_V_3_reg_5296),
    .din11(pool_window_11_V_3_reg_4725_pp0_iter2_reg),
    .din12(pool_window_12_V_3_reg_5044),
    .din13(pool_window_13_V_3_reg_5188),
    .din14(pool_window_14_V_3_reg_5332),
    .din15(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din16(select_ln65_86_reg_5388),
    .dout(phi_ln65_22_fu_4228_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U121(
    .din0(pool_window_0_V_3_reg_4936),
    .din1(pool_window_1_V_3_reg_5080),
    .din2(pool_window_2_V_3_reg_5224),
    .din3(pool_window_3_V_3_reg_4872),
    .din4(pool_window_4_V_3_reg_4972),
    .din5(pool_window_5_V_3_reg_5116),
    .din6(pool_window_6_V_3_reg_5260),
    .din7(pool_window_7_V_3_reg_4858),
    .din8(pool_window_8_V_3_reg_5008),
    .din9(pool_window_9_V_3_reg_5152),
    .din10(pool_window_10_V_3_reg_5296),
    .din11(pool_window_11_V_3_reg_4725_pp0_iter2_reg),
    .din12(pool_window_12_V_3_reg_5044),
    .din13(pool_window_13_V_3_reg_5188),
    .din14(pool_window_14_V_3_reg_5332),
    .din15(pool_window_15_V_3_reg_4566_pp0_iter2_reg),
    .din16(tmp_data_3_V_fu_4262_p17),
    .dout(tmp_data_3_V_fu_4262_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U122(
    .din0(pool_window_0_V_4_reg_4942),
    .din1(pool_window_1_V_4_reg_5086),
    .din2(pool_window_2_V_4_reg_5230),
    .din3(pool_window_3_V_4_reg_4892),
    .din4(pool_window_4_V_4_reg_4978),
    .din5(pool_window_5_V_4_reg_5122),
    .din6(pool_window_6_V_4_reg_5266),
    .din7(pool_window_7_V_4_reg_4878),
    .din8(pool_window_7_V_4_reg_4878),
    .din9(pool_window_7_V_4_reg_4878),
    .din10(pool_window_7_V_4_reg_4878),
    .din11(pool_window_7_V_4_reg_4878),
    .din12(pool_window_7_V_4_reg_4878),
    .din13(pool_window_7_V_4_reg_4878),
    .din14(pool_window_7_V_4_reg_4878),
    .din15(pool_window_7_V_4_reg_4878),
    .din16(zext_ln65_14_fu_4285_p1),
    .dout(phi_ln65_25_fu_4288_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U123(
    .din0(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din1(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din2(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din3(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din4(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din5(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din6(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din7(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din8(pool_window_8_V_4_reg_5014),
    .din9(pool_window_9_V_4_reg_5158),
    .din10(pool_window_10_V_4_reg_5302),
    .din11(pool_window_11_V_4_reg_4748_pp0_iter2_reg),
    .din12(pool_window_12_V_4_reg_5050),
    .din13(pool_window_13_V_4_reg_5194),
    .din14(pool_window_14_V_4_reg_5338),
    .din15(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din16(select_ln65_108_reg_5399),
    .dout(phi_ln65_28_fu_4310_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U124(
    .din0(pool_window_0_V_4_reg_4942),
    .din1(pool_window_1_V_4_reg_5086),
    .din2(pool_window_2_V_4_reg_5230),
    .din3(pool_window_3_V_4_reg_4892),
    .din4(pool_window_4_V_4_reg_4978),
    .din5(pool_window_5_V_4_reg_5122),
    .din6(pool_window_6_V_4_reg_5266),
    .din7(pool_window_7_V_4_reg_4878),
    .din8(pool_window_8_V_4_reg_5014),
    .din9(pool_window_9_V_4_reg_5158),
    .din10(pool_window_10_V_4_reg_5302),
    .din11(pool_window_11_V_4_reg_4748_pp0_iter2_reg),
    .din12(pool_window_12_V_4_reg_5050),
    .din13(pool_window_13_V_4_reg_5194),
    .din14(pool_window_14_V_4_reg_5338),
    .din15(pool_window_15_V_4_reg_4596_pp0_iter2_reg),
    .din16(tmp_data_4_V_fu_4344_p17),
    .dout(tmp_data_4_V_fu_4344_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U125(
    .din0(pool_window_0_V_5_reg_4948),
    .din1(pool_window_1_V_5_reg_5092),
    .din2(pool_window_2_V_5_reg_5236),
    .din3(pool_window_3_V_5_reg_4912),
    .din4(pool_window_4_V_5_reg_4984),
    .din5(pool_window_5_V_5_reg_5128),
    .din6(pool_window_6_V_5_reg_5272),
    .din7(pool_window_7_V_5_reg_4898),
    .din8(pool_window_7_V_5_reg_4898),
    .din9(pool_window_7_V_5_reg_4898),
    .din10(pool_window_7_V_5_reg_4898),
    .din11(pool_window_7_V_5_reg_4898),
    .din12(pool_window_7_V_5_reg_4898),
    .din13(pool_window_7_V_5_reg_4898),
    .din14(pool_window_7_V_5_reg_4898),
    .din15(pool_window_7_V_5_reg_4898),
    .din16(zext_ln65_17_fu_4367_p1),
    .dout(phi_ln65_31_fu_4370_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U126(
    .din0(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din1(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din2(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din3(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din4(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din5(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din6(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din7(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din8(pool_window_8_V_5_reg_5020),
    .din9(pool_window_9_V_5_reg_5164),
    .din10(pool_window_10_V_5_reg_5308),
    .din11(pool_window_11_V_5_reg_4771_pp0_iter2_reg),
    .din12(pool_window_12_V_5_reg_5056),
    .din13(pool_window_13_V_5_reg_5200),
    .din14(pool_window_14_V_5_reg_5344),
    .din15(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din16(select_ln65_130_reg_5410),
    .dout(phi_ln65_34_fu_4392_p18)
);

myproject_mux_164_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_164_16_1_1_U127(
    .din0(pool_window_0_V_5_reg_4948),
    .din1(pool_window_1_V_5_reg_5092),
    .din2(pool_window_2_V_5_reg_5236),
    .din3(pool_window_3_V_5_reg_4912),
    .din4(pool_window_4_V_5_reg_4984),
    .din5(pool_window_5_V_5_reg_5128),
    .din6(pool_window_6_V_5_reg_5272),
    .din7(pool_window_7_V_5_reg_4898),
    .din8(pool_window_8_V_5_reg_5020),
    .din9(pool_window_9_V_5_reg_5164),
    .din10(pool_window_10_V_5_reg_5308),
    .din11(pool_window_11_V_5_reg_4771_pp0_iter2_reg),
    .din12(pool_window_12_V_5_reg_5056),
    .din13(pool_window_13_V_5_reg_5200),
    .din14(pool_window_14_V_5_reg_5344),
    .din15(pool_window_15_V_5_reg_4626_pp0_iter2_reg),
    .din16(tmp_data_5_V_fu_4426_p17),
    .dout(tmp_data_5_V_fu_4426_p18)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_378)) begin
        if ((1'b1 == ap_condition_676)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_513 <= 32'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_storemerge_i_i_reg_513 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_513;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_fu_524_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_502 <= add_ln241_fu_530_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_502 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_663)) begin
        if ((icmp_ln212_fu_556_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln212_fu_556_p2 == 1'd0)) begin
            pX <= add_ln225_fu_562_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_682)) begin
        if ((icmp_ln216_fu_580_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln216_fu_580_p2 == 1'd0)) begin
            pY <= add_ln220_fu_586_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_667)) begin
        if ((icmp_ln212_reg_4468 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln212_reg_4468 == 1'd0)) begin
            sX <= select_ln227_fu_730_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln191_2_reg_4794 <= and_ln191_2_fu_718_p2;
        pool_window_11_V_1_reg_4679 <= line_buffer_Array_V_3_0_1_q0;
        pool_window_11_V_2_reg_4702 <= line_buffer_Array_V_3_0_2_q0;
        pool_window_11_V_3_reg_4725 <= line_buffer_Array_V_3_0_3_q0;
        pool_window_11_V_4_reg_4748 <= line_buffer_Array_V_3_0_4_q0;
        pool_window_11_V_5_reg_4771 <= line_buffer_Array_V_3_0_5_q0;
        pool_window_11_V_reg_4656 <= line_buffer_Array_V_3_0_0_q0;
        pool_window_15_V_1_reg_4506 <= data_V_data_1_V_dout;
        pool_window_15_V_2_reg_4536 <= data_V_data_2_V_dout;
        pool_window_15_V_3_reg_4566 <= data_V_data_3_V_dout;
        pool_window_15_V_4_reg_4596 <= data_V_data_4_V_dout;
        pool_window_15_V_5_reg_4626 <= data_V_data_5_V_dout;
        pool_window_15_V_reg_4476 <= data_V_data_0_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln191_2_reg_4794_pp0_iter2_reg <= and_ln191_2_reg_4794;
        pool_window_11_V_1_reg_4679_pp0_iter2_reg <= pool_window_11_V_1_reg_4679;
        pool_window_11_V_2_reg_4702_pp0_iter2_reg <= pool_window_11_V_2_reg_4702;
        pool_window_11_V_3_reg_4725_pp0_iter2_reg <= pool_window_11_V_3_reg_4725;
        pool_window_11_V_4_reg_4748_pp0_iter2_reg <= pool_window_11_V_4_reg_4748;
        pool_window_11_V_5_reg_4771_pp0_iter2_reg <= pool_window_11_V_5_reg_4771;
        pool_window_11_V_reg_4656_pp0_iter2_reg <= pool_window_11_V_reg_4656;
        pool_window_15_V_1_reg_4506_pp0_iter2_reg <= pool_window_15_V_1_reg_4506;
        pool_window_15_V_2_reg_4536_pp0_iter2_reg <= pool_window_15_V_2_reg_4536;
        pool_window_15_V_3_reg_4566_pp0_iter2_reg <= pool_window_15_V_3_reg_4566;
        pool_window_15_V_4_reg_4596_pp0_iter2_reg <= pool_window_15_V_4_reg_4596;
        pool_window_15_V_5_reg_4626_pp0_iter2_reg <= pool_window_15_V_5_reg_4626;
        pool_window_15_V_reg_4476_pp0_iter2_reg <= pool_window_15_V_reg_4476;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_fu_524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln191_2_reg_4458 <= icmp_ln191_2_fu_540_p2;
        icmp_ln191_3_reg_4463 <= icmp_ln191_3_fu_550_p2;
        icmp_ln212_reg_4468 <= icmp_ln212_fu_556_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln212_fu_556_p2 == 1'd1) & (icmp_ln241_fu_524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln216_reg_4472 <= icmp_ln216_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln241_reg_4449 <= icmp_ln241_fu_524_p2;
        icmp_ln241_reg_4449_pp0_iter1_reg <= icmp_ln241_reg_4449;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        kernel_data_V_3_10 <= kernel_data_V_3_16;
        kernel_data_V_3_11 <= kernel_data_V_3_17;
        kernel_data_V_3_12 <= kernel_data_V_3_18;
        kernel_data_V_3_13 <= kernel_data_V_3_19;
        kernel_data_V_3_14 <= kernel_data_V_3_20;
        kernel_data_V_3_15 <= kernel_data_V_3_21;
        kernel_data_V_3_16 <= kernel_data_V_3_22;
        kernel_data_V_3_17 <= kernel_data_V_3_23;
        kernel_data_V_3_18 <= line_buffer_Array_V_3_2_0_q0;
        kernel_data_V_3_19 <= line_buffer_Array_V_3_2_1_q0;
        kernel_data_V_3_20 <= line_buffer_Array_V_3_2_2_q0;
        kernel_data_V_3_21 <= line_buffer_Array_V_3_2_3_q0;
        kernel_data_V_3_22 <= line_buffer_Array_V_3_2_4_q0;
        kernel_data_V_3_23 <= line_buffer_Array_V_3_2_5_q0;
        kernel_data_V_3_30 <= kernel_data_V_3_36;
        kernel_data_V_3_31 <= kernel_data_V_3_37;
        kernel_data_V_3_32 <= kernel_data_V_3_38;
        kernel_data_V_3_33 <= kernel_data_V_3_39;
        kernel_data_V_3_34 <= kernel_data_V_3_40;
        kernel_data_V_3_35 <= kernel_data_V_3_41;
        kernel_data_V_3_36 <= kernel_data_V_3_42;
        kernel_data_V_3_37 <= kernel_data_V_3_43;
        kernel_data_V_3_38 <= kernel_data_V_3_44;
        kernel_data_V_3_39 <= kernel_data_V_3_45;
        kernel_data_V_3_40 <= kernel_data_V_3_46;
        kernel_data_V_3_41 <= kernel_data_V_3_47;
        kernel_data_V_3_42 <= line_buffer_Array_V_3_1_0_q0;
        kernel_data_V_3_43 <= line_buffer_Array_V_3_1_1_q0;
        kernel_data_V_3_44 <= line_buffer_Array_V_3_1_2_q0;
        kernel_data_V_3_45 <= line_buffer_Array_V_3_1_3_q0;
        kernel_data_V_3_46 <= line_buffer_Array_V_3_1_4_q0;
        kernel_data_V_3_47 <= line_buffer_Array_V_3_1_5_q0;
        kernel_data_V_3_54 <= kernel_data_V_3_60;
        kernel_data_V_3_55 <= kernel_data_V_3_61;
        kernel_data_V_3_56 <= kernel_data_V_3_62;
        kernel_data_V_3_57 <= kernel_data_V_3_63;
        kernel_data_V_3_58 <= kernel_data_V_3_64;
        kernel_data_V_3_59 <= kernel_data_V_3_65;
        kernel_data_V_3_6 <= kernel_data_V_3_12;
        kernel_data_V_3_60 <= kernel_data_V_3_66;
        kernel_data_V_3_61 <= kernel_data_V_3_67;
        kernel_data_V_3_62 <= kernel_data_V_3_68;
        kernel_data_V_3_63 <= kernel_data_V_3_69;
        kernel_data_V_3_64 <= kernel_data_V_3_70;
        kernel_data_V_3_65 <= kernel_data_V_3_71;
        kernel_data_V_3_66 <= pool_window_11_V_reg_4656;
        kernel_data_V_3_67 <= pool_window_11_V_1_reg_4679;
        kernel_data_V_3_68 <= pool_window_11_V_2_reg_4702;
        kernel_data_V_3_69 <= pool_window_11_V_3_reg_4725;
        kernel_data_V_3_7 <= kernel_data_V_3_13;
        kernel_data_V_3_70 <= pool_window_11_V_4_reg_4748;
        kernel_data_V_3_71 <= pool_window_11_V_5_reg_4771;
        kernel_data_V_3_78 <= kernel_data_V_3_84;
        kernel_data_V_3_79 <= kernel_data_V_3_85;
        kernel_data_V_3_8 <= kernel_data_V_3_14;
        kernel_data_V_3_80 <= kernel_data_V_3_86;
        kernel_data_V_3_81 <= kernel_data_V_3_87;
        kernel_data_V_3_82 <= kernel_data_V_3_88;
        kernel_data_V_3_83 <= kernel_data_V_3_89;
        kernel_data_V_3_84 <= kernel_data_V_3_90;
        kernel_data_V_3_85 <= kernel_data_V_3_91;
        kernel_data_V_3_86 <= kernel_data_V_3_92;
        kernel_data_V_3_87 <= kernel_data_V_3_93;
        kernel_data_V_3_88 <= kernel_data_V_3_94;
        kernel_data_V_3_89 <= kernel_data_V_3_95;
        kernel_data_V_3_9 <= kernel_data_V_3_15;
        kernel_data_V_3_90 <= pool_window_15_V_reg_4476;
        kernel_data_V_3_91 <= pool_window_15_V_1_reg_4506;
        kernel_data_V_3_92 <= pool_window_15_V_2_reg_4536;
        kernel_data_V_3_93 <= pool_window_15_V_3_reg_4566;
        kernel_data_V_3_94 <= pool_window_15_V_4_reg_4596;
        kernel_data_V_3_95 <= pool_window_15_V_5_reg_4626;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0))) begin
        pool_window_0_V_1_reg_4924 <= kernel_data_V_3_7;
        pool_window_0_V_2_reg_4930 <= kernel_data_V_3_8;
        pool_window_0_V_3_reg_4936 <= kernel_data_V_3_9;
        pool_window_0_V_4_reg_4942 <= kernel_data_V_3_10;
        pool_window_0_V_5_reg_4948 <= kernel_data_V_3_11;
        pool_window_0_V_reg_4918 <= kernel_data_V_3_6;
        pool_window_10_V_1_reg_5284 <= kernel_data_V_3_67;
        pool_window_10_V_2_reg_5290 <= kernel_data_V_3_68;
        pool_window_10_V_3_reg_5296 <= kernel_data_V_3_69;
        pool_window_10_V_4_reg_5302 <= kernel_data_V_3_70;
        pool_window_10_V_5_reg_5308 <= kernel_data_V_3_71;
        pool_window_10_V_reg_5278 <= kernel_data_V_3_66;
        pool_window_12_V_1_reg_5032 <= kernel_data_V_3_79;
        pool_window_12_V_2_reg_5038 <= kernel_data_V_3_80;
        pool_window_12_V_3_reg_5044 <= kernel_data_V_3_81;
        pool_window_12_V_4_reg_5050 <= kernel_data_V_3_82;
        pool_window_12_V_5_reg_5056 <= kernel_data_V_3_83;
        pool_window_12_V_reg_5026 <= kernel_data_V_3_78;
        pool_window_13_V_1_reg_5176 <= kernel_data_V_3_85;
        pool_window_13_V_2_reg_5182 <= kernel_data_V_3_86;
        pool_window_13_V_3_reg_5188 <= kernel_data_V_3_87;
        pool_window_13_V_4_reg_5194 <= kernel_data_V_3_88;
        pool_window_13_V_5_reg_5200 <= kernel_data_V_3_89;
        pool_window_13_V_reg_5170 <= kernel_data_V_3_84;
        pool_window_14_V_1_reg_5320 <= kernel_data_V_3_91;
        pool_window_14_V_2_reg_5326 <= kernel_data_V_3_92;
        pool_window_14_V_3_reg_5332 <= kernel_data_V_3_93;
        pool_window_14_V_4_reg_5338 <= kernel_data_V_3_94;
        pool_window_14_V_5_reg_5344 <= kernel_data_V_3_95;
        pool_window_14_V_reg_5314 <= kernel_data_V_3_90;
        pool_window_1_V_1_reg_5068 <= kernel_data_V_3_13;
        pool_window_1_V_2_reg_5074 <= kernel_data_V_3_14;
        pool_window_1_V_3_reg_5080 <= kernel_data_V_3_15;
        pool_window_1_V_4_reg_5086 <= kernel_data_V_3_16;
        pool_window_1_V_5_reg_5092 <= kernel_data_V_3_17;
        pool_window_1_V_reg_5062 <= kernel_data_V_3_12;
        pool_window_2_V_1_reg_5212 <= kernel_data_V_3_19;
        pool_window_2_V_2_reg_5218 <= kernel_data_V_3_20;
        pool_window_2_V_3_reg_5224 <= kernel_data_V_3_21;
        pool_window_2_V_4_reg_5230 <= kernel_data_V_3_22;
        pool_window_2_V_5_reg_5236 <= kernel_data_V_3_23;
        pool_window_2_V_reg_5206 <= kernel_data_V_3_18;
        pool_window_3_V_1_reg_4832 <= line_buffer_Array_V_3_2_1_q0;
        pool_window_3_V_2_reg_4852 <= line_buffer_Array_V_3_2_2_q0;
        pool_window_3_V_3_reg_4872 <= line_buffer_Array_V_3_2_3_q0;
        pool_window_3_V_4_reg_4892 <= line_buffer_Array_V_3_2_4_q0;
        pool_window_3_V_5_reg_4912 <= line_buffer_Array_V_3_2_5_q0;
        pool_window_3_V_reg_4812 <= line_buffer_Array_V_3_2_0_q0;
        pool_window_4_V_1_reg_4960 <= kernel_data_V_3_31;
        pool_window_4_V_2_reg_4966 <= kernel_data_V_3_32;
        pool_window_4_V_3_reg_4972 <= kernel_data_V_3_33;
        pool_window_4_V_4_reg_4978 <= kernel_data_V_3_34;
        pool_window_4_V_5_reg_4984 <= kernel_data_V_3_35;
        pool_window_4_V_reg_4954 <= kernel_data_V_3_30;
        pool_window_5_V_1_reg_5104 <= kernel_data_V_3_37;
        pool_window_5_V_2_reg_5110 <= kernel_data_V_3_38;
        pool_window_5_V_3_reg_5116 <= kernel_data_V_3_39;
        pool_window_5_V_4_reg_5122 <= kernel_data_V_3_40;
        pool_window_5_V_5_reg_5128 <= kernel_data_V_3_41;
        pool_window_5_V_reg_5098 <= kernel_data_V_3_36;
        pool_window_6_V_1_reg_5248 <= kernel_data_V_3_43;
        pool_window_6_V_2_reg_5254 <= kernel_data_V_3_44;
        pool_window_6_V_3_reg_5260 <= kernel_data_V_3_45;
        pool_window_6_V_4_reg_5266 <= kernel_data_V_3_46;
        pool_window_6_V_5_reg_5272 <= kernel_data_V_3_47;
        pool_window_6_V_reg_5242 <= kernel_data_V_3_42;
        pool_window_7_V_1_reg_4818 <= line_buffer_Array_V_3_1_1_q0;
        pool_window_7_V_2_reg_4838 <= line_buffer_Array_V_3_1_2_q0;
        pool_window_7_V_3_reg_4858 <= line_buffer_Array_V_3_1_3_q0;
        pool_window_7_V_4_reg_4878 <= line_buffer_Array_V_3_1_4_q0;
        pool_window_7_V_5_reg_4898 <= line_buffer_Array_V_3_1_5_q0;
        pool_window_7_V_reg_4798 <= line_buffer_Array_V_3_1_0_q0;
        pool_window_8_V_1_reg_4996 <= kernel_data_V_3_55;
        pool_window_8_V_2_reg_5002 <= kernel_data_V_3_56;
        pool_window_8_V_3_reg_5008 <= kernel_data_V_3_57;
        pool_window_8_V_4_reg_5014 <= kernel_data_V_3_58;
        pool_window_8_V_5_reg_5020 <= kernel_data_V_3_59;
        pool_window_8_V_reg_4990 <= kernel_data_V_3_54;
        pool_window_9_V_1_reg_5140 <= kernel_data_V_3_61;
        pool_window_9_V_2_reg_5146 <= kernel_data_V_3_62;
        pool_window_9_V_3_reg_5152 <= kernel_data_V_3_63;
        pool_window_9_V_4_reg_5158 <= kernel_data_V_3_64;
        pool_window_9_V_5_reg_5164 <= kernel_data_V_3_65;
        pool_window_9_V_reg_5134 <= kernel_data_V_3_60;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln212_reg_4468 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sY <= ap_phi_mux_storemerge_i_i_phi_fu_517_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794))) begin
        select_ln65_108_reg_5399[2 : 0] <= select_ln65_108_fu_3555_p3[2 : 0];
        select_ln65_119_reg_5405 <= select_ln65_119_fu_3769_p3;
        select_ln65_130_reg_5410[2 : 0] <= select_ln65_130_fu_3949_p3[2 : 0];
        select_ln65_20_reg_5355[2 : 0] <= select_ln65_20_fu_1979_p3[2 : 0];
        select_ln65_31_reg_5361 <= select_ln65_31_fu_2193_p3;
        select_ln65_42_reg_5366[2 : 0] <= select_ln65_42_fu_2373_p3[2 : 0];
        select_ln65_53_reg_5372 <= select_ln65_53_fu_2587_p3;
        select_ln65_64_reg_5377[2 : 0] <= select_ln65_64_fu_2767_p3[2 : 0];
        select_ln65_75_reg_5383 <= select_ln65_75_fu_2981_p3;
        select_ln65_86_reg_5388[2 : 0] <= select_ln65_86_fu_3161_p3[2 : 0];
        select_ln65_97_reg_5394 <= select_ln65_97_fu_3375_p3;
        select_ln65_9_reg_5350 <= select_ln65_9_fu_1799_p3;
    end
end

always @ (*) begin
    if ((icmp_ln241_fu_524_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln212_reg_4468 == 1'd1) & (icmp_ln216_reg_4472 == 1'd0) & (icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_storemerge_i_i_phi_fu_517_p4 = select_ln222_fu_756_p3;
    end else begin
        ap_phi_mux_storemerge_i_i_phi_fu_517_p4 = ap_phi_reg_pp0_iter1_storemerge_i_i_reg_513;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_blk_n = data_V_data_2_V_empty_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_2_V_read = 1'b1;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_blk_n = data_V_data_3_V_empty_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_3_V_read = 1'b1;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_blk_n = data_V_data_4_V_empty_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_4_V_read = 1'b1;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln241_reg_4449 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_blk_n = data_V_data_5_V_empty_n;
    end else begin
        data_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_5_V_read = 1'b1;
    end else begin
        data_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_4_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_4_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_5_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_Array_V_3_0_5_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_4_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_4_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_5_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_1_5_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_0_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_0_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_1_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_1_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_2_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_2_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_3_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_3_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_4_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_4_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_5_ce0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_reg_4449_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buffer_Array_V_3_2_5_we0 = 1'd1;
    end else begin
        line_buffer_Array_V_3_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_2_V_blk_n = res_V_data_2_V_full_n;
    end else begin
        res_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_2_V_write = 1'b1;
    end else begin
        res_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_3_V_blk_n = res_V_data_3_V_full_n;
    end else begin
        res_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_3_V_write = 1'b1;
    end else begin
        res_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_4_V_blk_n = res_V_data_4_V_full_n;
    end else begin
        res_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_4_V_write = 1'b1;
    end else begin
        res_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_5_V_blk_n = res_V_data_5_V_full_n;
    end else begin
        res_V_data_5_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_V_data_5_V_write = 1'b1;
    end else begin
        res_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln241_fu_524_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln241_fu_524_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln220_fu_586_p2 = (pY + 32'd1);

assign add_ln222_fu_750_p2 = (sY + 32'd1);

assign add_ln225_fu_562_p2 = (pX + 32'd1);

assign add_ln227_fu_724_p2 = (sX + 32'd1);

assign add_ln241_fu_530_p2 = (indvar_flatten_reg_502 + 11'd1);

assign and_ln191_1_fu_714_p2 = (icmp_ln191_3_reg_4463 & icmp_ln191_2_reg_4458);

assign and_ln191_2_fu_718_p2 = (and_ln191_fu_708_p2 & and_ln191_1_fu_714_p2);

assign and_ln191_fu_708_p2 = (icmp_ln191_fu_692_p2 & icmp_ln191_1_fu_702_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (io_acc_block_signal_op534 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln241_reg_4449 == 1'd0) & (io_acc_block_signal_op42 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (io_acc_block_signal_op534 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln241_reg_4449 == 1'd0) & (io_acc_block_signal_op42 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (io_acc_block_signal_op534 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((icmp_ln241_reg_4449 == 1'd0) & (io_acc_block_signal_op42 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln241_reg_4449 == 1'd0) & (io_acc_block_signal_op42 == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter3 = ((1'd1 == and_ln191_2_reg_4794_pp0_iter2_reg) & (io_acc_block_signal_op534 == 1'b0));
end

always @ (*) begin
    ap_condition_378 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_663 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln241_fu_524_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_667 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_676 = ((icmp_ln216_fu_580_p2 == 1'd1) & (icmp_ln212_fu_556_p2 == 1'd1) & (icmp_ln241_fu_524_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_682 = ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln212_fu_556_p2 == 1'd1) & (icmp_ln241_fu_524_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_storemerge_i_i_reg_513 = 'bx;

assign ap_ready = internal_ap_ready;

assign icmp_ln1496_10_fu_1888_p2 = (($signed(kernel_data_V_3_78) < $signed(kernel_data_V_3_84)) ? 1'b1 : 1'b0);

assign icmp_ln1496_11_fu_1910_p2 = (($signed(kernel_data_V_3_90) < $signed(pool_window_15_V_reg_4476)) ? 1'b1 : 1'b0);

assign icmp_ln1496_12_fu_1930_p2 = (($signed(select_ln65_16_fu_1902_p3) < $signed(select_ln65_18_fu_1923_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_13_fu_1973_p2 = (($signed(phi_ln65_3_fu_1863_p18) < $signed(phi_ln65_4_fu_1948_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_14_fu_4003_p2 = (($signed(phi_ln65_2_fu_3960_p18) < $signed(phi_ln65_5_fu_3982_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_15_fu_1987_p2 = (($signed(kernel_data_V_3_7) < $signed(kernel_data_V_3_13)) ? 1'b1 : 1'b0);

assign icmp_ln1496_16_fu_2005_p2 = (($signed(kernel_data_V_3_19) < $signed(line_buffer_Array_V_3_2_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_17_fu_2027_p2 = (($signed(select_ln65_22_fu_1997_p3) < $signed(select_ln65_24_fu_2019_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_18_fu_2087_p2 = (($signed(kernel_data_V_3_31) < $signed(kernel_data_V_3_37)) ? 1'b1 : 1'b0);

assign icmp_ln1496_19_fu_2109_p2 = (($signed(kernel_data_V_3_43) < $signed(line_buffer_Array_V_3_1_1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_1_fu_1611_p2 = (($signed(kernel_data_V_3_18) < $signed(line_buffer_Array_V_3_2_0_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_20_fu_2131_p2 = (($signed(select_ln65_27_fu_2101_p3) < $signed(select_ln65_29_fu_2123_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_21_fu_2187_p2 = (($signed(phi_ln65_6_fu_2049_p18) < $signed(phi_ln65_7_fu_2149_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_22_fu_2201_p2 = (($signed(kernel_data_V_3_55) < $signed(kernel_data_V_3_61)) ? 1'b1 : 1'b0);

assign icmp_ln1496_23_fu_2223_p2 = (($signed(kernel_data_V_3_67) < $signed(pool_window_11_V_1_reg_4679)) ? 1'b1 : 1'b0);

assign icmp_ln1496_24_fu_2243_p2 = (($signed(select_ln65_33_fu_2215_p3) < $signed(select_ln65_35_fu_2236_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_25_fu_2282_p2 = (($signed(kernel_data_V_3_79) < $signed(kernel_data_V_3_85)) ? 1'b1 : 1'b0);

assign icmp_ln1496_26_fu_2304_p2 = (($signed(kernel_data_V_3_91) < $signed(pool_window_15_V_1_reg_4506)) ? 1'b1 : 1'b0);

assign icmp_ln1496_27_fu_2324_p2 = (($signed(select_ln65_38_fu_2296_p3) < $signed(select_ln65_40_fu_2317_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_28_fu_2367_p2 = (($signed(phi_ln65_9_fu_2257_p18) < $signed(phi_ln65_s_fu_2342_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_29_fu_4085_p2 = (($signed(phi_ln65_8_fu_4042_p18) < $signed(phi_ln65_10_fu_4064_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_2_fu_1633_p2 = (($signed(select_ln65_fu_1603_p3) < $signed(select_ln65_2_fu_1625_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_30_fu_2381_p2 = (($signed(kernel_data_V_3_8) < $signed(kernel_data_V_3_14)) ? 1'b1 : 1'b0);

assign icmp_ln1496_31_fu_2399_p2 = (($signed(kernel_data_V_3_20) < $signed(line_buffer_Array_V_3_2_2_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_32_fu_2421_p2 = (($signed(select_ln65_44_fu_2391_p3) < $signed(select_ln65_46_fu_2413_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_33_fu_2481_p2 = (($signed(kernel_data_V_3_32) < $signed(kernel_data_V_3_38)) ? 1'b1 : 1'b0);

assign icmp_ln1496_34_fu_2503_p2 = (($signed(kernel_data_V_3_44) < $signed(line_buffer_Array_V_3_1_2_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_35_fu_2525_p2 = (($signed(select_ln65_49_fu_2495_p3) < $signed(select_ln65_51_fu_2517_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_36_fu_2581_p2 = (($signed(phi_ln65_11_fu_2443_p18) < $signed(phi_ln65_12_fu_2543_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_37_fu_2595_p2 = (($signed(kernel_data_V_3_56) < $signed(kernel_data_V_3_62)) ? 1'b1 : 1'b0);

assign icmp_ln1496_38_fu_2617_p2 = (($signed(kernel_data_V_3_68) < $signed(pool_window_11_V_2_reg_4702)) ? 1'b1 : 1'b0);

assign icmp_ln1496_39_fu_2637_p2 = (($signed(select_ln65_55_fu_2609_p3) < $signed(select_ln65_57_fu_2630_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_3_fu_1693_p2 = (($signed(kernel_data_V_3_30) < $signed(kernel_data_V_3_36)) ? 1'b1 : 1'b0);

assign icmp_ln1496_40_fu_2676_p2 = (($signed(kernel_data_V_3_80) < $signed(kernel_data_V_3_86)) ? 1'b1 : 1'b0);

assign icmp_ln1496_41_fu_2698_p2 = (($signed(kernel_data_V_3_92) < $signed(pool_window_15_V_2_reg_4536)) ? 1'b1 : 1'b0);

assign icmp_ln1496_42_fu_2718_p2 = (($signed(select_ln65_60_fu_2690_p3) < $signed(select_ln65_62_fu_2711_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_43_fu_2761_p2 = (($signed(phi_ln65_14_fu_2651_p18) < $signed(phi_ln65_15_fu_2736_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_44_fu_4167_p2 = (($signed(phi_ln65_13_fu_4124_p18) < $signed(phi_ln65_16_fu_4146_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_45_fu_2775_p2 = (($signed(kernel_data_V_3_9) < $signed(kernel_data_V_3_15)) ? 1'b1 : 1'b0);

assign icmp_ln1496_46_fu_2793_p2 = (($signed(kernel_data_V_3_21) < $signed(line_buffer_Array_V_3_2_3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_47_fu_2815_p2 = (($signed(select_ln65_66_fu_2785_p3) < $signed(select_ln65_68_fu_2807_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_48_fu_2875_p2 = (($signed(kernel_data_V_3_33) < $signed(kernel_data_V_3_39)) ? 1'b1 : 1'b0);

assign icmp_ln1496_49_fu_2897_p2 = (($signed(kernel_data_V_3_45) < $signed(line_buffer_Array_V_3_1_3_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_4_fu_1715_p2 = (($signed(kernel_data_V_3_42) < $signed(line_buffer_Array_V_3_1_0_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_50_fu_2919_p2 = (($signed(select_ln65_71_fu_2889_p3) < $signed(select_ln65_73_fu_2911_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_51_fu_2975_p2 = (($signed(phi_ln65_17_fu_2837_p18) < $signed(phi_ln65_18_fu_2937_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_52_fu_2989_p2 = (($signed(kernel_data_V_3_57) < $signed(kernel_data_V_3_63)) ? 1'b1 : 1'b0);

assign icmp_ln1496_53_fu_3011_p2 = (($signed(kernel_data_V_3_69) < $signed(pool_window_11_V_3_reg_4725)) ? 1'b1 : 1'b0);

assign icmp_ln1496_54_fu_3031_p2 = (($signed(select_ln65_77_fu_3003_p3) < $signed(select_ln65_79_fu_3024_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_55_fu_3070_p2 = (($signed(kernel_data_V_3_81) < $signed(kernel_data_V_3_87)) ? 1'b1 : 1'b0);

assign icmp_ln1496_56_fu_3092_p2 = (($signed(kernel_data_V_3_93) < $signed(pool_window_15_V_3_reg_4566)) ? 1'b1 : 1'b0);

assign icmp_ln1496_57_fu_3112_p2 = (($signed(select_ln65_82_fu_3084_p3) < $signed(select_ln65_84_fu_3105_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_58_fu_3155_p2 = (($signed(phi_ln65_20_fu_3045_p18) < $signed(phi_ln65_21_fu_3130_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_59_fu_4249_p2 = (($signed(phi_ln65_19_fu_4206_p18) < $signed(phi_ln65_22_fu_4228_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_5_fu_1737_p2 = (($signed(select_ln65_5_fu_1707_p3) < $signed(select_ln65_7_fu_1729_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_60_fu_3169_p2 = (($signed(kernel_data_V_3_10) < $signed(kernel_data_V_3_16)) ? 1'b1 : 1'b0);

assign icmp_ln1496_61_fu_3187_p2 = (($signed(kernel_data_V_3_22) < $signed(line_buffer_Array_V_3_2_4_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_62_fu_3209_p2 = (($signed(select_ln65_88_fu_3179_p3) < $signed(select_ln65_90_fu_3201_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_63_fu_3269_p2 = (($signed(kernel_data_V_3_34) < $signed(kernel_data_V_3_40)) ? 1'b1 : 1'b0);

assign icmp_ln1496_64_fu_3291_p2 = (($signed(kernel_data_V_3_46) < $signed(line_buffer_Array_V_3_1_4_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_65_fu_3313_p2 = (($signed(select_ln65_93_fu_3283_p3) < $signed(select_ln65_95_fu_3305_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_66_fu_3369_p2 = (($signed(phi_ln65_23_fu_3231_p18) < $signed(phi_ln65_24_fu_3331_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_67_fu_3383_p2 = (($signed(kernel_data_V_3_58) < $signed(kernel_data_V_3_64)) ? 1'b1 : 1'b0);

assign icmp_ln1496_68_fu_3405_p2 = (($signed(kernel_data_V_3_70) < $signed(pool_window_11_V_4_reg_4748)) ? 1'b1 : 1'b0);

assign icmp_ln1496_69_fu_3425_p2 = (($signed(select_ln65_99_fu_3397_p3) < $signed(select_ln65_101_fu_3418_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_6_fu_1793_p2 = (($signed(phi_ln_fu_1655_p18) < $signed(phi_ln65_1_fu_1755_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_70_fu_3464_p2 = (($signed(kernel_data_V_3_82) < $signed(kernel_data_V_3_88)) ? 1'b1 : 1'b0);

assign icmp_ln1496_71_fu_3486_p2 = (($signed(kernel_data_V_3_94) < $signed(pool_window_15_V_4_reg_4596)) ? 1'b1 : 1'b0);

assign icmp_ln1496_72_fu_3506_p2 = (($signed(select_ln65_104_fu_3478_p3) < $signed(select_ln65_106_fu_3499_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_73_fu_3549_p2 = (($signed(phi_ln65_26_fu_3439_p18) < $signed(phi_ln65_27_fu_3524_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_74_fu_4331_p2 = (($signed(phi_ln65_25_fu_4288_p18) < $signed(phi_ln65_28_fu_4310_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_75_fu_3563_p2 = (($signed(kernel_data_V_3_11) < $signed(kernel_data_V_3_17)) ? 1'b1 : 1'b0);

assign icmp_ln1496_76_fu_3581_p2 = (($signed(kernel_data_V_3_23) < $signed(line_buffer_Array_V_3_2_5_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_77_fu_3603_p2 = (($signed(select_ln65_110_fu_3573_p3) < $signed(select_ln65_112_fu_3595_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_78_fu_3663_p2 = (($signed(kernel_data_V_3_35) < $signed(kernel_data_V_3_41)) ? 1'b1 : 1'b0);

assign icmp_ln1496_79_fu_3685_p2 = (($signed(kernel_data_V_3_47) < $signed(line_buffer_Array_V_3_1_5_q0)) ? 1'b1 : 1'b0);

assign icmp_ln1496_7_fu_1807_p2 = (($signed(kernel_data_V_3_54) < $signed(kernel_data_V_3_60)) ? 1'b1 : 1'b0);

assign icmp_ln1496_80_fu_3707_p2 = (($signed(select_ln65_115_fu_3677_p3) < $signed(select_ln65_117_fu_3699_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_81_fu_3763_p2 = (($signed(phi_ln65_29_fu_3625_p18) < $signed(phi_ln65_30_fu_3725_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_82_fu_3777_p2 = (($signed(kernel_data_V_3_59) < $signed(kernel_data_V_3_65)) ? 1'b1 : 1'b0);

assign icmp_ln1496_83_fu_3799_p2 = (($signed(kernel_data_V_3_71) < $signed(pool_window_11_V_5_reg_4771)) ? 1'b1 : 1'b0);

assign icmp_ln1496_84_fu_3819_p2 = (($signed(select_ln65_121_fu_3791_p3) < $signed(select_ln65_123_fu_3812_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_85_fu_3858_p2 = (($signed(kernel_data_V_3_83) < $signed(kernel_data_V_3_89)) ? 1'b1 : 1'b0);

assign icmp_ln1496_86_fu_3880_p2 = (($signed(kernel_data_V_3_95) < $signed(pool_window_15_V_5_reg_4626)) ? 1'b1 : 1'b0);

assign icmp_ln1496_87_fu_3900_p2 = (($signed(select_ln65_126_fu_3872_p3) < $signed(select_ln65_128_fu_3893_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_88_fu_3943_p2 = (($signed(phi_ln65_32_fu_3833_p18) < $signed(phi_ln65_33_fu_3918_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_89_fu_4413_p2 = (($signed(phi_ln65_31_fu_4370_p18) < $signed(phi_ln65_34_fu_4392_p18)) ? 1'b1 : 1'b0);

assign icmp_ln1496_8_fu_1829_p2 = (($signed(kernel_data_V_3_66) < $signed(pool_window_11_V_reg_4656)) ? 1'b1 : 1'b0);

assign icmp_ln1496_9_fu_1849_p2 = (($signed(select_ln65_11_fu_1821_p3) < $signed(select_ln65_13_fu_1842_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1496_fu_1593_p2 = (($signed(kernel_data_V_3_6) < $signed(kernel_data_V_3_12)) ? 1'b1 : 1'b0);

assign icmp_ln191_1_fu_702_p2 = ((sY == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln191_2_fu_540_p2 = (($signed(pY) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln191_3_fu_550_p2 = (($signed(pX) > $signed(32'd2)) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_692_p2 = ((sX == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln212_fu_556_p2 = ((pX == 32'd43) ? 1'b1 : 1'b0);

assign icmp_ln216_fu_580_p2 = ((pY == 32'd43) ? 1'b1 : 1'b0);

assign icmp_ln241_fu_524_p2 = ((indvar_flatten_reg_502 == 11'd1936) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op42 = (data_V_data_5_V_empty_n & data_V_data_4_V_empty_n & data_V_data_3_V_empty_n & data_V_data_2_V_empty_n & data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign io_acc_block_signal_op534 = (res_V_data_5_V_full_n & res_V_data_4_V_full_n & res_V_data_3_V_full_n & res_V_data_2_V_full_n & res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign phi_ln65_11_fu_2443_p17 = select_ln65_47_fu_2427_p3;

assign phi_ln65_12_fu_2543_p17 = select_ln65_52_fu_2531_p3;

assign phi_ln65_17_fu_2837_p17 = select_ln65_69_fu_2821_p3;

assign phi_ln65_18_fu_2937_p17 = select_ln65_74_fu_2925_p3;

assign phi_ln65_1_fu_1755_p17 = select_ln65_8_fu_1743_p3;

assign phi_ln65_23_fu_3231_p17 = select_ln65_91_fu_3215_p3;

assign phi_ln65_24_fu_3331_p17 = select_ln65_96_fu_3319_p3;

assign phi_ln65_29_fu_3625_p17 = select_ln65_113_fu_3609_p3;

assign phi_ln65_30_fu_3725_p17 = select_ln65_118_fu_3713_p3;

assign phi_ln65_6_fu_2049_p17 = select_ln65_25_fu_2033_p3;

assign phi_ln65_7_fu_2149_p17 = select_ln65_30_fu_2137_p3;

assign phi_ln_fu_1655_p17 = select_ln65_3_fu_1639_p3;

assign res_V_data_0_V_din = tmp_data_0_V_fu_4016_p18;

assign res_V_data_1_V_din = tmp_data_1_V_fu_4098_p18;

assign res_V_data_2_V_din = tmp_data_2_V_fu_4180_p18;

assign res_V_data_3_V_din = tmp_data_3_V_fu_4262_p18;

assign res_V_data_4_V_din = tmp_data_4_V_fu_4344_p18;

assign res_V_data_5_V_din = tmp_data_5_V_fu_4426_p18;

assign select_ln222_fu_756_p3 = ((icmp_ln191_1_fu_702_p2[0:0] === 1'b1) ? 32'd0 : add_ln222_fu_750_p2);

assign select_ln227_fu_730_p3 = ((icmp_ln191_fu_692_p2[0:0] === 1'b1) ? 32'd0 : add_ln227_fu_724_p2);

assign select_ln65_100_fu_3410_p3 = ((icmp_ln1496_68_fu_3405_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_101_fu_3418_p3 = ((icmp_ln1496_68_fu_3405_p2[0:0] === 1'b1) ? pool_window_11_V_4_reg_4748 : kernel_data_V_3_70);

assign select_ln65_102_fu_3431_p3 = ((icmp_ln1496_69_fu_3425_p2[0:0] === 1'b1) ? select_ln65_100_fu_3410_p3 : select_ln65_98_fu_3389_p3);

assign select_ln65_103_fu_3470_p3 = ((icmp_ln1496_70_fu_3464_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_104_fu_3478_p3 = ((icmp_ln1496_70_fu_3464_p2[0:0] === 1'b1) ? kernel_data_V_3_88 : kernel_data_V_3_82);

assign select_ln65_105_fu_3491_p3 = ((icmp_ln1496_71_fu_3486_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_106_fu_3499_p3 = ((icmp_ln1496_71_fu_3486_p2[0:0] === 1'b1) ? pool_window_15_V_4_reg_4596 : kernel_data_V_3_94);

assign select_ln65_107_fu_3512_p3 = ((icmp_ln1496_72_fu_3506_p2[0:0] === 1'b1) ? select_ln65_105_fu_3491_p3 : select_ln65_103_fu_3470_p3);

assign select_ln65_108_fu_3555_p3 = ((icmp_ln1496_73_fu_3549_p2[0:0] === 1'b1) ? sext_ln65_4_fu_3520_p1 : select_ln65_102_fu_3431_p3);

assign select_ln65_10_fu_1813_p3 = ((icmp_ln1496_7_fu_1807_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_110_fu_3573_p3 = ((icmp_ln1496_75_fu_3563_p2[0:0] === 1'b1) ? kernel_data_V_3_17 : kernel_data_V_3_11);

assign select_ln65_111_fu_3587_p3 = ((icmp_ln1496_76_fu_3581_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_112_fu_3595_p3 = ((icmp_ln1496_76_fu_3581_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_2_5_q0 : kernel_data_V_3_23);

assign select_ln65_113_fu_3609_p3 = ((icmp_ln1496_77_fu_3603_p2[0:0] === 1'b1) ? select_ln65_111_fu_3587_p3 : zext_ln65_15_fu_3569_p1);

assign select_ln65_114_fu_3669_p3 = ((icmp_ln1496_78_fu_3663_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_115_fu_3677_p3 = ((icmp_ln1496_78_fu_3663_p2[0:0] === 1'b1) ? kernel_data_V_3_41 : kernel_data_V_3_35);

assign select_ln65_116_fu_3691_p3 = ((icmp_ln1496_79_fu_3685_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_117_fu_3699_p3 = ((icmp_ln1496_79_fu_3685_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_1_5_q0 : kernel_data_V_3_47);

assign select_ln65_118_fu_3713_p3 = ((icmp_ln1496_80_fu_3707_p2[0:0] === 1'b1) ? select_ln65_116_fu_3691_p3 : select_ln65_114_fu_3669_p3);

assign select_ln65_119_fu_3769_p3 = ((icmp_ln1496_81_fu_3763_p2[0:0] === 1'b1) ? select_ln65_118_fu_3713_p3 : zext_ln65_16_fu_3617_p1);

assign select_ln65_11_fu_1821_p3 = ((icmp_ln1496_7_fu_1807_p2[0:0] === 1'b1) ? kernel_data_V_3_60 : kernel_data_V_3_54);

assign select_ln65_120_fu_3783_p3 = ((icmp_ln1496_82_fu_3777_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_121_fu_3791_p3 = ((icmp_ln1496_82_fu_3777_p2[0:0] === 1'b1) ? kernel_data_V_3_65 : kernel_data_V_3_59);

assign select_ln65_122_fu_3804_p3 = ((icmp_ln1496_83_fu_3799_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_123_fu_3812_p3 = ((icmp_ln1496_83_fu_3799_p2[0:0] === 1'b1) ? pool_window_11_V_5_reg_4771 : kernel_data_V_3_71);

assign select_ln65_124_fu_3825_p3 = ((icmp_ln1496_84_fu_3819_p2[0:0] === 1'b1) ? select_ln65_122_fu_3804_p3 : select_ln65_120_fu_3783_p3);

assign select_ln65_125_fu_3864_p3 = ((icmp_ln1496_85_fu_3858_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_126_fu_3872_p3 = ((icmp_ln1496_85_fu_3858_p2[0:0] === 1'b1) ? kernel_data_V_3_89 : kernel_data_V_3_83);

assign select_ln65_127_fu_3885_p3 = ((icmp_ln1496_86_fu_3880_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_128_fu_3893_p3 = ((icmp_ln1496_86_fu_3880_p2[0:0] === 1'b1) ? pool_window_15_V_5_reg_4626 : kernel_data_V_3_95);

assign select_ln65_129_fu_3906_p3 = ((icmp_ln1496_87_fu_3900_p2[0:0] === 1'b1) ? select_ln65_127_fu_3885_p3 : select_ln65_125_fu_3864_p3);

assign select_ln65_12_fu_1834_p3 = ((icmp_ln1496_8_fu_1829_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_130_fu_3949_p3 = ((icmp_ln1496_88_fu_3943_p2[0:0] === 1'b1) ? sext_ln65_5_fu_3914_p1 : select_ln65_124_fu_3825_p3);

assign select_ln65_13_fu_1842_p3 = ((icmp_ln1496_8_fu_1829_p2[0:0] === 1'b1) ? pool_window_11_V_reg_4656 : kernel_data_V_3_66);

assign select_ln65_14_fu_1855_p3 = ((icmp_ln1496_9_fu_1849_p2[0:0] === 1'b1) ? select_ln65_12_fu_1834_p3 : select_ln65_10_fu_1813_p3);

assign select_ln65_15_fu_1894_p3 = ((icmp_ln1496_10_fu_1888_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_16_fu_1902_p3 = ((icmp_ln1496_10_fu_1888_p2[0:0] === 1'b1) ? kernel_data_V_3_84 : kernel_data_V_3_78);

assign select_ln65_17_fu_1915_p3 = ((icmp_ln1496_11_fu_1910_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_18_fu_1923_p3 = ((icmp_ln1496_11_fu_1910_p2[0:0] === 1'b1) ? pool_window_15_V_reg_4476 : kernel_data_V_3_90);

assign select_ln65_19_fu_1936_p3 = ((icmp_ln1496_12_fu_1930_p2[0:0] === 1'b1) ? select_ln65_17_fu_1915_p3 : select_ln65_15_fu_1894_p3);

assign select_ln65_1_fu_1617_p3 = ((icmp_ln1496_1_fu_1611_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_20_fu_1979_p3 = ((icmp_ln1496_13_fu_1973_p2[0:0] === 1'b1) ? sext_ln65_fu_1944_p1 : select_ln65_14_fu_1855_p3);

assign select_ln65_22_fu_1997_p3 = ((icmp_ln1496_15_fu_1987_p2[0:0] === 1'b1) ? kernel_data_V_3_13 : kernel_data_V_3_7);

assign select_ln65_23_fu_2011_p3 = ((icmp_ln1496_16_fu_2005_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_24_fu_2019_p3 = ((icmp_ln1496_16_fu_2005_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_2_1_q0 : kernel_data_V_3_19);

assign select_ln65_25_fu_2033_p3 = ((icmp_ln1496_17_fu_2027_p2[0:0] === 1'b1) ? select_ln65_23_fu_2011_p3 : zext_ln65_3_fu_1993_p1);

assign select_ln65_26_fu_2093_p3 = ((icmp_ln1496_18_fu_2087_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_27_fu_2101_p3 = ((icmp_ln1496_18_fu_2087_p2[0:0] === 1'b1) ? kernel_data_V_3_37 : kernel_data_V_3_31);

assign select_ln65_28_fu_2115_p3 = ((icmp_ln1496_19_fu_2109_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_29_fu_2123_p3 = ((icmp_ln1496_19_fu_2109_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_1_1_q0 : kernel_data_V_3_43);

assign select_ln65_2_fu_1625_p3 = ((icmp_ln1496_1_fu_1611_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_2_0_q0 : kernel_data_V_3_18);

assign select_ln65_30_fu_2137_p3 = ((icmp_ln1496_20_fu_2131_p2[0:0] === 1'b1) ? select_ln65_28_fu_2115_p3 : select_ln65_26_fu_2093_p3);

assign select_ln65_31_fu_2193_p3 = ((icmp_ln1496_21_fu_2187_p2[0:0] === 1'b1) ? select_ln65_30_fu_2137_p3 : zext_ln65_4_fu_2041_p1);

assign select_ln65_32_fu_2207_p3 = ((icmp_ln1496_22_fu_2201_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_33_fu_2215_p3 = ((icmp_ln1496_22_fu_2201_p2[0:0] === 1'b1) ? kernel_data_V_3_61 : kernel_data_V_3_55);

assign select_ln65_34_fu_2228_p3 = ((icmp_ln1496_23_fu_2223_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_35_fu_2236_p3 = ((icmp_ln1496_23_fu_2223_p2[0:0] === 1'b1) ? pool_window_11_V_1_reg_4679 : kernel_data_V_3_67);

assign select_ln65_36_fu_2249_p3 = ((icmp_ln1496_24_fu_2243_p2[0:0] === 1'b1) ? select_ln65_34_fu_2228_p3 : select_ln65_32_fu_2207_p3);

assign select_ln65_37_fu_2288_p3 = ((icmp_ln1496_25_fu_2282_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_38_fu_2296_p3 = ((icmp_ln1496_25_fu_2282_p2[0:0] === 1'b1) ? kernel_data_V_3_85 : kernel_data_V_3_79);

assign select_ln65_39_fu_2309_p3 = ((icmp_ln1496_26_fu_2304_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_3_fu_1639_p3 = ((icmp_ln1496_2_fu_1633_p2[0:0] === 1'b1) ? select_ln65_1_fu_1617_p3 : zext_ln65_fu_1599_p1);

assign select_ln65_40_fu_2317_p3 = ((icmp_ln1496_26_fu_2304_p2[0:0] === 1'b1) ? pool_window_15_V_1_reg_4506 : kernel_data_V_3_91);

assign select_ln65_41_fu_2330_p3 = ((icmp_ln1496_27_fu_2324_p2[0:0] === 1'b1) ? select_ln65_39_fu_2309_p3 : select_ln65_37_fu_2288_p3);

assign select_ln65_42_fu_2373_p3 = ((icmp_ln1496_28_fu_2367_p2[0:0] === 1'b1) ? sext_ln65_1_fu_2338_p1 : select_ln65_36_fu_2249_p3);

assign select_ln65_44_fu_2391_p3 = ((icmp_ln1496_30_fu_2381_p2[0:0] === 1'b1) ? kernel_data_V_3_14 : kernel_data_V_3_8);

assign select_ln65_45_fu_2405_p3 = ((icmp_ln1496_31_fu_2399_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_46_fu_2413_p3 = ((icmp_ln1496_31_fu_2399_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_2_2_q0 : kernel_data_V_3_20);

assign select_ln65_47_fu_2427_p3 = ((icmp_ln1496_32_fu_2421_p2[0:0] === 1'b1) ? select_ln65_45_fu_2405_p3 : zext_ln65_6_fu_2387_p1);

assign select_ln65_48_fu_2487_p3 = ((icmp_ln1496_33_fu_2481_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_49_fu_2495_p3 = ((icmp_ln1496_33_fu_2481_p2[0:0] === 1'b1) ? kernel_data_V_3_38 : kernel_data_V_3_32);

assign select_ln65_4_fu_1699_p3 = ((icmp_ln1496_3_fu_1693_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_50_fu_2509_p3 = ((icmp_ln1496_34_fu_2503_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_51_fu_2517_p3 = ((icmp_ln1496_34_fu_2503_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_1_2_q0 : kernel_data_V_3_44);

assign select_ln65_52_fu_2531_p3 = ((icmp_ln1496_35_fu_2525_p2[0:0] === 1'b1) ? select_ln65_50_fu_2509_p3 : select_ln65_48_fu_2487_p3);

assign select_ln65_53_fu_2587_p3 = ((icmp_ln1496_36_fu_2581_p2[0:0] === 1'b1) ? select_ln65_52_fu_2531_p3 : zext_ln65_7_fu_2435_p1);

assign select_ln65_54_fu_2601_p3 = ((icmp_ln1496_37_fu_2595_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_55_fu_2609_p3 = ((icmp_ln1496_37_fu_2595_p2[0:0] === 1'b1) ? kernel_data_V_3_62 : kernel_data_V_3_56);

assign select_ln65_56_fu_2622_p3 = ((icmp_ln1496_38_fu_2617_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_57_fu_2630_p3 = ((icmp_ln1496_38_fu_2617_p2[0:0] === 1'b1) ? pool_window_11_V_2_reg_4702 : kernel_data_V_3_68);

assign select_ln65_58_fu_2643_p3 = ((icmp_ln1496_39_fu_2637_p2[0:0] === 1'b1) ? select_ln65_56_fu_2622_p3 : select_ln65_54_fu_2601_p3);

assign select_ln65_59_fu_2682_p3 = ((icmp_ln1496_40_fu_2676_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_5_fu_1707_p3 = ((icmp_ln1496_3_fu_1693_p2[0:0] === 1'b1) ? kernel_data_V_3_36 : kernel_data_V_3_30);

assign select_ln65_60_fu_2690_p3 = ((icmp_ln1496_40_fu_2676_p2[0:0] === 1'b1) ? kernel_data_V_3_86 : kernel_data_V_3_80);

assign select_ln65_61_fu_2703_p3 = ((icmp_ln1496_41_fu_2698_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_62_fu_2711_p3 = ((icmp_ln1496_41_fu_2698_p2[0:0] === 1'b1) ? pool_window_15_V_2_reg_4536 : kernel_data_V_3_92);

assign select_ln65_63_fu_2724_p3 = ((icmp_ln1496_42_fu_2718_p2[0:0] === 1'b1) ? select_ln65_61_fu_2703_p3 : select_ln65_59_fu_2682_p3);

assign select_ln65_64_fu_2767_p3 = ((icmp_ln1496_43_fu_2761_p2[0:0] === 1'b1) ? sext_ln65_2_fu_2732_p1 : select_ln65_58_fu_2643_p3);

assign select_ln65_66_fu_2785_p3 = ((icmp_ln1496_45_fu_2775_p2[0:0] === 1'b1) ? kernel_data_V_3_15 : kernel_data_V_3_9);

assign select_ln65_67_fu_2799_p3 = ((icmp_ln1496_46_fu_2793_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_68_fu_2807_p3 = ((icmp_ln1496_46_fu_2793_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_2_3_q0 : kernel_data_V_3_21);

assign select_ln65_69_fu_2821_p3 = ((icmp_ln1496_47_fu_2815_p2[0:0] === 1'b1) ? select_ln65_67_fu_2799_p3 : zext_ln65_9_fu_2781_p1);

assign select_ln65_6_fu_1721_p3 = ((icmp_ln1496_4_fu_1715_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_70_fu_2881_p3 = ((icmp_ln1496_48_fu_2875_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_71_fu_2889_p3 = ((icmp_ln1496_48_fu_2875_p2[0:0] === 1'b1) ? kernel_data_V_3_39 : kernel_data_V_3_33);

assign select_ln65_72_fu_2903_p3 = ((icmp_ln1496_49_fu_2897_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_73_fu_2911_p3 = ((icmp_ln1496_49_fu_2897_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_1_3_q0 : kernel_data_V_3_45);

assign select_ln65_74_fu_2925_p3 = ((icmp_ln1496_50_fu_2919_p2[0:0] === 1'b1) ? select_ln65_72_fu_2903_p3 : select_ln65_70_fu_2881_p3);

assign select_ln65_75_fu_2981_p3 = ((icmp_ln1496_51_fu_2975_p2[0:0] === 1'b1) ? select_ln65_74_fu_2925_p3 : zext_ln65_10_fu_2829_p1);

assign select_ln65_76_fu_2995_p3 = ((icmp_ln1496_52_fu_2989_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_77_fu_3003_p3 = ((icmp_ln1496_52_fu_2989_p2[0:0] === 1'b1) ? kernel_data_V_3_63 : kernel_data_V_3_57);

assign select_ln65_78_fu_3016_p3 = ((icmp_ln1496_53_fu_3011_p2[0:0] === 1'b1) ? 4'd11 : 4'd10);

assign select_ln65_79_fu_3024_p3 = ((icmp_ln1496_53_fu_3011_p2[0:0] === 1'b1) ? pool_window_11_V_3_reg_4725 : kernel_data_V_3_69);

assign select_ln65_7_fu_1729_p3 = ((icmp_ln1496_4_fu_1715_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_1_0_q0 : kernel_data_V_3_42);

assign select_ln65_80_fu_3037_p3 = ((icmp_ln1496_54_fu_3031_p2[0:0] === 1'b1) ? select_ln65_78_fu_3016_p3 : select_ln65_76_fu_2995_p3);

assign select_ln65_81_fu_3076_p3 = ((icmp_ln1496_55_fu_3070_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_82_fu_3084_p3 = ((icmp_ln1496_55_fu_3070_p2[0:0] === 1'b1) ? kernel_data_V_3_87 : kernel_data_V_3_81);

assign select_ln65_83_fu_3097_p3 = ((icmp_ln1496_56_fu_3092_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_84_fu_3105_p3 = ((icmp_ln1496_56_fu_3092_p2[0:0] === 1'b1) ? pool_window_15_V_3_reg_4566 : kernel_data_V_3_93);

assign select_ln65_85_fu_3118_p3 = ((icmp_ln1496_57_fu_3112_p2[0:0] === 1'b1) ? select_ln65_83_fu_3097_p3 : select_ln65_81_fu_3076_p3);

assign select_ln65_86_fu_3161_p3 = ((icmp_ln1496_58_fu_3155_p2[0:0] === 1'b1) ? sext_ln65_3_fu_3126_p1 : select_ln65_80_fu_3037_p3);

assign select_ln65_88_fu_3179_p3 = ((icmp_ln1496_60_fu_3169_p2[0:0] === 1'b1) ? kernel_data_V_3_16 : kernel_data_V_3_10);

assign select_ln65_89_fu_3193_p3 = ((icmp_ln1496_61_fu_3187_p2[0:0] === 1'b1) ? 2'd3 : 2'd2);

assign select_ln65_8_fu_1743_p3 = ((icmp_ln1496_5_fu_1737_p2[0:0] === 1'b1) ? select_ln65_6_fu_1721_p3 : select_ln65_4_fu_1699_p3);

assign select_ln65_90_fu_3201_p3 = ((icmp_ln1496_61_fu_3187_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_2_4_q0 : kernel_data_V_3_22);

assign select_ln65_91_fu_3215_p3 = ((icmp_ln1496_62_fu_3209_p2[0:0] === 1'b1) ? select_ln65_89_fu_3193_p3 : zext_ln65_12_fu_3175_p1);

assign select_ln65_92_fu_3275_p3 = ((icmp_ln1496_63_fu_3269_p2[0:0] === 1'b1) ? 3'd5 : 3'd4);

assign select_ln65_93_fu_3283_p3 = ((icmp_ln1496_63_fu_3269_p2[0:0] === 1'b1) ? kernel_data_V_3_40 : kernel_data_V_3_34);

assign select_ln65_94_fu_3297_p3 = ((icmp_ln1496_64_fu_3291_p2[0:0] === 1'b1) ? 3'd7 : 3'd6);

assign select_ln65_95_fu_3305_p3 = ((icmp_ln1496_64_fu_3291_p2[0:0] === 1'b1) ? line_buffer_Array_V_3_1_4_q0 : kernel_data_V_3_46);

assign select_ln65_96_fu_3319_p3 = ((icmp_ln1496_65_fu_3313_p2[0:0] === 1'b1) ? select_ln65_94_fu_3297_p3 : select_ln65_92_fu_3275_p3);

assign select_ln65_97_fu_3375_p3 = ((icmp_ln1496_66_fu_3369_p2[0:0] === 1'b1) ? select_ln65_96_fu_3319_p3 : zext_ln65_13_fu_3223_p1);

assign select_ln65_98_fu_3389_p3 = ((icmp_ln1496_67_fu_3383_p2[0:0] === 1'b1) ? 4'd9 : 4'd8);

assign select_ln65_99_fu_3397_p3 = ((icmp_ln1496_67_fu_3383_p2[0:0] === 1'b1) ? kernel_data_V_3_64 : kernel_data_V_3_58);

assign select_ln65_9_fu_1799_p3 = ((icmp_ln1496_6_fu_1793_p2[0:0] === 1'b1) ? select_ln65_8_fu_1743_p3 : zext_ln65_1_fu_1647_p1);

assign select_ln65_fu_1603_p3 = ((icmp_ln1496_fu_1593_p2[0:0] === 1'b1) ? kernel_data_V_3_12 : kernel_data_V_3_6);

assign sext_ln65_1_fu_2338_p1 = $signed(select_ln65_41_fu_2330_p3);

assign sext_ln65_2_fu_2732_p1 = $signed(select_ln65_63_fu_2724_p3);

assign sext_ln65_3_fu_3126_p1 = $signed(select_ln65_85_fu_3118_p3);

assign sext_ln65_4_fu_3520_p1 = $signed(select_ln65_107_fu_3512_p3);

assign sext_ln65_5_fu_3914_p1 = $signed(select_ln65_129_fu_3906_p3);

assign sext_ln65_fu_1944_p1 = $signed(select_ln65_19_fu_1936_p3);

assign start_out = real_start;

assign tmp_data_0_V_fu_4016_p17 = ((icmp_ln1496_14_fu_4003_p2[0:0] === 1'b1) ? select_ln65_20_reg_5355 : zext_ln65_2_fu_3957_p1);

assign tmp_data_1_V_fu_4098_p17 = ((icmp_ln1496_29_fu_4085_p2[0:0] === 1'b1) ? select_ln65_42_reg_5366 : zext_ln65_5_fu_4039_p1);

assign tmp_data_2_V_fu_4180_p17 = ((icmp_ln1496_44_fu_4167_p2[0:0] === 1'b1) ? select_ln65_64_reg_5377 : zext_ln65_8_fu_4121_p1);

assign tmp_data_3_V_fu_4262_p17 = ((icmp_ln1496_59_fu_4249_p2[0:0] === 1'b1) ? select_ln65_86_reg_5388 : zext_ln65_11_fu_4203_p1);

assign tmp_data_4_V_fu_4344_p17 = ((icmp_ln1496_74_fu_4331_p2[0:0] === 1'b1) ? select_ln65_108_reg_5399 : zext_ln65_14_fu_4285_p1);

assign tmp_data_5_V_fu_4426_p17 = ((icmp_ln1496_89_fu_4413_p2[0:0] === 1'b1) ? select_ln65_130_reg_5410 : zext_ln65_17_fu_4367_p1);

assign zext_ln65_10_fu_2829_p1 = select_ln65_69_fu_2821_p3;

assign zext_ln65_11_fu_4203_p1 = select_ln65_75_reg_5383;

assign zext_ln65_12_fu_3175_p1 = icmp_ln1496_60_fu_3169_p2;

assign zext_ln65_13_fu_3223_p1 = select_ln65_91_fu_3215_p3;

assign zext_ln65_14_fu_4285_p1 = select_ln65_97_reg_5394;

assign zext_ln65_15_fu_3569_p1 = icmp_ln1496_75_fu_3563_p2;

assign zext_ln65_16_fu_3617_p1 = select_ln65_113_fu_3609_p3;

assign zext_ln65_17_fu_4367_p1 = select_ln65_119_reg_5405;

assign zext_ln65_1_fu_1647_p1 = select_ln65_3_fu_1639_p3;

assign zext_ln65_2_fu_3957_p1 = select_ln65_9_reg_5350;

assign zext_ln65_3_fu_1993_p1 = icmp_ln1496_15_fu_1987_p2;

assign zext_ln65_4_fu_2041_p1 = select_ln65_25_fu_2033_p3;

assign zext_ln65_5_fu_4039_p1 = select_ln65_31_reg_5361;

assign zext_ln65_6_fu_2387_p1 = icmp_ln1496_30_fu_2381_p2;

assign zext_ln65_7_fu_2435_p1 = select_ln65_47_fu_2427_p3;

assign zext_ln65_8_fu_4121_p1 = select_ln65_53_reg_5372;

assign zext_ln65_9_fu_2781_p1 = icmp_ln1496_45_fu_2775_p2;

assign zext_ln65_fu_1599_p1 = icmp_ln1496_fu_1593_p2;

always @ (posedge ap_clk) begin
    select_ln65_20_reg_5355[3] <= 1'b1;
    select_ln65_42_reg_5366[3] <= 1'b1;
    select_ln65_64_reg_5377[3] <= 1'b1;
    select_ln65_86_reg_5388[3] <= 1'b1;
    select_ln65_108_reg_5399[3] <= 1'b1;
    select_ln65_130_reg_5410[3] <= 1'b1;
end

endmodule //pooling2d_cl_array_ap_fixed_6u_array_ap_fixed_16_2_5_3_0_6u_config6_s
