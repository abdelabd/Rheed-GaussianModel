// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        data_V_data_2_V_dout,
        data_V_data_2_V_empty_n,
        data_V_data_2_V_read,
        data_V_data_3_V_dout,
        data_V_data_3_V_empty_n,
        data_V_data_3_V_read,
        data_V_data_4_V_dout,
        data_V_data_4_V_empty_n,
        data_V_data_4_V_read,
        res_V_data_0_V_TDATA,
        res_V_data_0_V_TVALID,
        res_V_data_0_V_TREADY,
        res_V_data_1_V_TDATA,
        res_V_data_1_V_TVALID,
        res_V_data_1_V_TREADY,
        res_V_data_2_V_TDATA,
        res_V_data_2_V_TVALID,
        res_V_data_2_V_TREADY,
        res_V_data_3_V_TDATA,
        res_V_data_3_V_TVALID,
        res_V_data_3_V_TREADY,
        res_V_data_4_V_TDATA,
        res_V_data_4_V_TVALID,
        res_V_data_4_V_TREADY
);

parameter    ap_ST_fsm_state1 = 13'd1;
parameter    ap_ST_fsm_state2 = 13'd2;
parameter    ap_ST_fsm_state3 = 13'd4;
parameter    ap_ST_fsm_state4 = 13'd8;
parameter    ap_ST_fsm_state5 = 13'd16;
parameter    ap_ST_fsm_state6 = 13'd32;
parameter    ap_ST_fsm_state7 = 13'd64;
parameter    ap_ST_fsm_state8 = 13'd128;
parameter    ap_ST_fsm_state9 = 13'd256;
parameter    ap_ST_fsm_state10 = 13'd512;
parameter    ap_ST_fsm_state11 = 13'd1024;
parameter    ap_ST_fsm_state12 = 13'd2048;
parameter    ap_ST_fsm_state13 = 13'd4096;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input  [15:0] data_V_data_2_V_dout;
input   data_V_data_2_V_empty_n;
output   data_V_data_2_V_read;
input  [15:0] data_V_data_3_V_dout;
input   data_V_data_3_V_empty_n;
output   data_V_data_3_V_read;
input  [15:0] data_V_data_4_V_dout;
input   data_V_data_4_V_empty_n;
output   data_V_data_4_V_read;
output  [15:0] res_V_data_0_V_TDATA;
output   res_V_data_0_V_TVALID;
input   res_V_data_0_V_TREADY;
output  [15:0] res_V_data_1_V_TDATA;
output   res_V_data_1_V_TVALID;
input   res_V_data_1_V_TREADY;
output  [15:0] res_V_data_2_V_TDATA;
output   res_V_data_2_V_TVALID;
input   res_V_data_2_V_TREADY;
output  [15:0] res_V_data_3_V_TDATA;
output   res_V_data_3_V_TVALID;
input   res_V_data_3_V_TREADY;
output  [15:0] res_V_data_4_V_TDATA;
output   res_V_data_4_V_TVALID;
input   res_V_data_4_V_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg data_V_data_2_V_read;
reg data_V_data_3_V_read;
reg data_V_data_4_V_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [12:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] res_V_data_0_V_1_data_out;
wire    res_V_data_0_V_1_vld_in;
wire    res_V_data_0_V_1_vld_out;
wire    res_V_data_0_V_1_ack_in;
wire    res_V_data_0_V_1_ack_out;
reg   [15:0] res_V_data_0_V_1_payload_A;
reg   [15:0] res_V_data_0_V_1_payload_B;
reg    res_V_data_0_V_1_sel_rd;
reg    res_V_data_0_V_1_sel_wr;
wire    res_V_data_0_V_1_sel;
wire    res_V_data_0_V_1_load_A;
wire    res_V_data_0_V_1_load_B;
reg   [1:0] res_V_data_0_V_1_state;
wire    res_V_data_0_V_1_state_cmp_full;
reg   [15:0] res_V_data_1_V_1_data_out;
wire    res_V_data_1_V_1_vld_in;
wire    res_V_data_1_V_1_vld_out;
wire    res_V_data_1_V_1_ack_in;
wire    res_V_data_1_V_1_ack_out;
reg   [15:0] res_V_data_1_V_1_payload_A;
reg   [15:0] res_V_data_1_V_1_payload_B;
reg    res_V_data_1_V_1_sel_rd;
reg    res_V_data_1_V_1_sel_wr;
wire    res_V_data_1_V_1_sel;
wire    res_V_data_1_V_1_load_A;
wire    res_V_data_1_V_1_load_B;
reg   [1:0] res_V_data_1_V_1_state;
wire    res_V_data_1_V_1_state_cmp_full;
reg   [15:0] res_V_data_2_V_1_data_out;
wire    res_V_data_2_V_1_vld_in;
wire    res_V_data_2_V_1_vld_out;
wire    res_V_data_2_V_1_ack_in;
wire    res_V_data_2_V_1_ack_out;
reg   [15:0] res_V_data_2_V_1_payload_A;
reg   [15:0] res_V_data_2_V_1_payload_B;
reg    res_V_data_2_V_1_sel_rd;
reg    res_V_data_2_V_1_sel_wr;
wire    res_V_data_2_V_1_sel;
wire    res_V_data_2_V_1_load_A;
wire    res_V_data_2_V_1_load_B;
reg   [1:0] res_V_data_2_V_1_state;
wire    res_V_data_2_V_1_state_cmp_full;
reg   [15:0] res_V_data_3_V_1_data_out;
wire    res_V_data_3_V_1_vld_in;
wire    res_V_data_3_V_1_vld_out;
wire    res_V_data_3_V_1_ack_in;
wire    res_V_data_3_V_1_ack_out;
reg   [15:0] res_V_data_3_V_1_payload_A;
reg   [15:0] res_V_data_3_V_1_payload_B;
reg    res_V_data_3_V_1_sel_rd;
reg    res_V_data_3_V_1_sel_wr;
wire    res_V_data_3_V_1_sel;
wire    res_V_data_3_V_1_load_A;
wire    res_V_data_3_V_1_load_B;
reg   [1:0] res_V_data_3_V_1_state;
wire    res_V_data_3_V_1_state_cmp_full;
reg   [15:0] res_V_data_4_V_1_data_out;
wire    res_V_data_4_V_1_vld_in;
wire    res_V_data_4_V_1_vld_out;
wire    res_V_data_4_V_1_ack_in;
wire    res_V_data_4_V_1_ack_out;
reg   [15:0] res_V_data_4_V_1_payload_A;
reg   [15:0] res_V_data_4_V_1_payload_B;
reg    res_V_data_4_V_1_sel_rd;
reg    res_V_data_4_V_1_sel_wr;
wire    res_V_data_4_V_1_sel;
wire    res_V_data_4_V_1_load_A;
wire    res_V_data_4_V_1_load_B;
reg   [1:0] res_V_data_4_V_1_state;
wire    res_V_data_4_V_1_state_cmp_full;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n;
reg    data_V_data_0_V_blk_n;
wire    ap_CS_fsm_state12;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n;
reg    data_V_data_1_V_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n;
reg    data_V_data_2_V_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n;
reg    data_V_data_3_V_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n;
reg    data_V_data_4_V_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n;
reg    res_V_data_0_V_TDATA_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n;
reg    res_V_data_1_V_TDATA_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n;
reg    res_V_data_2_V_TDATA_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n;
reg    res_V_data_3_V_TDATA_blk_n;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n;
reg    res_V_data_4_V_TDATA_blk_n;
reg    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_start;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_done;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_idle;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_ready;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_read;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_read;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_read;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_read;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_read;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TREADY;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TREADY;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TREADY;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TREADY;
wire   [15:0] grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TVALID;
wire    grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TREADY;
reg    ap_block_state1_ignore_call10;
wire    ap_CS_fsm_state13;
reg    ap_block_state13;
reg   [12:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_block_state12;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 13'd1;
#0 res_V_data_0_V_1_sel_rd = 1'b0;
#0 res_V_data_0_V_1_sel_wr = 1'b0;
#0 res_V_data_0_V_1_state = 2'd0;
#0 res_V_data_1_V_1_sel_rd = 1'b0;
#0 res_V_data_1_V_1_sel_wr = 1'b0;
#0 res_V_data_1_V_1_state = 2'd0;
#0 res_V_data_2_V_1_sel_rd = 1'b0;
#0 res_V_data_2_V_1_sel_wr = 1'b0;
#0 res_V_data_2_V_1_state = 2'd0;
#0 res_V_data_3_V_1_sel_rd = 1'b0;
#0 res_V_data_3_V_1_sel_wr = 1'b0;
#0 res_V_data_3_V_1_state = 2'd0;
#0 res_V_data_4_V_1_sel_rd = 1'b0;
#0 res_V_data_4_V_1_sel_wr = 1'b0;
#0 res_V_data_4_V_1_state = 2'd0;
end

softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_start),
    .ap_done(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_done),
    .ap_idle(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_idle),
    .ap_ready(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_ready),
    .data_V_data_0_V_dout(data_V_data_0_V_dout),
    .data_V_data_0_V_empty_n(data_V_data_0_V_empty_n),
    .data_V_data_0_V_read(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_read),
    .data_V_data_1_V_dout(data_V_data_1_V_dout),
    .data_V_data_1_V_empty_n(data_V_data_1_V_empty_n),
    .data_V_data_1_V_read(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_read),
    .data_V_data_2_V_dout(data_V_data_2_V_dout),
    .data_V_data_2_V_empty_n(data_V_data_2_V_empty_n),
    .data_V_data_2_V_read(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_read),
    .data_V_data_3_V_dout(data_V_data_3_V_dout),
    .data_V_data_3_V_empty_n(data_V_data_3_V_empty_n),
    .data_V_data_3_V_read(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_read),
    .data_V_data_4_V_dout(data_V_data_4_V_dout),
    .data_V_data_4_V_empty_n(data_V_data_4_V_empty_n),
    .data_V_data_4_V_read(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_read),
    .res_V_data_0_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA),
    .res_V_data_0_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TVALID),
    .res_V_data_0_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TREADY),
    .res_V_data_1_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA),
    .res_V_data_1_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TVALID),
    .res_V_data_1_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TREADY),
    .res_V_data_2_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA),
    .res_V_data_2_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TVALID),
    .res_V_data_2_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TREADY),
    .res_V_data_3_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA),
    .res_V_data_3_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TVALID),
    .res_V_data_3_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TREADY),
    .res_V_data_4_V_TDATA(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA),
    .res_V_data_4_V_TVALID(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TVALID),
    .res_V_data_4_V_TREADY(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TREADY),
    .data_V_data_0_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n),
    .data_V_data_1_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n),
    .data_V_data_2_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n),
    .data_V_data_3_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n),
    .data_V_data_4_V_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n),
    .res_V_data_0_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n),
    .res_V_data_1_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n),
    .res_V_data_2_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n),
    .res_V_data_3_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n),
    .res_V_data_4_V_TDATA_blk_n(grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((res_V_data_4_V_1_state == 2'd1) | (res_V_data_3_V_1_state == 2'd1) | (res_V_data_2_V_1_state == 2'd1) | (res_V_data_1_V_1_state == 2'd1) | (res_V_data_0_V_1_state == 2'd1) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_TREADY == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_TREADY == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_TREADY == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_TREADY == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_0_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_V_data_0_V_1_ack_out == 1'b1) & (res_V_data_0_V_1_vld_out == 1'b1))) begin
            res_V_data_0_V_1_sel_rd <= ~res_V_data_0_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_0_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_V_data_0_V_1_ack_in == 1'b1) & (res_V_data_0_V_1_vld_in == 1'b1))) begin
            res_V_data_0_V_1_sel_wr <= ~res_V_data_0_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_0_V_1_state <= 2'd0;
    end else begin
        if ((((res_V_data_0_V_1_state == 2'd2) & (res_V_data_0_V_1_vld_in == 1'b0)) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_1_vld_in == 1'b0) & (res_V_data_0_V_1_ack_out == 1'b1)))) begin
            res_V_data_0_V_1_state <= 2'd2;
        end else if ((((res_V_data_0_V_1_state == 2'd1) & (res_V_data_0_V_TREADY == 1'b0)) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_TREADY == 1'b0) & (res_V_data_0_V_1_vld_in == 1'b1)))) begin
            res_V_data_0_V_1_state <= 2'd1;
        end else if (((~((res_V_data_0_V_1_vld_in == 1'b0) & (res_V_data_0_V_1_ack_out == 1'b1)) & ~((res_V_data_0_V_TREADY == 1'b0) & (res_V_data_0_V_1_vld_in == 1'b1)) & (res_V_data_0_V_1_state == 2'd3)) | ((res_V_data_0_V_1_state == 2'd1) & (res_V_data_0_V_1_ack_out == 1'b1)) | ((res_V_data_0_V_1_state == 2'd2) & (res_V_data_0_V_1_vld_in == 1'b1)))) begin
            res_V_data_0_V_1_state <= 2'd3;
        end else begin
            res_V_data_0_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_1_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_V_data_1_V_1_ack_out == 1'b1) & (res_V_data_1_V_1_vld_out == 1'b1))) begin
            res_V_data_1_V_1_sel_rd <= ~res_V_data_1_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_1_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_V_data_1_V_1_ack_in == 1'b1) & (res_V_data_1_V_1_vld_in == 1'b1))) begin
            res_V_data_1_V_1_sel_wr <= ~res_V_data_1_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_1_V_1_state <= 2'd0;
    end else begin
        if ((((res_V_data_1_V_1_state == 2'd2) & (res_V_data_1_V_1_vld_in == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_1_vld_in == 1'b0) & (res_V_data_1_V_1_ack_out == 1'b1)))) begin
            res_V_data_1_V_1_state <= 2'd2;
        end else if ((((res_V_data_1_V_1_state == 2'd1) & (res_V_data_1_V_TREADY == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_TREADY == 1'b0) & (res_V_data_1_V_1_vld_in == 1'b1)))) begin
            res_V_data_1_V_1_state <= 2'd1;
        end else if (((~((res_V_data_1_V_1_vld_in == 1'b0) & (res_V_data_1_V_1_ack_out == 1'b1)) & ~((res_V_data_1_V_TREADY == 1'b0) & (res_V_data_1_V_1_vld_in == 1'b1)) & (res_V_data_1_V_1_state == 2'd3)) | ((res_V_data_1_V_1_state == 2'd1) & (res_V_data_1_V_1_ack_out == 1'b1)) | ((res_V_data_1_V_1_state == 2'd2) & (res_V_data_1_V_1_vld_in == 1'b1)))) begin
            res_V_data_1_V_1_state <= 2'd3;
        end else begin
            res_V_data_1_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_2_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_V_data_2_V_1_ack_out == 1'b1) & (res_V_data_2_V_1_vld_out == 1'b1))) begin
            res_V_data_2_V_1_sel_rd <= ~res_V_data_2_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_2_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_V_data_2_V_1_ack_in == 1'b1) & (res_V_data_2_V_1_vld_in == 1'b1))) begin
            res_V_data_2_V_1_sel_wr <= ~res_V_data_2_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_2_V_1_state <= 2'd0;
    end else begin
        if ((((res_V_data_2_V_1_state == 2'd2) & (res_V_data_2_V_1_vld_in == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_1_vld_in == 1'b0) & (res_V_data_2_V_1_ack_out == 1'b1)))) begin
            res_V_data_2_V_1_state <= 2'd2;
        end else if ((((res_V_data_2_V_1_state == 2'd1) & (res_V_data_2_V_TREADY == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_TREADY == 1'b0) & (res_V_data_2_V_1_vld_in == 1'b1)))) begin
            res_V_data_2_V_1_state <= 2'd1;
        end else if (((~((res_V_data_2_V_1_vld_in == 1'b0) & (res_V_data_2_V_1_ack_out == 1'b1)) & ~((res_V_data_2_V_TREADY == 1'b0) & (res_V_data_2_V_1_vld_in == 1'b1)) & (res_V_data_2_V_1_state == 2'd3)) | ((res_V_data_2_V_1_state == 2'd1) & (res_V_data_2_V_1_ack_out == 1'b1)) | ((res_V_data_2_V_1_state == 2'd2) & (res_V_data_2_V_1_vld_in == 1'b1)))) begin
            res_V_data_2_V_1_state <= 2'd3;
        end else begin
            res_V_data_2_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_3_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_V_data_3_V_1_ack_out == 1'b1) & (res_V_data_3_V_1_vld_out == 1'b1))) begin
            res_V_data_3_V_1_sel_rd <= ~res_V_data_3_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_3_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_V_data_3_V_1_ack_in == 1'b1) & (res_V_data_3_V_1_vld_in == 1'b1))) begin
            res_V_data_3_V_1_sel_wr <= ~res_V_data_3_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_3_V_1_state <= 2'd0;
    end else begin
        if ((((res_V_data_3_V_1_state == 2'd2) & (res_V_data_3_V_1_vld_in == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_1_vld_in == 1'b0) & (res_V_data_3_V_1_ack_out == 1'b1)))) begin
            res_V_data_3_V_1_state <= 2'd2;
        end else if ((((res_V_data_3_V_1_state == 2'd1) & (res_V_data_3_V_TREADY == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_TREADY == 1'b0) & (res_V_data_3_V_1_vld_in == 1'b1)))) begin
            res_V_data_3_V_1_state <= 2'd1;
        end else if (((~((res_V_data_3_V_1_vld_in == 1'b0) & (res_V_data_3_V_1_ack_out == 1'b1)) & ~((res_V_data_3_V_TREADY == 1'b0) & (res_V_data_3_V_1_vld_in == 1'b1)) & (res_V_data_3_V_1_state == 2'd3)) | ((res_V_data_3_V_1_state == 2'd1) & (res_V_data_3_V_1_ack_out == 1'b1)) | ((res_V_data_3_V_1_state == 2'd2) & (res_V_data_3_V_1_vld_in == 1'b1)))) begin
            res_V_data_3_V_1_state <= 2'd3;
        end else begin
            res_V_data_3_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_4_V_1_sel_rd <= 1'b0;
    end else begin
        if (((res_V_data_4_V_1_ack_out == 1'b1) & (res_V_data_4_V_1_vld_out == 1'b1))) begin
            res_V_data_4_V_1_sel_rd <= ~res_V_data_4_V_1_sel_rd;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_4_V_1_sel_wr <= 1'b0;
    end else begin
        if (((res_V_data_4_V_1_ack_in == 1'b1) & (res_V_data_4_V_1_vld_in == 1'b1))) begin
            res_V_data_4_V_1_sel_wr <= ~res_V_data_4_V_1_sel_wr;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        res_V_data_4_V_1_state <= 2'd0;
    end else begin
        if ((((res_V_data_4_V_1_state == 2'd2) & (res_V_data_4_V_1_vld_in == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_1_vld_in == 1'b0) & (res_V_data_4_V_1_ack_out == 1'b1)))) begin
            res_V_data_4_V_1_state <= 2'd2;
        end else if ((((res_V_data_4_V_1_state == 2'd1) & (res_V_data_4_V_TREADY == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_TREADY == 1'b0) & (res_V_data_4_V_1_vld_in == 1'b1)))) begin
            res_V_data_4_V_1_state <= 2'd1;
        end else if (((~((res_V_data_4_V_1_vld_in == 1'b0) & (res_V_data_4_V_1_ack_out == 1'b1)) & ~((res_V_data_4_V_TREADY == 1'b0) & (res_V_data_4_V_1_vld_in == 1'b1)) & (res_V_data_4_V_1_state == 2'd3)) | ((res_V_data_4_V_1_state == 2'd1) & (res_V_data_4_V_1_ack_out == 1'b1)) | ((res_V_data_4_V_1_state == 2'd2) & (res_V_data_4_V_1_vld_in == 1'b1)))) begin
            res_V_data_4_V_1_state <= 2'd3;
        end else begin
            res_V_data_4_V_1_state <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_0_V_1_load_A == 1'b1)) begin
        res_V_data_0_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_0_V_1_load_B == 1'b1)) begin
        res_V_data_0_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_1_V_1_load_A == 1'b1)) begin
        res_V_data_1_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_1_V_1_load_B == 1'b1)) begin
        res_V_data_1_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_2_V_1_load_A == 1'b1)) begin
        res_V_data_2_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_2_V_1_load_B == 1'b1)) begin
        res_V_data_2_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_3_V_1_load_A == 1'b1)) begin
        res_V_data_3_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_3_V_1_load_B == 1'b1)) begin
        res_V_data_3_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_4_V_1_load_A == 1'b1)) begin
        res_V_data_4_V_1_payload_A <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((res_V_data_4_V_1_load_B == 1'b1)) begin
        res_V_data_4_V_1_payload_B <= grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA;
    end
end

always @ (*) begin
    if ((~((res_V_data_4_V_1_state == 2'd1) | (res_V_data_3_V_1_state == 2'd1) | (res_V_data_2_V_1_state == 2'd1) | (res_V_data_1_V_1_state == 2'd1) | (res_V_data_0_V_1_state == 2'd1) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_TREADY == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_TREADY == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_TREADY == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_TREADY == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((res_V_data_4_V_1_state == 2'd1) | (res_V_data_3_V_1_state == 2'd1) | (res_V_data_2_V_1_state == 2'd1) | (res_V_data_1_V_1_state == 2'd1) | (res_V_data_0_V_1_state == 2'd1) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_TREADY == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_TREADY == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_TREADY == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_TREADY == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_0_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_0_V_read = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_read;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_1_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_1_V_read = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_read;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_2_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n;
    end else begin
        data_V_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_2_V_read = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_read;
    end else begin
        data_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_3_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n;
    end else begin
        data_V_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_3_V_read = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_read;
    end else begin
        data_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        data_V_data_4_V_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n;
    end else begin
        data_V_data_4_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_V_data_4_V_read = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_read;
    end else begin
        data_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_start = 1'b1;
    end else begin
        grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((res_V_data_0_V_1_sel == 1'b1)) begin
        res_V_data_0_V_1_data_out = res_V_data_0_V_1_payload_B;
    end else begin
        res_V_data_0_V_1_data_out = res_V_data_0_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_0_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n;
    end else begin
        res_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_V_data_1_V_1_sel == 1'b1)) begin
        res_V_data_1_V_1_data_out = res_V_data_1_V_1_payload_B;
    end else begin
        res_V_data_1_V_1_data_out = res_V_data_1_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_1_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n;
    end else begin
        res_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_V_data_2_V_1_sel == 1'b1)) begin
        res_V_data_2_V_1_data_out = res_V_data_2_V_1_payload_B;
    end else begin
        res_V_data_2_V_1_data_out = res_V_data_2_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_2_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n;
    end else begin
        res_V_data_2_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_V_data_3_V_1_sel == 1'b1)) begin
        res_V_data_3_V_1_data_out = res_V_data_3_V_1_payload_B;
    end else begin
        res_V_data_3_V_1_data_out = res_V_data_3_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_3_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n;
    end else begin
        res_V_data_3_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((res_V_data_4_V_1_sel == 1'b1)) begin
        res_V_data_4_V_1_data_out = res_V_data_4_V_1_payload_B;
    end else begin
        res_V_data_4_V_1_data_out = res_V_data_4_V_1_payload_A;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        res_V_data_4_V_TDATA_blk_n = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n;
    end else begin
        res_V_data_4_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if ((~((grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n == 1'b0)) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if ((~((res_V_data_4_V_1_state == 2'd1) | (res_V_data_3_V_1_state == 2'd1) | (res_V_data_2_V_1_state == 2'd1) | (res_V_data_1_V_1_state == 2'd1) | (res_V_data_0_V_1_state == 2'd1) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_TREADY == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_TREADY == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_TREADY == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_TREADY == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_TREADY == 1'b0))) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

always @ (*) begin
    ap_block_state1 = ((grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state12 = ((grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TDATA_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_4_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_3_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_2_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_1_V_blk_n == 1'b0) | (grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_data_V_data_0_V_blk_n == 1'b0));
end

always @ (*) begin
    ap_block_state13 = ((res_V_data_4_V_1_state == 2'd1) | (res_V_data_3_V_1_state == 2'd1) | (res_V_data_2_V_1_state == 2'd1) | (res_V_data_1_V_1_state == 2'd1) | (res_V_data_0_V_1_state == 2'd1) | ((res_V_data_0_V_1_state == 2'd3) & (res_V_data_0_V_TREADY == 1'b0)) | ((res_V_data_4_V_1_state == 2'd3) & (res_V_data_4_V_TREADY == 1'b0)) | ((res_V_data_3_V_1_state == 2'd3) & (res_V_data_3_V_TREADY == 1'b0)) | ((res_V_data_2_V_1_state == 2'd3) & (res_V_data_2_V_TREADY == 1'b0)) | ((res_V_data_1_V_1_state == 2'd3) & (res_V_data_1_V_TREADY == 1'b0)));
end

always @ (*) begin
    ap_block_state1_ignore_call10 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TREADY = (res_V_data_0_V_1_ack_in & ap_CS_fsm_state12);

assign grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TREADY = (res_V_data_1_V_1_ack_in & ap_CS_fsm_state12);

assign grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TREADY = (res_V_data_2_V_1_ack_in & ap_CS_fsm_state12);

assign grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TREADY = (res_V_data_3_V_1_ack_in & ap_CS_fsm_state12);

assign grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TREADY = (res_V_data_4_V_1_ack_in & ap_CS_fsm_state12);

assign res_V_data_0_V_1_ack_in = res_V_data_0_V_1_state[1'd1];

assign res_V_data_0_V_1_ack_out = res_V_data_0_V_TREADY;

assign res_V_data_0_V_1_load_A = (res_V_data_0_V_1_state_cmp_full & ~res_V_data_0_V_1_sel_wr);

assign res_V_data_0_V_1_load_B = (res_V_data_0_V_1_state_cmp_full & res_V_data_0_V_1_sel_wr);

assign res_V_data_0_V_1_sel = res_V_data_0_V_1_sel_rd;

assign res_V_data_0_V_1_state_cmp_full = ((res_V_data_0_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_V_data_0_V_1_vld_in = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_0_V_TVALID;

assign res_V_data_0_V_1_vld_out = res_V_data_0_V_1_state[1'd0];

assign res_V_data_0_V_TDATA = res_V_data_0_V_1_data_out;

assign res_V_data_0_V_TVALID = res_V_data_0_V_1_state[1'd0];

assign res_V_data_1_V_1_ack_in = res_V_data_1_V_1_state[1'd1];

assign res_V_data_1_V_1_ack_out = res_V_data_1_V_TREADY;

assign res_V_data_1_V_1_load_A = (res_V_data_1_V_1_state_cmp_full & ~res_V_data_1_V_1_sel_wr);

assign res_V_data_1_V_1_load_B = (res_V_data_1_V_1_state_cmp_full & res_V_data_1_V_1_sel_wr);

assign res_V_data_1_V_1_sel = res_V_data_1_V_1_sel_rd;

assign res_V_data_1_V_1_state_cmp_full = ((res_V_data_1_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_V_data_1_V_1_vld_in = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_1_V_TVALID;

assign res_V_data_1_V_1_vld_out = res_V_data_1_V_1_state[1'd0];

assign res_V_data_1_V_TDATA = res_V_data_1_V_1_data_out;

assign res_V_data_1_V_TVALID = res_V_data_1_V_1_state[1'd0];

assign res_V_data_2_V_1_ack_in = res_V_data_2_V_1_state[1'd1];

assign res_V_data_2_V_1_ack_out = res_V_data_2_V_TREADY;

assign res_V_data_2_V_1_load_A = (res_V_data_2_V_1_state_cmp_full & ~res_V_data_2_V_1_sel_wr);

assign res_V_data_2_V_1_load_B = (res_V_data_2_V_1_state_cmp_full & res_V_data_2_V_1_sel_wr);

assign res_V_data_2_V_1_sel = res_V_data_2_V_1_sel_rd;

assign res_V_data_2_V_1_state_cmp_full = ((res_V_data_2_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_V_data_2_V_1_vld_in = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_2_V_TVALID;

assign res_V_data_2_V_1_vld_out = res_V_data_2_V_1_state[1'd0];

assign res_V_data_2_V_TDATA = res_V_data_2_V_1_data_out;

assign res_V_data_2_V_TVALID = res_V_data_2_V_1_state[1'd0];

assign res_V_data_3_V_1_ack_in = res_V_data_3_V_1_state[1'd1];

assign res_V_data_3_V_1_ack_out = res_V_data_3_V_TREADY;

assign res_V_data_3_V_1_load_A = (res_V_data_3_V_1_state_cmp_full & ~res_V_data_3_V_1_sel_wr);

assign res_V_data_3_V_1_load_B = (res_V_data_3_V_1_state_cmp_full & res_V_data_3_V_1_sel_wr);

assign res_V_data_3_V_1_sel = res_V_data_3_V_1_sel_rd;

assign res_V_data_3_V_1_state_cmp_full = ((res_V_data_3_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_V_data_3_V_1_vld_in = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_3_V_TVALID;

assign res_V_data_3_V_1_vld_out = res_V_data_3_V_1_state[1'd0];

assign res_V_data_3_V_TDATA = res_V_data_3_V_1_data_out;

assign res_V_data_3_V_TVALID = res_V_data_3_V_1_state[1'd0];

assign res_V_data_4_V_1_ack_in = res_V_data_4_V_1_state[1'd1];

assign res_V_data_4_V_1_ack_out = res_V_data_4_V_TREADY;

assign res_V_data_4_V_1_load_A = (res_V_data_4_V_1_state_cmp_full & ~res_V_data_4_V_1_sel_wr);

assign res_V_data_4_V_1_load_B = (res_V_data_4_V_1_state_cmp_full & res_V_data_4_V_1_sel_wr);

assign res_V_data_4_V_1_sel = res_V_data_4_V_1_sel_rd;

assign res_V_data_4_V_1_state_cmp_full = ((res_V_data_4_V_1_state != 2'd1) ? 1'b1 : 1'b0);

assign res_V_data_4_V_1_vld_in = grp_softmax_stable_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s_fu_104_res_V_data_4_V_TVALID;

assign res_V_data_4_V_1_vld_out = res_V_data_4_V_1_state[1'd0];

assign res_V_data_4_V_TDATA = res_V_data_4_V_1_data_out;

assign res_V_data_4_V_TVALID = res_V_data_4_V_1_state[1'd0];

endmodule //softmax_array_array_ap_fixed_16_2_5_3_0_5u_softmax_config11_s
